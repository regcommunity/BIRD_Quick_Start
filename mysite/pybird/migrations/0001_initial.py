# Generated by Django 5.0.7 on 2024-07-15 17:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BIRD_ABSTRCT_INSTRMNT_RL_EIL",
            fields=[
                (
                    "BIRD_ABSTRCT_INSTRMNT_RL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ABSTRCT_INSTRMNT_RL_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "TYP_ABSTRCT_INSTRMNT_RL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_abstract_intrument_role",
                    ),
                ),
                (
                    "ABSTRCT_INSTRMNT_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Abstract_instrument_role_type",
                    ),
                ),
                (
                    "ACCMLTD_CHNG_NGTV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_changes",
                    ),
                ),
                (
                    "ACCMLTD_PRTL_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_partial_write_offs",
                    ),
                ),
                (
                    "ACCMLTD_TTL_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_total_write_offs",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "ACCNTNG_HDG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Accounting_hedge"),
                            ("2", "Not_accounting_hedge"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_hedge_indicator",
                    ),
                ),
                (
                    "APPLCTN_FRBRNC_STTS_DT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Current_reference_period_date"),
                            ("-1", "Any_date_Total_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Date_period_of_application_of_forbearance_measure",
                    ),
                ),
                (
                    "BLNC_SHT_RCGNSD_FFNCL_ASST_INSTRMNT_FR_VL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Balance_sheet_recognised_financial_asset_instrument_by_fair_value_type",
                    ),
                ),
                (
                    "CRRNT_LTV_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Current_loan_to_value_ratio",
                    ),
                ),
                (
                    "DBT_FNNCNG_RGLTN867_2016_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Debt_financing_according_to_AnaCredit"),
                            ("2", "Not_debt_financing_according_to_AnaCredit"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_financing_according_to_AnaCredit_indicator",
                    ),
                ),
                (
                    "DFLT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Default_status",
                    ),
                ),
                (
                    "DFLT_STTS_DRVD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Derived_default_status",
                    ),
                ),
                (
                    "ELGBL_GRNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Not_eligible_as_guarantee"),
                            ("2", "Eligible_as_guarantee"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Eligible_as_guarantee_indicator",
                    ),
                ),
                (
                    "EXPSR_RCRS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Recourse"),
                            ("2", "No_recourse"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="EXPSR_RCRS_INDCTR",
                    ),
                ),
                (
                    "FNNCL_ASST_INSTRMNT_TYP_CRR_123",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_asset_instrument_type_by_CRR_Article_123_Retail_exposure_",
                    ),
                ),
                (
                    "FNNCL_ASST_INSTRMNT_TYP_FXD_INTRST_RT",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_asset_instrument_type_by_fixed_interest_rate",
                    ),
                ),
                (
                    "FNNCL_ASST_INSTRMNT_TYP_INTRST_RT_ONL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_asset_instrument_type_by_interest_rate_only",
                    ),
                ),
                (
                    "FNNCL_ASST_INSTRMNT_TYP_RNGTTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_asset_instrument_type_by_renegotiation_status",
                    ),
                ),
                (
                    "FRBRNC_MSR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "11",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions",
                            ),
                            ("1", "Grace_period_payment_moratorium"),
                            ("3", "Extension_of_maturity_term"),
                            ("4", "Rescheduled_payments"),
                            ("5", "Debt_forgiveness"),
                            ("6", "Debt_asset_swaps"),
                            ("7", "Other_forbearance_measures"),
                            ("0", "Not_applicable"),
                            (
                                "10",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions_x2",
                            ),
                            ("8", "Forborne_Refinanced_debt"),
                            (
                                "9",
                                "Forborne_instruments_with_other_modified_terms_and_conditions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Forbearance_measure",
                    ),
                ),
                (
                    "FV_HRRCHY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Level_1"),
                            ("2", "Level_2"),
                            ("3", "Level_3"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_hierarchy",
                    ),
                ),
                (
                    "FVO_DSGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("2", "Management_on_a_fair_value_basis"),
                            ("5", "Management_of_credit_risk_Upon_designation"),
                            ("6", "Management_of_credit_risk_After_the_designation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_option_designation",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_status",
                    ),
                ),
                (
                    "INTL_IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Initial_impairment_status",
                    ),
                ),
                (
                    "INTRST_RT_RST_FRQNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "12",
                                "Other_than_overnight_monthly_quarterly_half_yearly_annually_or_at_creditor_discretion",
                            ),
                            ("16", "Overnight"),
                            ("18", "Quarterly"),
                            ("19", "Semi_annually"),
                            ("1", "Annual"),
                            ("3", "At_creditor_discretion"),
                            ("8", "Monthly"),
                            (
                                "15",
                                "Other_than_monthly_quarterly_half_yearly_annually_bullet_or_zero_coupon",
                            ),
                            ("22", "Zero_coupon"),
                            ("4", "Bullet"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Interest_rate_reset_frequency",
                    ),
                ),
                (
                    "LOCOM_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Is_LOCOM"),
                            ("2", "Is_not_LOCOM"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Lower_of_cost_or_market_LOCOM_indicator",
                    ),
                ),
                (
                    "LW_CRDT_RSK_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Low_credit_risk_instrument"),
                            ("2", "Not_low_credit_risk_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Low_credit_risk_indicator_for_Finrep",
                    ),
                ),
                (
                    "MLTPL_FRBRNC_MSRS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Multiple_forbearance_measures_in_place"),
                            ("2", "Not_multiple_forbearance_measures_in_place"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Multiple_forbearance_measures_in_place_indicator",
                    ),
                ),
                (
                    "NN_PRFRMNG_EXT_CRTR_MT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Failed_to_meet_the_non_performing_exit_criteria"),
                            (
                                "2",
                                "Still_able_to_meet_the_non_performing_exit_criteria",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_exit_criteria_met_indicator",
                    ),
                ),
                (
                    "NN_PRFRMNG_PRR_FRBRNC_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Non_performing_prior_to_forbearance"),
                            ("2", "Not_non_performing_prior_to_forbearance"),
                            ("1_x2", "Non_performing_prior_to_forbearance_x2"),
                            ("2_x2", "Not_non_performing_prior_to_forbearance_x2"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_prior_to_forbearance_indicator",
                    ),
                ),
                (
                    "PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Trading_book"),
                            ("2", "Non_trading_book"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Prudential_portfolio_type",
                    ),
                ),
                (
                    "PRFRMNG_FRBRN_EXPSR_UNDR_PRBTN_RCLSSFD_NN_PRFRMNG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Performing_forborne_exposure_under_probation"),
                            ("2", "Performing_forborne_exposure_not_under_probation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_forborne_exposure_under_probation_reclassified_from_non_performing_indicator",
                    ),
                ),
                (
                    "PRFRMNG_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_status",
                    ),
                ),
                (
                    "PRFRMNG_STTS_RSN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Failed_reclassification_to_performing_at_end_of_probation_period",
                            ),
                            ("2", "Exited_from_NPE_in_the_last_12_months"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="The_reason_for_the_choice_of_Performing_status",
                    ),
                ),
                (
                    "PRJCT_FNNC_LN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Project_finance_loan"),
                            ("2", "Non_project_finance_loan"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Project_finance_loan",
                    ),
                ),
                (
                    "PRPS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("12", "Residential_real_estate_purchase"),
                            ("13", "Commercial_real_estate_purchase"),
                            ("19", "Other_purposes"),
                            ("1", "Credit_for_consumption"),
                            ("4", "Margin_lending"),
                            ("6", "Imports"),
                            ("7", "Exports"),
                            ("8", "Construction_investment"),
                            ("9", "Working_capital_facility"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Purpose",
                    ),
                ),
                (
                    "PST_DU_FNNCL_ASST_INSTRMNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Past_due_financial_asset_instrument_indicator",
                    ),
                ),
                (
                    "PYMNT_FRQNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "12",
                                "Other_than_overnight_monthly_quarterly_half_yearly_annually_or_at_creditor_discretion",
                            ),
                            ("16", "Overnight"),
                            ("18", "Quarterly"),
                            ("19", "Semi_annually"),
                            ("1", "Annual"),
                            ("3", "At_creditor_discretion"),
                            ("8", "Monthly"),
                            (
                                "15",
                                "Other_than_monthly_quarterly_half_yearly_annually_bullet_or_zero_coupon",
                            ),
                            ("22", "Zero_coupon"),
                            ("4", "Bullet"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Payment_frequency",
                    ),
                ),
                (
                    "RCGNTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Entirely_recognised"),
                            (
                                "2",
                                "Recognised_to_the_extent_of_the_institution_s_continuing_involvement",
                            ),
                            ("3", "Entirely_derecognised"),
                            ("0", "Not_applicable"),
                            ("4", "Partially_derecognised"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Recognition",
                    ),
                ),
                (
                    "RFRNC_RT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("100", "EURIBOR_8M"),
                            ("101", "USD_LIBOR_8M"),
                            ("102", "GBP_LIBOR_8M"),
                            ("103", "EUR_LIBOR_8M"),
                            ("104", "JPY_LIBOR_8M"),
                            ("105", "CHF_LIBOR_8M"),
                            ("106", "MIBOR_8M"),
                            ("107", "other_single_reference_rate_8M"),
                            ("108", "multiple_reference_rates_8M"),
                            ("109", "EURIBOR_9M"),
                            ("10", "EURIBOR_1W"),
                            ("110", "USD_LIBOR_9M"),
                            ("111", "GBP_LIBOR_9M"),
                            ("112", "EUR_LIBOR_9M"),
                            ("113", "JPY_LIBOR_9M"),
                            ("114", "CHF_LIBOR_9M"),
                            ("115", "MIBOR_9M"),
                            ("116", "other_single_reference_rate_9M"),
                            ("117", "multiple_reference_rates_9M"),
                            ("118", "EURIBOR_10M"),
                            ("119", "USD_LIBOR_10M"),
                            ("11", "USD_LIBOR_1W"),
                            ("120", "GBP_LIBOR_10M"),
                            ("121", "EUR_LIBOR_10M"),
                            ("122", "JPY_LIBOR_10M"),
                            ("123", "CHF_LIBOR_10M"),
                            ("124", "MIBOR_10M"),
                            ("125", "other_single_reference_rate_10M"),
                            ("126", "multiple_reference_rates_10M"),
                            ("127", "EURIBOR_11M"),
                            ("128", "USD_LIBOR_11M"),
                            ("129", "GBP_LIBOR_11M"),
                            ("12", "GBP_LIBOR_1W"),
                            ("130", "EUR_LIBOR_11M"),
                            ("131", "JPY_LIBOR_11M"),
                            ("132", "CHF_LIBOR_11M"),
                            ("133", "MIBOR_11M"),
                            ("134", "other_single_reference_rate_11M"),
                            ("135", "multiple_reference_rates_11M"),
                            ("136", "EURIBOR_12M"),
                            ("137", "USD_LIBOR_12M"),
                            ("138", "GBP_LIBOR_12M"),
                            ("139", "EUR_LIBOR_12M"),
                            ("13", "EUR_LIBOR_1W"),
                            ("140", "JPY_LIBOR_12M"),
                            ("141", "CHF_LIBOR_12M"),
                            ("142", "MIBOR_12M"),
                            ("143", "other_single_reference_rate_12M"),
                            ("144", "multiple_reference_rates_12M"),
                            ("145", "EONIA"),
                            ("14", "JPY_LIBOR_1W"),
                            ("15", "CHF_LIBOR_1W"),
                            ("16", "MIBOR_1W"),
                            ("17", "other_single_reference_rate_1W"),
                            ("18", "multiple_reference_rates_1W"),
                            ("19", "EURIBOR_2W"),
                            ("20", "USD_LIBOR_2W"),
                            ("21", "GBP_LIBOR_2W"),
                            ("22", "EUR_LIBOR_2W"),
                            ("23", "JPY_LIBOR_2W"),
                            ("24", "CHF_LIBOR_2W"),
                            ("25", "MIBOR_2W"),
                            ("26", "other_single_reference_rate_2W"),
                            ("27", "multiple_reference_rates_2W"),
                            ("28", "EURIBOR_3W"),
                            ("29", "USD_LIBOR_3W"),
                            ("2", "USD_LIBOR_ON"),
                            ("30", "GBP_LIBOR_3W"),
                            ("31", "EUR_LIBOR_3W"),
                            ("32", "JPY_LIBOR_3W"),
                            ("33", "CHF_LIBOR_3W"),
                            ("34", "MIBOR_3W"),
                            ("35", "other_single_reference_rate_3W"),
                            ("36", "multiple_reference_rates_3W"),
                            ("37", "EURIBOR_1M"),
                            ("38", "USD_LIBOR_1M"),
                            ("39", "GBP_LIBOR_1M"),
                            ("3", "GBP_LIBOR_ON"),
                            ("40", "EUR_LIBOR_1M"),
                            ("41", "JPY_LIBOR_1M"),
                            ("42", "CHF_LIBOR_1M"),
                            ("43", "MIBOR_1M"),
                            ("44", "other_single_reference_rate_1M"),
                            ("45", "multiple_reference_rates_1M"),
                            ("46", "EURIBOR_2M"),
                            ("47", "USD_LIBOR_2M"),
                            ("48", "GBP_LIBOR_2M"),
                            ("49", "EUR_LIBOR_2M"),
                            ("4", "EUR_LIBOR_ON"),
                            ("50", "JPY_LIBOR_2M"),
                            ("51", "CHF_LIBOR_2M"),
                            ("52", "MIBOR_2M"),
                            ("53", "other_single_reference_rate_2M"),
                            ("54", "multiple_reference_rates_2M"),
                            ("55", "EURIBOR_3M"),
                            ("56", "USD_LIBOR_3M"),
                            ("57", "GBP_LIBOR_3M"),
                            ("58", "EUR_LIBOR_3M"),
                            ("5", "JPY_LIBOR_ON"),
                            ("59", "JPY_LIBOR_3M"),
                            ("60", "CHF_LIBOR_3M"),
                            ("61", "MIBOR_3M"),
                            ("62", "other_single_reference_rate_3M"),
                            ("63", "multiple_reference_rates_3M"),
                            ("64", "EURIBOR_4M"),
                            ("65", "USD_LIBOR_4M"),
                            ("66", "GBP_LIBOR_4M"),
                            ("67", "EUR_LIBOR_4M"),
                            ("68", "JPY_LIBOR_4M"),
                            ("69", "CHF_LIBOR_4M"),
                            ("6", "CHF_LIBOR_ON"),
                            ("70", "MIBOR_4M"),
                            ("71", "other_single_reference_rate_4M"),
                            ("72", "multiple_reference_rates_4M"),
                            ("73", "EURIBOR_5M"),
                            ("74", "USD_LIBOR_5M"),
                            ("75", "GBP_LIBOR_5M"),
                            ("76", "EUR_LIBOR_5M"),
                            ("77", "JPY_LIBOR_5M"),
                            ("78", "CHF_LIBOR_5M"),
                            ("79", "MIBOR_5M"),
                            ("7", "MIBOR_ON"),
                            ("80", "other_single_reference_rate_5M"),
                            ("81", "multiple_reference_rates_5M"),
                            ("82", "EURIBOR_6M"),
                            ("83", "USD_LIBOR_6M"),
                            ("84", "GBP_LIBOR_6M"),
                            ("85", "EUR_LIBOR_6M"),
                            ("86", "JPY_LIBOR_6M"),
                            ("87", "CHF_LIBOR_6M"),
                            ("88", "MIBOR_6M"),
                            ("89", "other_single_reference_rate_6M"),
                            ("8", "other_single_reference_rate_ON"),
                            ("90", "multiple_reference_rates_6M"),
                            ("91", "EURIBOR_7M"),
                            ("92", "USD_LIBOR_7M"),
                            ("93", "GBP_LIBOR_7M"),
                            ("94", "EUR_LIBOR_7M"),
                            ("95", "JPY_LIBOR_7M"),
                            ("96", "CHF_LIBOR_7M"),
                            ("97", "MIBOR_7M"),
                            ("98", "other_single_reference_rate_7M"),
                            ("99", "multiple_reference_rates_7M"),
                            ("9", "multiple_reference_rates_ON"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reference_rate",
                    ),
                ),
                (
                    "SBJCT_IMPRMNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Subject_to_impairment"),
                            ("2", "Not_subject_to_impairment"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subject_to_impairment_indicator",
                    ),
                ),
                (
                    "SBRDNTD_DBT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Subordinated_debt"),
                            ("2", "Non_subordinated_debt"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subordinated_debt",
                    ),
                ),
                (
                    "TM_PST_DU_BND",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Time_past_due_band",
                    ),
                ),
                (
                    "TM_SNC_INTL_RCGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TM_SNC_INTL_RCGNTN",
                    ),
                ),
                (
                    "TRNSFR_IMPRMNT_STGS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("3", "To_stage_2_from_stage_1"),
                            ("4", "To_stage_2_from_stage_3"),
                            ("1", "To_stage_1_from_stage_2"),
                            ("6", "To_stage_3_from_stage_2"),
                            ("2", "To_stage_1_from_stage_3"),
                            ("5", "To_stage_3_from_stage_1"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Transfer_between_impairment_stages",
                    ),
                ),
                (
                    "TYP_AMRTSTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "French"),
                            ("2", "German"),
                            ("3", "Fixed_amortisation_schedule"),
                            ("4", "Bullet"),
                            (
                                "5",
                                "Amortisation_types_other_than_French_German_Fixed_amortisation_schedule_or_bullet",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_amortisation",
                    ),
                ),
                (
                    "TYP_HDG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "11",
                                "Hedges_other_than_cash_flow_hedge_and_hedge_of_net_investment_in_a_foreign_operation",
                            ),
                            ("12", "Economic_hedge_With_use_of_fair_value_option"),
                            ("1", "Fair_value_hedge"),
                            ("2", "Cash_flow_hedge"),
                            ("3", "Hedge_of_a_net_investment_in_a_foreign_operation"),
                            ("4", "Portfolio_fair_value_hedges_of_interest_rate_risk"),
                            ("5", "Portfolio_cash_flow_hedges_of_interest_rate_risk"),
                            ("6", "Cost_price_hedge"),
                            (
                                "7",
                                "Other_than_Fair_value_hedge_Cash_flow_hedge_Hedge_of_a_net_investment_in_a_foreign_operation_Portfolio_fair_value_hedges_of_interest_rate_risk_Portfolio_cash_flow_hedges_of_interest_rate_risk_Cost_price_hedge",
                            ),
                            ("8", "Not_a_hedge"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_hedge",
                    ),
                ),
                (
                    "TYP_INTRST_RT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Fixed"),
                            ("2", "Variable"),
                            ("3", "Mixed"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_interest_rate",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "ACCMLTD_IMPRMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_impairment",
                    ),
                ),
                (
                    "ACCMLTD_NGTV_VL_ADJSTMNT_MR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_value_adjustments_Market_risk_induced",
                    ),
                ),
                (
                    "ACCMLTD_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_write_offs",
                    ),
                ),
                (
                    "ACCRD_INTRST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accrued_interest_accounting_",
                    ),
                ),
                (
                    "ANNLSD_AGRD_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Interest_rate",
                    ),
                ),
                (
                    "ARRRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Arrears_for_the_instrument",
                    ),
                ),
                (
                    "CMLTV_RCVRS_SNC_DFLT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Cumulative_recoveries_since_default",
                    ),
                ),
                (
                    "CMMTMNT_INCPTN",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Commitment_amount_at_inception",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "DT_DFLT_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_default_status",
                    ),
                ),
                (
                    "DT_END_INTRST_ONLY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="End_date_of_the_interest_only_period",
                    ),
                ),
                (
                    "DT_FRBRNC_MSRS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_forbearance_measure",
                    ),
                ),
                (
                    "DT_FRBRNC_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_forbearance_and_renegotiation_status",
                    ),
                ),
                (
                    "DT_INCPTN",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Inception_date",
                    ),
                ),
                (
                    "DT_NN_PRFRMNG_STTS_INSTRMNT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_non_performing_status",
                    ),
                ),
                (
                    "DT_NXT_INTRST_RT_RST",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Next_interest_rate_reset_date",
                    ),
                ),
                (
                    "DT_PST_D",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_past_due",
                    ),
                ),
                (
                    "DT_STTLMNT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Settlement_date",
                    ),
                ),
                (
                    "FRBRNC_MSR_CNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Forbearance_measure_count",
                    ),
                ),
                (
                    "FRZNG_PRD_DYS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Freezing_period_in_days",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "FV_CHNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_change",
                    ),
                ),
                (
                    "FV_CHNG_CR_BFR_PRCHS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_changes_due_to_changes_in_credit_risk_before_purchase",
                    ),
                ),
                (
                    "FV_CHNGS_HDG_ACCNTNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_changes_due_to_hedge_accounting",
                    ),
                ),
                (
                    "GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    ),
                ),
                (
                    "GNRL_ALLWNCS_BNK_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_bank_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "GNRL_ALLWNCS_CRDT_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_credit_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT_E_INTRST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount_excluding_accrued_interest",
                    ),
                ),
                (
                    "HRCTS_TRDNG_PSTNS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Haircuts_for_trading_positions_valued_at_fair_value",
                    ),
                ),
                (
                    "INTRST_RT_CP",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Interest_rate_cap",
                    ),
                ),
                (
                    "INTRST_RT_FLR",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Interest_rate_floor",
                    ),
                ),
                (
                    "INTRST_RT_SPRD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Interest_rate_spread_margin",
                    ),
                ),
                (
                    "PRVSNS_OFF_BLNC_SHT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Provisions_associated_with_off_balance_sheet_exposures",
                    ),
                ),
                (
                    "STRT_DT_PRD",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Start_date_of_the_period",
                    ),
                ),
                (
                    "TKN_PSSSSN_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Taken_into_possession_date",
                    ),
                ),
            ],
            options={
                "verbose_name": "Abstract_instrument_role",
                "verbose_name_plural": "Abstract_instrument_roles",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ASST_PL_EIL",
            fields=[
                (
                    "BIRD_ASST_PL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ASST_PL_EIL_uniqueID",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "ASST_PL_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Asset_pool_Reference_date",
                    ),
                ),
                (
                    "ASST_PL_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Asset_pool_subject_to_a_Covered_bond_program_"),
                            (
                                "2",
                                "Asset_pool_subject_to_a_credit_transfer_other_than_securitisation_and_covered_bond_program_",
                            ),
                            ("3", "Asset_pool_subject_to_a_Securitisation_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_subject_to_securitisation_and_other_credit_transfer_type",
                    ),
                ),
                (
                    "PRMRY_ASST_CLSS_CVR_PL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "a",
                                "Exposures_to_or_guaranteed_by_central_governments_ESCB_central_banks_public_sector_entities_regional_governments_or_local_authorities_in_the_Union",
                            ),
                            (
                                "b",
                                "Exposures_to_or_guaranteed_by_third_country_central_governments_third_country_central_banks_multilateral_development_banks_international_organisations_that_fullfill_specific_requirements",
                            ),
                            (
                                "c",
                                "Exposures_to_institutions_that_fullfilll_specific_requirements",
                            ),
                            (
                                "d",
                                "Loans_secured_by_i_residential_property_or_ii_senior_units_issued_by_French_Fonds_Communs_de_Titrisation_or_equivalent_securitisation_entities_governed_by_the_laws_of_a_Member_State_securitising_residential_property_exposures",
                            ),
                            (
                                "e",
                                "Residential_loans_fully_guaranteed_by_an_eligible_rpotection_provider",
                            ),
                            (
                                "f",
                                "Loans_secured_by_1_commercial_immovable_property_or_ii_senior_units_issued_by_French_Fonds_Communs_de_Titrisation_or_equivalent_securitisation_entities_governed_by_the_law_of_a_Member_State_securitising_commercial_immovable_property_exposures_",
                            ),
                            (
                                "g",
                                "Loans_secured_y_maritime_liens_on_ships_up_to_the_difference_between_60_of_the_value_of_the_pledged_ship_and_the_value_of_any_prior_maritime_liens",
                            ),
                            ("h", "Other_exposures"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Primary_asset_class_of_cover_pool",
                    ),
                ),
                (
                    "TRTMNT_TRNSFRRD_ASSTS_BLNC_SHT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Entirely_recognised"),
                            (
                                "2",
                                "Recognised_to_the_extent_of_the_institution_s_continuing_involvement",
                            ),
                            ("3", "Entirely_derecognised"),
                            ("0", "Not_applicable"),
                            ("4", "Partially_derecognised"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TRTMNT_TRNSFRRD_ASSTS_BLNC_SHT",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asset_pool_subject_to_a_Securitisation_and_other_credit_transfer_",
                "verbose_name_plural": "Asset_pool_subject_to_a_Securitisation_and_other_credit_transfer_s",
            },
        ),
        migrations.CreateModel(
            name="BIRD_BLNC_SHT_NTTNG_EIL",
            fields=[
                (
                    "BIRD_BLNC_SHT_NTTNG_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_BLNC_SHT_NTTNG_EIL_uniqueID",
                    ),
                ),
                (
                    "BLNC_SHT_NTTNG_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Balance_sheet_netting_identifier",
                    ),
                ),
                (
                    "BLNC_SHT_NTTNG_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Balance_sheet_netting_Reference_date",
                    ),
                ),
                (
                    "BLNC_SHT_NTTNG_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Balance_sheet_netting_Reporting_agent_identifier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Balance_sheet_netting",
                "verbose_name_plural": "Balance_sheet_nettings",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CLLTRL_EIL",
            fields=[
                (
                    "BIRD_CLLTRL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CLLTRL_EIL_uniqueID",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ANNX_PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_annex_Protection_arrangement_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "CLLTRL_OBTND_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("61", "Collateral_obtained_by_taking_possession"),
                            ("62", "Not_obtained_collateral"),
                            ("0", "Not_applicable"),
                            ("90", "Real_estate_collateral_located_in_a_member_state"),
                            (
                                "91",
                                "Real_estate_collateral_not_located_in_a_member_state",
                            ),
                            (
                                "106",
                                "Offices_and_commercial_premises_not_related_to_land_collateral",
                            ),
                            ("107", "Land_excluding_agriculture"),
                            ("108", "Land_including_agriculture"),
                            ("109", "Immaterial_rights_as_collateral"),
                            ("111", "Other_immaterial_rights_collateral"),
                            ("110", "Software_collateral"),
                            ("10", "Commercial_real_estate_collateral"),
                            ("12", "Securities"),
                            ("13", "Gold"),
                            ("17", "Trade_receivables"),
                            ("2", "Life_insurance_policies_pledged"),
                            ("72", "Other_financial_protection"),
                            ("77", "Currency"),
                            ("81", "Aircraft_collateral"),
                            ("83", "Ship_collateral"),
                            ("84", "Rolling_stock_collateral"),
                            ("85", "Machinery_and_equiptment_collateral"),
                            ("86", "Inventory_collateral"),
                            ("88", "Other_non_registered_collateral"),
                            ("89", "Other_commodity_collateral"),
                            ("8", "Residential_real_estate_collateral"),
                            ("66", "Exchange_tradable_derivative_collateral"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Obtained_collateral_type",
                    ),
                ),
                (
                    "ACCMLTD_CHNG_NGTV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_changes",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "DT_ORGNL_PRTCTN_VL",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_original_protection_value",
                    ),
                ),
                (
                    "DT_PRTCTN_VL",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_protection_value",
                    ),
                ),
                (
                    "NN_MMBR_STT_CNTRY_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_reporting_member_state_Country_code",
                    ),
                ),
                (
                    "ORGNL_PRTCTN_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Original_protection_value",
                    ),
                ),
                (
                    "PLNNNG_PRMSSN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Land_with_planning_permission_for_developnment"),
                            ("2", "Land_without_planning_permission_for_development"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Planning_permission_for_development_indicator",
                    ),
                ),
                (
                    "RL_ESTT_CLLTRL_LCTN_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("61", "Collateral_obtained_by_taking_possession"),
                            ("62", "Not_obtained_collateral"),
                            ("0", "Not_applicable"),
                            ("90", "Real_estate_collateral_located_in_a_member_state"),
                            (
                                "91",
                                "Real_estate_collateral_not_located_in_a_member_state",
                            ),
                            (
                                "106",
                                "Offices_and_commercial_premises_not_related_to_land_collateral",
                            ),
                            ("107", "Land_excluding_agriculture"),
                            ("108", "Land_including_agriculture"),
                            ("109", "Immaterial_rights_as_collateral"),
                            ("111", "Other_immaterial_rights_collateral"),
                            ("110", "Software_collateral"),
                            ("10", "Commercial_real_estate_collateral"),
                            ("12", "Securities"),
                            ("13", "Gold"),
                            ("17", "Trade_receivables"),
                            ("2", "Life_insurance_policies_pledged"),
                            ("72", "Other_financial_protection"),
                            ("77", "Currency"),
                            ("81", "Aircraft_collateral"),
                            ("83", "Ship_collateral"),
                            ("84", "Rolling_stock_collateral"),
                            ("85", "Machinery_and_equiptment_collateral"),
                            ("86", "Inventory_collateral"),
                            ("88", "Other_non_registered_collateral"),
                            ("89", "Other_commodity_collateral"),
                            ("8", "Residential_real_estate_collateral"),
                            ("66", "Exchange_tradable_derivative_collateral"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Real_estate_collateral_location_type",
                    ),
                ),
                (
                    "TM_SNC_INTL_RCGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TM_SNC_INTL_RCGNTN",
                    ),
                ),
                (
                    "TRRTRL_UNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Territorial_unit",
                    ),
                ),
                (
                    "TYP_CLLTRL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("61", "Collateral_obtained_by_taking_possession"),
                            ("62", "Not_obtained_collateral"),
                            ("0", "Not_applicable"),
                            ("90", "Real_estate_collateral_located_in_a_member_state"),
                            (
                                "91",
                                "Real_estate_collateral_not_located_in_a_member_state",
                            ),
                            (
                                "106",
                                "Offices_and_commercial_premises_not_related_to_land_collateral",
                            ),
                            ("107", "Land_excluding_agriculture"),
                            ("108", "Land_including_agriculture"),
                            ("109", "Immaterial_rights_as_collateral"),
                            ("111", "Other_immaterial_rights_collateral"),
                            ("110", "Software_collateral"),
                            ("10", "Commercial_real_estate_collateral"),
                            ("12", "Securities"),
                            ("13", "Gold"),
                            ("17", "Trade_receivables"),
                            ("2", "Life_insurance_policies_pledged"),
                            ("72", "Other_financial_protection"),
                            ("77", "Currency"),
                            ("81", "Aircraft_collateral"),
                            ("83", "Ship_collateral"),
                            ("84", "Rolling_stock_collateral"),
                            ("85", "Machinery_and_equiptment_collateral"),
                            ("86", "Inventory_collateral"),
                            ("88", "Other_non_registered_collateral"),
                            ("89", "Other_commodity_collateral"),
                            ("8", "Residential_real_estate_collateral"),
                            ("66", "Exchange_tradable_derivative_collateral"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_collateral",
                    ),
                ),
                (
                    "TYP_PRTCTN_VL_APPRCH",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Counterparty_estimation"),
                            ("2", "Creditor_valuation"),
                            ("3", "Mark_to_market"),
                            ("4", "Other_type_of_valuation"),
                            ("5", "Third_party_valuation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_protection_valuation_approach_for_notional_amount",
                    ),
                ),
                (
                    "UNDR_CNSTRCTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Under_construction_or_development"),
                            ("2", "Not_under_construction_or_development"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Under_construction_or_development_indicator",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "ACCMLTD_IMPRMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_impairment",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    ),
                ),
                (
                    "INTL_RCGNTN_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Initial_recognition_value",
                    ),
                ),
                (
                    "LT_SSTNBL_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Long_term_sustainable_value_amount_of_the_collateral",
                    ),
                ),
                (
                    "MRKT_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Market_value_amount_of_the_collateral",
                    ),
                ),
                (
                    "NTNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Notional_amount",
                    ),
                ),
                (
                    "PSTL_CD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Postal_code",
                    ),
                ),
                (
                    "TKN_PSSSSN_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Taken_into_possession_date",
                    ),
                ),
            ],
            options={
                "verbose_name": "Collateral",
                "verbose_name_plural": "Collaterals",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_FCLTY_EIL",
            fields=[
                (
                    "BIRD_CRDT_FCLTY_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_FCLTY_EIL_uniqueID",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_identifier",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "ACCMLTD_NGTV_VL_ADJSTMNT_MR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_value_adjustments_Market_risk_induced",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "APPRCH_CRDT_QLTY_STTS",
                    models.CharField(
                        blank=True,
                        choices=[("1", "Debtor_based"), ("2", "Transaction_based")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Assessment_approach_for_credit_quality_status",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "DFLT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Default_status",
                    ),
                ),
                (
                    "DFLT_STTS_DRVD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Derived_default_status",
                    ),
                ),
                (
                    "DT_INCPTN",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Inception_date",
                    ),
                ),
                (
                    "DT_LGL_FNL_MTRTY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Legal_final_maturity_date",
                    ),
                ),
                (
                    "DT_PRFRMNG_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_the_performing_status_of_the_instrument",
                    ),
                ),
                (
                    "DT_PST_D",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_past_due",
                    ),
                ),
                (
                    "DT_STTLMNT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Settlement_date",
                    ),
                ),
                (
                    "FRBRNC_MSR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "11",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions",
                            ),
                            ("1", "Grace_period_payment_moratorium"),
                            ("3", "Extension_of_maturity_term"),
                            ("4", "Rescheduled_payments"),
                            ("5", "Debt_forgiveness"),
                            ("6", "Debt_asset_swaps"),
                            ("7", "Other_forbearance_measures"),
                            ("0", "Not_applicable"),
                            (
                                "10",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions_x2",
                            ),
                            ("8", "Forborne_Refinanced_debt"),
                            (
                                "9",
                                "Forborne_instruments_with_other_modified_terms_and_conditions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Forbearance_measure",
                    ),
                ),
                (
                    "FRZNG_PRD_DYS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Freezing_period_in_days",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "GNRL_ALLWNCS_BNK_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_bank_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "GNRL_ALLWNCS_CRDT_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_credit_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_status",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "NN_PRFRMNG_PRR_FRBRNC_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Non_performing_prior_to_forbearance"),
                            ("2", "Not_non_performing_prior_to_forbearance"),
                            ("1_x2", "Non_performing_prior_to_forbearance_x2"),
                            ("2_x2", "Not_non_performing_prior_to_forbearance_x2"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_prior_to_forbearance_indicator",
                    ),
                ),
                (
                    "PRFRMNG_FRBRN_EXPSR_UNDR_PRBTN_RCLSSFD_NN_PRFRMNG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Performing_forborne_exposure_under_probation"),
                            ("2", "Performing_forborne_exposure_not_under_probation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_forborne_exposure_under_probation_reclassified_from_non_performing_indicator",
                    ),
                ),
                (
                    "PRFRMNG_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_status",
                    ),
                ),
                (
                    "PRFRMNG_STTS_RSN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Failed_reclassification_to_performing_at_end_of_probation_period",
                            ),
                            ("2", "Exited_from_NPE_in_the_last_12_months"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="The_reason_for_the_choice_of_Performing_status",
                    ),
                ),
                (
                    "PRVSNS_OFF_BLNC_SHT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Provisions_associated_with_off_balance_sheet_exposures",
                    ),
                ),
                (
                    "RNGTTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "9",
                                "Renegotiated_instrument_without_forbearance_measures",
                            ),
                            ("1", "Exposure_with_forbearance_measures"),
                            ("3", "Forborne_Refinanced_debt"),
                            (
                                "5",
                                "Forborne_instruments_with_other_modified_terms_and_conditions",
                            ),
                            (
                                "4",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions",
                            ),
                            (
                                "11",
                                "Exposure_with_forbearance_measures_Forborne_more_than_twice",
                            ),
                            (
                                "12",
                                "Exposure_with_forbearance_measures_Forbearance_measures_granted_in_addition_to_already_existing_forbearance_measures",
                            ),
                            ("10", "Exposure_with_forbearance_measures_Forborne_twice"),
                            ("3_x2", "Forborne_Refinanced_debt_x2"),
                            (
                                "5_x2",
                                "Forborne_instruments_with_other_modified_terms_and_conditions_x2",
                            ),
                            (
                                "4_x2",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions_x2",
                            ),
                            (
                                "11_x2",
                                "Exposure_with_forbearance_measures_Forborne_more_than_twice_x2",
                            ),
                            (
                                "12_x2",
                                "Exposure_with_forbearance_measures_Forbearance_measures_granted_in_addition_to_already_existing_forbearance_measures_x2",
                            ),
                            (
                                "10_x2",
                                "Exposure_with_forbearance_measures_Forborne_twice_x2",
                            ),
                            ("3_x3", "Forborne_Refinanced_debt_x3"),
                            (
                                "5_x3",
                                "Forborne_instruments_with_other_modified_terms_and_conditions_x3",
                            ),
                            (
                                "4_x3",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions_x3",
                            ),
                            (
                                "11_x3",
                                "Exposure_with_forbearance_measures_Forborne_more_than_twice_x3",
                            ),
                            (
                                "12_x3",
                                "Exposure_with_forbearance_measures_Forbearance_measures_granted_in_addition_to_already_existing_forbearance_measures_x3",
                            ),
                            (
                                "10_x3",
                                "Exposure_with_forbearance_measures_Forborne_twice_x3",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Renegotiation_status",
                    ),
                ),
                (
                    "RTL_EXPSR_ACCRDNG_CRR_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Retail_exposure_accordign_to_CRR_Article_123_b_"),
                            (
                                "2",
                                "Not_retail_exposure_accordign_to_CRR_Article_123_b_",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Retail_exposure_according_to_CRR_Article_123_b_indicator",
                    ),
                ),
                (
                    "RVCBL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Revocable"),
                            ("2", "Not_revocable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Revocable_indicator",
                    ),
                ),
                (
                    "TM_PST_DU_BND",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Time_past_due_band",
                    ),
                ),
                (
                    "TYP_CRDT_FCLTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("10", "Loans_commitments_received"),
                            ("11", "Other_commitments_received"),
                            (
                                "12",
                                "To_lend_or_to_provide_acceptance_facilities_at_a_below_market_interest_rate",
                            ),
                            (
                                "13",
                                "To_lend_or_to_provide_acceptance_facilities_under_pre_specified_terms_and_conditions_other_than_those_at_a_below_market_interest_rate",
                            ),
                            (
                                "14",
                                "To_lend_or_to_provide_acceptance_facilities_where_the_terms_and_conditions_are_not_under_pre_specified",
                            ),
                            ("15", "To_provide_guarantees"),
                            ("16", "To_purchase_securities"),
                            ("17", "For_tender_and_performance_guarantees"),
                            ("18", "Other_Credit_Facilities"),
                            ("1", "Forward_deposits"),
                            (
                                "2",
                                "Unpaid_portion_of_partly_paid_shares_and_securities",
                            ),
                            ("3", "Documentary_credits_issued_or_confirmed"),
                            ("4", "Trade_finance_off_balance_sheet_items"),
                            (
                                "5",
                                "Documentary_credits_in_which_underlying_shipment_acts_as_collateral_and_other_self_liquidating_transactions",
                            ),
                            (
                                "6",
                                "Warranties_and_indemnities__including_tender_and_performance_bonds_and__guarantees_not_having_the_character_of_credit_substitutes",
                            ),
                            ("7", "Shipping_guarantees_customs_and_tax_bonds"),
                            (
                                "8",
                                "Note_issuance_facilities__NIFs_and__Revolving_underwritings_facilities__RUFs_",
                            ),
                            ("9", "Other_off_balance_sheet_items"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_credit_facility",
                    ),
                ),
                (
                    "ANNLSD_AGRD_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Interest_rate",
                    ),
                ),
                (
                    "DT_DFLT_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_default_status",
                    ),
                ),
                (
                    "DT_FRBRNC_MSRS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_forbearance_measure",
                    ),
                ),
                (
                    "DT_FRBRNC_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_forbearance_and_renegotiation_status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_facility",
                "verbose_name_plural": "Credit_facilitys",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CSH_HND_EIL",
            fields=[
                (
                    "BIRD_CSH_HND_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CSH_HND_EIL_uniqueID",
                    ),
                ),
                (
                    "CSH_HND_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Cash_on_hand_Reference_date",
                    ),
                ),
                (
                    "CSH_HND_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Cash_on_hand_Reporting_agent_identifier",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cash_on_hand",
                "verbose_name_plural": "Cash_on_hands",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ENTTY_RL_EIL",
            fields=[
                (
                    "BIRD_ENTTY_RL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ENTTY_RL_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "ENTTY_GRP_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Entity_group_role_type",
                    ),
                ),
                (
                    "ENTTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Entity_role_type",
                    ),
                ),
                (
                    "ENTTY_TRNSCTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Entity_transaction_role_type",
                    ),
                ),
                (
                    "EQTY",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Equity"
                    ),
                ),
                (
                    "PRFT_LSS",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Profit_loss_"
                    ),
                ),
                (
                    "SHR_CPTL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Share_capital",
                    ),
                ),
                (
                    "TTL_ASSTS",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Total_assets"
                    ),
                ),
            ],
            options={
                "verbose_name": "Entity_role",
                "verbose_name_plural": "Entity_roles",
            },
        ),
        migrations.CreateModel(
            name="BIRD_FNNCL_CNTRCT_EIL",
            fields=[
                (
                    "BIRD_FNNCL_CNTRCT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_FNNCL_CNTRCT_EIL_uniqueID",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_identifier",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Financial_contract_Reference_date",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_Reporting_agent_identifier",
                    ),
                ),
                (
                    "SYNDCTD_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Syndicated_contract_identifier",
                    ),
                ),
                (
                    "DT_INCPTN",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Inception_date",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Single_financial_contract"),
                            ("2", "Syndicated_financial_contract_member"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_type",
                    ),
                ),
                (
                    "DT_LGL_FNL_MTRTY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Legal_final_maturity_date",
                    ),
                ),
            ],
            options={
                "verbose_name": "Financial_contract",
                "verbose_name_plural": "Financial_contracts",
            },
        ),
        migrations.CreateModel(
            name="BIRD_GRP_EIL",
            fields=[
                (
                    "BIRD_GRP_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_GRP_EIL_uniqueID",
                    ),
                ),
                (
                    "GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_ID",
                    ),
                ),
                (
                    "GRP_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Group_Reference_date",
                    ),
                ),
                (
                    "GRP_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_Reporting_agent_identifier",
                    ),
                ),
                (
                    "TYP_GRP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("13", "Group_of_consolidated_clients"),
                            ("14", "Accounting_consolidation_group"),
                            ("15", "Prudential_consolidation_group"),
                            ("16", "Subsidiary_joint_venture_and_associate"),
                            ("4", "Other_group_of_clients"),
                            ("6", "Group_of_connected_clients"),
                            ("17", "Foreign_institutional_unit"),
                            ("18", "Domestic_institutional_unit"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Group",
                "verbose_name_plural": "Groups",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INTRST_RT_RSK_HDG_PRTFL_EIL",
            fields=[
                (
                    "BIRD_INTRST_RT_RSK_HDG_PRTFL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INTRST_RT_RSK_HDG_PRTFL_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "HDGD_PRTFL_ASST_LBLTY_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Hedged_portfolio_assets"),
                            ("2", "Hedged_portfolio_liabilities"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Hedged_portfolio_asset_or_liability_indicator",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DMSTC_ACTVT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Domestic_activities"),
                            ("2", "Non_Domestic_activities"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Domestic_activities_indicator",
                    ),
                ),
                (
                    "HDGD_ITMS_FV_CHNGS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Hedged_items_fair_value_changes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Interest_rate_risk_hedge_portfolio",
                "verbose_name_plural": "Interest_rate_risk_hedge_portfolios",
            },
        ),
        migrations.CreateModel(
            name="BIRD_KB_PR_BCKT_EIL",
            fields=[
                (
                    "BIRD_KB_PR_BCKT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_KB_PR_BCKT_EIL_uniqueID",
                    ),
                ),
                (
                    "BCKT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Bucket_identifier",
                    ),
                ),
                (
                    "GIRR_DLTA_RSK_PSTN",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_interest_rate_risk_GIRR_delta_Risk_position_Kb_",
                    ),
                ),
            ],
            options={
                "verbose_name": "Risk_position_Kb_per_bucket_derived_data",
                "verbose_name_plural": "Risk_position_Kb_per_bucket_derived_datas",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "IMPRMNT_ASSSSMNT_MTHD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Collectively_assessed"),
                            ("2", "Individually_assessed"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_assessment_method",
                    ),
                ),
                (
                    "IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_status",
                    ),
                ),
                (
                    "NN_PRFRMNG_PRR_FRBRNC_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Non_performing_prior_to_forbearance"),
                            ("2", "Not_non_performing_prior_to_forbearance"),
                            ("1_x2", "Non_performing_prior_to_forbearance_x2"),
                            ("2_x2", "Not_non_performing_prior_to_forbearance_x2"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_prior_to_forbearance_indicator",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_assignment_type",
                    ),
                ),
                (
                    "ARRRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Arrears_for_the_instrument",
                    ),
                ),
                (
                    "HRCTS_TRDNG_PSTNS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Haircuts_for_trading_positions_valued_at_fair_value",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_security_position_Prudential_portfolio_assignment",
                "verbose_name_plural": "Long_security_position_Prudential_portfolio_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_MSTR_AGRMNT_EIL",
            fields=[
                (
                    "BIRD_MSTR_AGRMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_MSTR_AGRMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "MSTR_AGRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Master_agreement_identifier",
                    ),
                ),
                (
                    "MSTR_AGRMNT_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Master_agreement_Reference_date",
                    ),
                ),
                (
                    "MSTR_AGRMNT_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Master_agreement_Reporting_agent_identifier",
                    ),
                ),
                (
                    "TYP_MSTR_AGRMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Master_agreement_with_a_clearing_member"),
                            (
                                "3",
                                "Master_agreement_with_a_qualifying_central_counterparty",
                            ),
                            (
                                "4",
                                "Master_agreement_with_a_non_qualified_central_counterparty",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_master_agreement",
                    ),
                ),
            ],
            options={
                "verbose_name": "Master_agreement",
                "verbose_name_plural": "Master_agreements",
            },
        ),
        migrations.CreateModel(
            name="BIRD_NN_FNNCL_ASST_EIL",
            fields=[
                (
                    "BIRD_NN_FNNCL_ASST_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_NN_FNNCL_ASST_EIL_uniqueID",
                    ),
                ),
                (
                    "NN_FNNCL_ASST_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_financial_asset_ID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "MSRMNT_MTHD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cost_model"),
                            ("3", "Revaluation_model"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Measurement_method",
                    ),
                ),
                (
                    "OTHR_INTNGBL_ASST_TKN_INT_PSSSSN_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other_intangible_asset_taken_into_possession_type",
                    ),
                ),
                (
                    "PRPRTY_PLNT_EQPMNT_TKN_INT_PSSSSN_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Property_plant_and_equipment_taken_into_possession_type",
                    ),
                ),
                (
                    "SBJCT_OPRTNG_LS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Subject_to_operating_lease"),
                            ("2", "Not_Subject_to_operating_lease"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subject_to_operating_lease_indicator",
                    ),
                ),
                (
                    "TM_SNC_INTL_RCGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TM_SNC_INTL_RCGNTN",
                    ),
                ),
                (
                    "TYP_NN_FNNCL_ASST",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_non_financial_asset",
                    ),
                ),
                (
                    "ACCMLTD_CHNG_NGTV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_changes",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "ACCMLTD_IMPRMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_impairment",
                    ),
                ),
                (
                    "GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="GCA_EXPSR_DRCGNSD_EXCHNG_CLLTRL",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Non_financial_asset",
                "verbose_name_plural": "Non_financial_assets",
            },
        ),
        migrations.CreateModel(
            name="BIRD_NN_FNNCL_LBLTY_EIL",
            fields=[
                (
                    "BIRD_NN_FNNCL_LBLTY_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_NN_FNNCL_LBLTY_EIL_uniqueID",
                    ),
                ),
                (
                    "NN_FNNCL_LBLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_financial_liability_ID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "TYP_NN_FNNCL_LBLTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_non_financial_liabilty",
                    ),
                ),
            ],
            options={
                "verbose_name": "Non_financial_liability",
                "verbose_name_plural": "Non_financial_liabilitys",
            },
        ),
        migrations.CreateModel(
            name="BIRD_PRTCTN_ARRNGMNT_EIL",
            fields=[
                (
                    "BIRD_PRTCTN_ARRNGMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTCTN_ARRNGMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_identifier",
                    ),
                ),
                (
                    "PRTCTN_ARRNGMNT_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_arrangement_Reference_date",
                    ),
                ),
                (
                    "PRTCTN_ARRNGMNT_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_arrangement_Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_MTRTY_PRTCTN",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Maturity_date_of_the_protection",
                    ),
                ),
                (
                    "PRTCTN_ARRNGMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("6", "Credit_risk_mitigation_arrangement"),
                            ("7", "Collateral_annex"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_arrangement_type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Protection_arrangement",
                "verbose_name_plural": "Protection_arrangements",
            },
        ),
        migrations.CreateModel(
            name="BIRD_PRTY_CD_EIL",
            fields=[
                (
                    "BIRD_PRTY_CD_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTY_CD_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Party_Reference_date",
                    ),
                ),
                (
                    "PRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTY_CD_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "LEI"),
                            ("2", "RIAD"),
                            ("3", "Other_party_code"),
                            ("10", "Other_Non_LEI_code"),
                            ("11", "Public_sector_entity_identifier"),
                            ("12", "TAX_Code"),
                            ("13", "Trade_register_identifier"),
                            ("14", "Value_added_tax_identifier"),
                            ("4", "Other"),
                            ("5", "Identifier_assigned_by_the_National_Central_Bank"),
                            ("6", "Investment_Pension_fund_identifier"),
                            ("7", "National_Business_register_identifier"),
                            ("8", "National_Statistical_Institute_number"),
                            ("9", "National_Supervisory_Authority_code"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_code_type",
                    ),
                ),
                (
                    "PRTY_CD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Party_code",
                "verbose_name_plural": "Party_codes",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_AGNCY_EIL",
            fields=[
                (
                    "BIRD_RTNG_AGNCY_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_AGNCY_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "ECAI_ECA",
                    models.CharField(
                        blank=True,
                        choices=[("1", "ECAI"), ("2", "ECA")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Export_Credit_Agency_ECA_External_Credit_Assessment_Institution_ECAI_",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_agency",
                "verbose_name_plural": "Rating_agencys",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_GRD_EIL",
            fields=[
                (
                    "BIRD_RTNG_GRD_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_GRD_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "RTNG_GRD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_grade",
                    ),
                ),
                (
                    "RTNG_GRD_CRDT_QLTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Senior_investment_grade"),
                            ("2", "Non_senior_investment_grade"),
                            ("3", "High_yield"),
                            ("4", "Non_rated"),
                            ("5", "Investment_grade"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_grade_credit_quality",
                    ),
                ),
                (
                    "TYP_RTNG_GRD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Rating_grade_for_issue_based_rating_system"),
                            (
                                "3",
                                "Rating_grade_for_issuer_based_rating_systems_for_non_central_government",
                            ),
                            (
                                "4",
                                "Rating_grade_for_issuer_based_rating_systems_for_central_government",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_rating_grade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_grade",
                "verbose_name_plural": "Rating_grades",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL",
            fields=[
                (
                    "BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "SCRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Security_Reference_date",
                    ),
                ),
                (
                    "SCRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_Reporting_agent_identifier",
                    ),
                ),
                (
                    "ACCRD_INTRST_MRKT_VL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Interest_accrued_for_market_value"),
                            ("2", "Interest_not_accrued_for_market_value"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accrued_interests_for_market_values_indicator",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "CRRNCY_TRNSCTN_RPRTD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency_of_transaction_reported",
                    ),
                ),
                (
                    "DBT_SCRTY_ACCNTNG_STNDRD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_security_by_accounting_standard",
                    ),
                ),
                (
                    "DBT_SCRTY_PRFRMNG_STTS_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_security_by_Performing_status_type",
                    ),
                ),
                (
                    "ELGBL_CNTRL_BNK_FNDNG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Eligible_for_central_bank_funding"),
                            ("2", "Not_elibible_for_central_bank_funding"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Eligible_for_central_bank_funding",
                    ),
                ),
                (
                    "ERLY_RDMPTN_INCLSN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Early_redemption_included"),
                            ("2", "Early_redemption_not_included"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Early_redempions_inclusion_indicator",
                    ),
                ),
                (
                    "EXPSR_CLSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "SA_Exposures_to_international_organisations"),
                            ("11", "SA_Exposures_to_multilateral_development_banks"),
                            ("12", "SA_Exposures_to_public_sector_entities"),
                            (
                                "13",
                                "SA_Exposures_to_regional_governments_or_local_authorities",
                            ),
                            ("14", "SA_Items_associated_with_a_particular_high_risk"),
                            ("16", "SA_Other_items"),
                            ("1", "SA_Equity_exposures"),
                            ("2", "SA_Exposures_in_default"),
                            ("3", "SA_Exposures_in_the_form_of_covered_bonds"),
                            (
                                "4",
                                "SA_Exposures_in_the_form_of_units_or_shares_in_CIUs",
                            ),
                            (
                                "6",
                                "SA_Exposures_to_central_governments_or_central_banks",
                            ),
                            (
                                "7",
                                "SA_Exposures_to_corporates_without_a_short_term_credit_assessment",
                            ),
                            (
                                "8",
                                "SA_Exposures_to_institutions_and_corporates_with_a_short_term_credit_assessment",
                            ),
                            (
                                "9",
                                "SA_Exposures_to_institutions_without_a_short_term_credit_assessment",
                            ),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exposure_class",
                    ),
                ),
                (
                    "HQLA_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "High_liquidity_and_credit_quality_HQLA_"),
                            ("2", "Not_high_liquidity_and_credit_quality_HQLA_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="High_liquidity_and_credit_quality_HQLA_indicator",
                    ),
                ),
                (
                    "IDNTFR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("CUSIP", "CUSIP"),
                            ("INTERNAL_CODE", "Internal_Code"),
                            ("SEDOL", "SEDOL"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Identifier_type",
                    ),
                ),
                (
                    "IS_LSTD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("F", "FALSE"),
                            ("T", "TRUE"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Listed",
                    ),
                ),
                (
                    "LW_CRDT_RSK_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Low_credit_risk_instrument"),
                            ("2", "Not_low_credit_risk_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Low_credit_risk_indicator_for_Finrep",
                    ),
                ),
                (
                    "MLTPL_FRBRNC_MSRS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Multiple_forbearance_measures_in_place"),
                            ("2", "Not_multiple_forbearance_measures_in_place"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Multiple_forbearance_measures_in_place_indicator",
                    ),
                ),
                (
                    "NGTBL_SCRTY_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Negotiable_security"),
                            ("2", "Non_negotiable_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Negotiable_security_indicator",
                    ),
                ),
                (
                    "NN_PRFRMNG_EXT_CRTR_MT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Failed_to_meet_the_non_performing_exit_criteria"),
                            (
                                "2",
                                "Still_able_to_meet_the_non_performing_exit_criteria",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_exit_criteria_met_indicator",
                    ),
                ),
                (
                    "ORGNL_MTRTY_INTRVL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Original_maturity",
                    ),
                ),
                (
                    "PRFRMNG_FRBRN_EXPSR_UNDR_PRBTN_RCLSSFD_NN_PRFRMNG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Performing_forborne_exposure_under_probation"),
                            ("2", "Performing_forborne_exposure_not_under_probation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_forborne_exposure_under_probation_reclassified_from_non_performing_indicator",
                    ),
                ),
                (
                    "PRMRY_ASST_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("D_11", "Straight_bond"),
                            ("D_121", "Traditional_securitisation"),
                            ("D_122", "Synthetic_securitisation"),
                            ("D_129", "Other_securitisation"),
                            ("D_131", "Jumbo_covered_bond"),
                            ("D_139", "Other_covered_bond"),
                            ("D_141", "Euro_medium_term_notes_EMTN_"),
                            ("D_149", "Other_MTN"),
                            ("D_15", "Perpetual_bond"),
                            ("D_161", "Inflation_linked_bond"),
                            ("D_162", "Interest_rate_linked_bond"),
                            ("D_163", "Asset_linked_bond"),
                            ("D_164", "Currency_linked_bond"),
                            ("D_165", "Credit_linked_bond"),
                            ("D_166", "Exchange_traded_notes_ETN_"),
                            ("D_167", "Exchange_traded_commodities_ETC_"),
                            ("D_169", "Other_linked_bond"),
                            ("D_171", "Principal_strip"),
                            ("D_172", "Coupon_strip"),
                            ("D_1811", "Capital_protection_product"),
                            ("D_1812", "Yield_enhancement_product"),
                            ("D_1813", "Participation_product"),
                            ("D_1819", "Other_investment_product"),
                            ("D_181", "Investment_product"),
                            ("D_1811_x2", "Capital_protection_product_x2"),
                            ("D_1812_x2", "Yield_enhancement_product_x2"),
                            ("D_1819_x2", "Other_investment_product_x2"),
                            ("D_1813_x2", "Participation_product_x2"),
                            ("D_1811_x3", "Capital_protection_product_x3"),
                            ("D_1812_x3", "Yield_enhancement_product_x3"),
                            ("D_1819_x3", "Other_investment_product_x3"),
                            ("D_1813_x3", "Participation_product_x3"),
                            ("D_1811_x4", "Capital_protection_product_x4"),
                            ("D_1812_x4", "Yield_enhancement_product_x4"),
                            ("D_1819_x4", "Other_investment_product_x4"),
                            ("D_1813_x4", "Participation_product_x4"),
                            ("D_1821", "Leverage_product_with_knock_out"),
                            ("D_1822", "Leverage_product_without_knock_out"),
                            ("D_1823", "Constant_leverage_product"),
                            ("D_1829", "Other_leverage_product"),
                            ("D_182", "Leverage_Product"),
                            ("D_1829_x2", "Other_leverage_product_x2"),
                            ("D_1823_x2", "Constant_leverage_product_x2"),
                            ("D_1821_x2", "Leverage_product_with_knock_out_x2"),
                            ("D_1822_x2", "Leverage_product_without_knock_out_x2"),
                            ("D_1829_x3", "Other_leverage_product_x3"),
                            ("D_1823_x3", "Constant_leverage_product_x3"),
                            ("D_1821_x3", "Leverage_product_with_knock_out_x3"),
                            ("D_1822_x3", "Leverage_product_without_knock_out_x3"),
                            ("D_1829_x4", "Other_leverage_product_x4"),
                            ("D_1823_x4", "Constant_leverage_product_x4"),
                            ("D_1821_x4", "Leverage_product_with_knock_out_x4"),
                            ("D_1822_x4", "Leverage_product_without_knock_out_x4"),
                            ("D_19", "Other_bond"),
                            ("D_21", "Bankers_acceptance"),
                            ("D_22", "Certificate_of_deposit"),
                            ("D_231", "Euro_commercial_paper_ECP_"),
                            ("D_232", "Pagares"),
                            ("D_239", "Other_CP"),
                            ("D_24", "Treasury_bill"),
                            ("D_29", "Other_money_market_instrument"),
                            ("D_311", "Contingent_convertible_bonds_CoCo_s_"),
                            ("D_31", "Convertible_bond"),
                            ("D_311_x2", "Contingent_convertible_bonds_CoCo_s__x2"),
                            ("D_311_x3", "Contingent_convertible_bonds_CoCo_s__x3"),
                            ("D_311_x4", "Contingent_convertible_bonds_CoCo_s__x4"),
                            ("D_32", "Bonds_with_warrants_attached"),
                            ("D_33", "Stapled_debt_instrument"),
                            ("D_34", "Non_participating_preferred_share"),
                            ("D_39", "Other_hybrid_debt_Instrument"),
                            ("D_9", "Other_debt"),
                            ("E_1", "Ordinary_Common_share"),
                            ("E_21", "Cumulative_preferred_share"),
                            ("E_22", "Participating_preferred_share"),
                            ("E_23", "Cumulative_participating_preferred_share"),
                            ("E_24", "Redeemable_preferred_share"),
                            ("E_29", "Other_preferred_share"),
                            ("E_31", "American_depository_receipt_ADR_"),
                            ("E_32", "Global_depository_receipt_GDR_"),
                            ("E_39", "Other_depository_receipt"),
                            ("E_41", "Participation_certificate_Genussschein_"),
                            ("E_42", "Convertible_preferred_share"),
                            ("E_43", "Subscription_right"),
                            ("E_49", "Other_hybrid_equity_instrument"),
                            ("E_9", "Other_equity"),
                            (
                                "F_1",
                                "Undertaking_for_collective_investment_in_transferable_securities_UCITS_Fund",
                            ),
                            ("F_2", "Alternative_investment_fund_AIF_"),
                            ("F_9", "Other_fund"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Primary_asset_classification",
                    ),
                ),
                (
                    "PRPTL_DBT_SCRTY_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Perpetual_debt_security_indicator",
                    ),
                ),
                (
                    "RL_ESTT_CLLTRL_LCTN",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Real_estate_collateral_location",
                    ),
                ),
                (
                    "SBRDNTD_DBT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Subordinated_debt"),
                            ("2", "Non_subordinated_debt"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subordinated_debt",
                    ),
                ),
                (
                    "SCRTY_GRNT_LVL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Unguaranteed"),
                            ("2", "Government_Treasury_guarantee"),
                            ("8", "Other_guarantee"),
                            ("9", "Guarantee_level_No_detailed_information_available"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_guarantee_level",
                    ),
                ),
                (
                    "SCRTY_LVL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Unsecured"),
                            ("2", "Secured"),
                            ("9", "Security_level_No_detailed_information_available"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_level",
                    ),
                ),
                (
                    "SCRTY_RNK_LVL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Subordinated_Junior_level"),
                            ("2", "Subordinated_Senior_level"),
                            ("3", "Subordinated_No_further_breakdown_available"),
                            ("4", "Senior"),
                            ("5", "ABS_Class_Junior"),
                            ("6", "ABS_Class_Mezzanine"),
                            ("7", "ABS_Class_Senior"),
                            ("9", "Rank_level_No_detailed_information_available"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_rank_level",
                    ),
                ),
                (
                    "SCRTY_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("100", "Alive"),
                            ("200", "Not_alive"),
                            ("201", "not_alive_matured_planned_redemption_"),
                            ("202", "not_alive_matured_early_redemption_"),
                            ("203", "not_alive_issuer_default_bankrupt_"),
                            ("204", "not_alive_instrument_in_default"),
                            ("205", "not_alive_split"),
                            ("206", "not_alive_reverse_split"),
                            ("207", "not_alive_knocked_out"),
                            ("208", "not_alive_merger"),
                            ("209", "not_alive_demerger"),
                            ("210", "not_alive_repurchase_of_own_securities"),
                            ("211", "not_alive_converted_exercised"),
                            ("212", "not_alive_issue_withdrawn"),
                            ("213", "not_alive_Dissolution_of_company"),
                            ("214", "not_alive_assimilation"),
                            ("215", "not_alive_temporary_ISIN"),
                            ("216", "not_alive_other_reason"),
                            ("217", "not_alive_old_rights_issue"),
                            ("218", "not_alive_not_covered_by_IF_list"),
                            (
                                "101",
                                "Alive_under_judicial_administration_receivership_or_similar_measures",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_status",
                    ),
                ),
                (
                    "SCRTY_TYP_BY_IDNTFR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_type_by_identifier",
                    ),
                ),
                (
                    "SGNFCNT_ASST_CLSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Interest_rate"),
                            ("2", "Equity"),
                            ("3", "Credit"),
                            ("4", "Commodity"),
                            ("5", "Other"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Significant_asset_class",
                    ),
                ),
                (
                    "STRCTRD_NT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Structured_note"),
                            ("2", "Not_structured_note"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Structured_note_indicator",
                    ),
                ),
                (
                    "TM_PST_DU_BND",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Time_past_due_band",
                    ),
                ),
                (
                    "TYP_ASST_PRVDD_SCRTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1000", "Securitisation"),
                            ("1100", "Asset_backed_security_ABS_"),
                            ("1101", "Auto_loans_ABS"),
                            ("1102", "Consumer_loans_ABS"),
                            ("1103", "Credit_card_receivables_ABS"),
                            ("1104", "Equipment_leases_ABS"),
                            ("1105", "Home_equity_loans_ABS"),
                            ("1106", "Manufactured_housing_leases_ABS"),
                            (
                                "1107",
                                "Small_and_medium_sized_enterprises_SME_loans_ABS",
                            ),
                            ("1108", "Student_loans_ABS"),
                            ("1109", "Whole_Business_Securitisation_WBS_ABS"),
                            ("1110", "Mixed_ABS"),
                            ("1198", "Other_Assets_ABS"),
                            ("1199", "ABS_No_detailed_classification_available"),
                            ("1200", "Mortgage_backed_security_MBS_"),
                            ("1201", "Residential_mortgage_backed_security_RMBS_"),
                            ("1202", "Commercial_mortgage_backed_security_CMBS_"),
                            ("1203", "Mixed_MBS"),
                            ("1298", "Other_MBS"),
                            ("1299", "MBS_No_detailed_classification_available"),
                            ("1300", "Collateralised_Debt_Obligation_CDO_"),
                            ("1400", "Collateralised_Mortgage_Obligation_CMO_"),
                            ("1500", "Mixed_securitisation"),
                            ("1800", "Other_securitisation"),
                            (
                                "1900",
                                "Securitisation_No_detailed_classification_available",
                            ),
                            ("2000", "Covered_Bond"),
                            ("2100", "Public_sector_Covered_bond"),
                            ("2200", "Mortgage_Covered_bond"),
                            ("2300", "Ship_Covered_bond"),
                            ("2400", "Aircraft_Covered_bond"),
                            ("2500", "Mixed_Covered_bond"),
                            ("2800", "Other_Covered_bond"),
                            (
                                "2900",
                                "Covered_Bond_No_detailed_classification_available",
                            ),
                            (
                                "9999",
                                "Securitisation_and_Covered_Bond_No_detailed_classification_available",
                            ),
                            (
                                "12011",
                                "Residential_mortgage_backed_security_Prime_RMBS_Prime_",
                            ),
                            (
                                "12012",
                                "Residential_mortgage_backed_security_Mid_prime_RMBS_Mid_prime_",
                            ),
                            (
                                "12013",
                                "Residential_mortgage_backed_security_Sub_prime_RMBS_Sub_prime_",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_asset_provided_as_security",
                    ),
                ),
                (
                    "TYP_SCRTY_EXCHNG_TRDBL_DRVTV",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_security_exchange_tradedable_derivative",
                    ),
                ),
                (
                    "DT_ISS",
                    models.DateTimeField(
                        blank=True, default=None, null=True, verbose_name="Issue_date"
                    ),
                ),
                (
                    "DT_LGL_FNL_MTRTY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Legal_final_maturity_date",
                    ),
                ),
                (
                    "DT_PRFRMNG_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_the_performing_status_of_the_instrument",
                    ),
                ),
                (
                    "DT_PST_D",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_past_due",
                    ),
                ),
                (
                    "DT_SCRTY_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Security_status_date",
                    ),
                ),
                (
                    "FRBRNC_MSR_CNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Forbearance_measure_count",
                    ),
                ),
                (
                    "ISIN",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="ISIN_code",
                    ),
                ),
                (
                    "OFFCL_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Official_security_identifier",
                    ),
                ),
                (
                    "ORGNL_NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Original_nominal_amount",
                    ),
                ),
                (
                    "SHRT_NM_INSTRMNT",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Short_name_of_the_instrument",
                    ),
                ),
                (
                    "TTL_AMNT_CPTL_ISSD",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Total_amount_of_capital_issued",
                    ),
                ),
                (
                    "TTL_NMBR_SHRS_ISSD",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Total_number_of_shares_issued",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_and_exchange_tradable_derivative",
                "verbose_name_plural": "Security_and_exchange_tradable_derivatives",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SYNDCTD_CNTRCT_EIL",
            fields=[
                (
                    "BIRD_SYNDCTD_CNTRCT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SYNDCTD_CNTRCT_EIL_uniqueID",
                    ),
                ),
                (
                    "SYNDCTD_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Syndicated_contract_identifier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Syndicated_contract",
                "verbose_name_plural": "Syndicated_contracts",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.CharField(max_length=200)),
                ("pub_date", models.DateTimeField(verbose_name="date published")),
            ],
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_FCLTY_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_CRDT_FCLTY_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_FCLTY_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_RCVD_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_received_Instrument_identifier",
                    ),
                ),
                (
                    "TYP_ABSTRCT_INSTRMNT_RL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_abstract_intrument_role",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "the_BIRD_ABSTRCT_INSTRMNT_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_abstrct_instrmnt_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_CRDT_FCLTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_crdt_fclty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_facility_Collateral_received_instrument_assignment",
                "verbose_name_plural": "Credit_facility_Collateral_received_instrument_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_FCLTY_CLLTRL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_CRDT_FCLTY_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_FCLTY_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_CRDT_FCLTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_crdt_fclty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_facility_Collateral_assignment",
                "verbose_name_plural": "Credit_facility_Collateral_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_TRNSFR_OTHR_SCRTSTN_CVRD_BND_PRGRM_EIL",
            fields=[
                (
                    "BIRD_CRDT_TRNSFR_OTHR_SCRTSTN_CVRD_BND_PRGRM_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_TRNSFR_OTHR_SCRTSTN_CVRD_BND_PRGRM_EIL_uniqueID",
                    ),
                ),
                (
                    "CRDT_TRNSFR_OTHR_SCRTSTN_CVRD_BND_PRGRM_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_transfer_other_than_securitisation_and_covered_bond_program_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "SCRTSN_OTHR_CRDT_TRNSFR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("5", "Covered_bond_program"),
                            (
                                "6",
                                "Credit_transfer_other_than_securitisation_and_covered_bond_program",
                            ),
                            ("7", "Securitisation"),
                            (
                                "3",
                                "Synthetic_securitisation_without_involvement_of_an_SSPE",
                            ),
                            ("4", "Synthetic_securitisation_involving_an_SSPE"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_and_other_credit_transfer_type",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_transfer_other_than_securitisation_and_covered_bond_program",
                "verbose_name_plural": "Credit_transfer_other_than_securitisation_and_covered_bond_programs",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CVRD_BND_PRGRM_EIL",
            fields=[
                (
                    "BIRD_CVRD_BND_PRGRM_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CVRD_BND_PRGRM_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CVRD_BND_PRGRM_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Covered_bond_program_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "SCRTSN_OTHR_CRDT_TRNSFR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("5", "Covered_bond_program"),
                            (
                                "6",
                                "Credit_transfer_other_than_securitisation_and_covered_bond_program",
                            ),
                            ("7", "Securitisation"),
                            (
                                "3",
                                "Synthetic_securitisation_without_involvement_of_an_SSPE",
                            ),
                            ("4", "Synthetic_securitisation_involving_an_SSPE"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_and_other_credit_transfer_type",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Covered_bond_programme",
                "verbose_name_plural": "Covered_bond_programmes",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_FCLTY_ENTTY_RL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_CRDT_FCLTY_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_FCLTY_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "CRDT_FCLTY_ENTTY_RL_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Credit_facility_Creditor_assignment"),
                            ("2", "Credit_facility_Debtor_assignment"),
                            ("3", "Credit_facility_Servicer_assignment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_Entity_role_assignment_type",
                    ),
                ),
                (
                    "the_BIRD_CRDT_FCLTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_crdt_fclty_eil",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_facility_Entity_role_assignment",
                "verbose_name_plural": "Credit_facility_Entity_role_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_EXCHNG_TRDBL_DRVTV_PSTN_EIL",
            fields=[
                (
                    "BIRD_EXCHNG_TRDBL_DRVTV_PSTN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_EXCHNG_TRDBL_DRVTV_PSTN_EIL_uniqueID",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVT_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_Security_identifier",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "NTNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Notional_amount",
                    ),
                ),
                (
                    "TYP_RSK",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_Applicable"),
                            ("1", "Interest_rate_risk"),
                            ("2", "Equity_risk"),
                            ("3", "Foreign_exchange_and_gold_risk"),
                            ("4", "Credit_risk"),
                            ("5", "Commodities_risk"),
                            (
                                "6",
                                "Risk_other_than_Interest_rate_risk_Equity_risk_Foreign_exchange_and_gold_risk_Credit_risk_Commodities_risk",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_risk",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exchange_tradable_derivative_position",
                "verbose_name_plural": "Exchange_tradable_derivative_positions",
            },
        ),
        migrations.CreateModel(
            name="BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL",
            fields=[
                (
                    "BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL_uniqueID",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVT_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_Security_identifier",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVTV_PSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Exchange_tradable_derivative_position_as_a_hedge"),
                            (
                                "6",
                                "Non_balance_sheet_recognised_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "7",
                                "Fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "8",
                                "Non_fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "10",
                                "Non_fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                            (
                                "9",
                                "Fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_position_role_type",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "FV_HRRCHY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Level_1"),
                            ("2", "Level_2"),
                            ("3", "Level_3"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_hierarchy",
                    ),
                ),
                (
                    "PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Trading_book"),
                            ("2", "Non_trading_book"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Prudential_portfolio_type",
                    ),
                ),
                (
                    "TYP_HDG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "11",
                                "Hedges_other_than_cash_flow_hedge_and_hedge_of_net_investment_in_a_foreign_operation",
                            ),
                            ("12", "Economic_hedge_With_use_of_fair_value_option"),
                            ("1", "Fair_value_hedge"),
                            ("2", "Cash_flow_hedge"),
                            ("3", "Hedge_of_a_net_investment_in_a_foreign_operation"),
                            ("4", "Portfolio_fair_value_hedges_of_interest_rate_risk"),
                            ("5", "Portfolio_cash_flow_hedges_of_interest_rate_risk"),
                            ("6", "Cost_price_hedge"),
                            (
                                "7",
                                "Other_than_Fair_value_hedge_Cash_flow_hedge_Hedge_of_a_net_investment_in_a_foreign_operation_Portfolio_fair_value_hedges_of_interest_rate_risk_Portfolio_cash_flow_hedges_of_interest_rate_risk_Cost_price_hedge",
                            ),
                            ("8", "Not_a_hedge"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_hedge",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "FV_CHNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_change",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount",
                    ),
                ),
                (
                    "the_BIRD_EXCHNG_TRDBL_DRVTV_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_exchng_trdbl_drvtv_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exchange_tradable_derivative_position_role",
                "verbose_name_plural": "Exchange_tradable_derivative_position_roles",
            },
        ),
        migrations.AddField(
            model_name="bird_crdt_fclty_eil",
            name="the_BIRD_FNNCL_CNTRCT_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_fnncl_cntrct_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_GRP_CLNTS_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_GRP_CLNTS_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_GRP_CLNTS_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "NTRL_PRSN_GRP_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Natural_person_group_role_type",
                    ),
                ),
                (
                    "GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_ID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_GRP_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_grp_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Group_of_clients_Key_management_personnel_assignment",
                "verbose_name_plural": "Group_of_clients_Key_management_personnel_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "BLNC_SHT_NTTNG_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Balance_sheet_netting_identifier",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_identifier",
                    ),
                ),
                (
                    "ACCNTNG_HDG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Accounting_hedge"),
                            ("2", "Not_accounting_hedge"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_hedge_indicator",
                    ),
                ),
                (
                    "CMMRCL_RL_ESTT_LN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Commercial_real_estate_loan"),
                            ("2", "Not_a_commercial_real_estate_loan"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Commercial_real_estate_loan_indicator",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "FDCRY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Fiduciary_instrument"),
                            ("2", "Non_fiduciary_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fiduciary_instrument",
                    ),
                ),
                (
                    "INSTRMNT_TYP_ORGN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Instrument_resulting_directly_from_a_Financial_contract",
                            ),
                            ("4", "Instrument_resulting_from_a_Credit_facility"),
                            ("1020", "Factoring"),
                            ("1023", "Other_trade_receivables"),
                            ("130", "Suspence_items"),
                            (
                                "14",
                                "Financial_guarantee_instrument_not_for_a_Debt_security",
                            ),
                            ("18", "Term_repurchase_agreement_instrument"),
                            ("19", "Open_repurchase_agreement_instrument"),
                            (
                                "26",
                                "Security_against_a_fee_borrowing_and_lending_transaction",
                            ),
                            (
                                "27",
                                "Security_against_Security_borrowing_and_lending_transaction",
                            ),
                            ("2", "Equity_instrument_that_is_not_a_security"),
                            ("380", "Forward"),
                            ("51", "Credit_card_debt"),
                            ("050", "Extended_credit"),
                            ("040", "Convenience_credit"),
                            (
                                "522",
                                "Deposits_with_agreed_maturity_other_than_counterpart_liability_to_non_derecognised_loans",
                            ),
                            ("5", "Other_OTC_Derivative_instrument"),
                            ("6", "OTC_Total_return_swap"),
                            ("7", "OTC_Credit_default_swap"),
                            ("80", "Finance_leases"),
                            ("8", "Other_OTC_Swap"),
                            ("1022", "Other_loans"),
                            ("10", "OTC_Option_other_than_OTC_Credit_spread_option"),
                            ("120", "Transit_items"),
                            ("12", "Deposit_redeemable_at_notice"),
                            (
                                "13",
                                "Financial_guarantee_instrument_for_a_Debt_security",
                            ),
                            ("511", "Tranferable_overnight_deposits"),
                            ("9", "OTC_Credit_spread_option"),
                            ("1011", "Other_commitments"),
                            (
                                "140",
                                "Advances_that_are_not_loans_other_than_transit_items_and_suspence_items",
                            ),
                            ("512", "Non_transferable_overnight_deposits"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_type_by_origin",
                    ),
                ),
                (
                    "LTGTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Pre_litigation"),
                            ("2", "In_litigation"),
                            ("3", "Not_in_litigation_pre_litigation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Litigation_status",
                    ),
                ),
                (
                    "RPYMNT_RGHTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "On_demand_or_short_notice"),
                            ("2", "Other_than_on_demand_or_short_notice"),
                            ("3", "With_agreed_maturity"),
                            ("4", "Redeemable_at_notice"),
                            ("3_x2", "With_agreed_maturity_x2"),
                            ("4_x2", "Redeemable_at_notice_x2"),
                            ("3_x3", "With_agreed_maturity_x3"),
                            ("4_x3", "Redeemable_at_notice_x3"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repayment_rights",
                    ),
                ),
                (
                    "RVCBL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Revocable"),
                            ("2", "Not_revocable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Revocable_indicator",
                    ),
                ),
                (
                    "RVLVNG_LN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Revolving_loan"),
                            ("2", "Not_revolving_loan"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Revolving_loan_indicator",
                    ),
                ),
                (
                    "SGNFCNT_ASST_CLSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Interest_rate"),
                            ("2", "Equity"),
                            ("3", "Credit"),
                            ("4", "Commodity"),
                            ("5", "Other"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Significant_asset_class",
                    ),
                ),
                (
                    "TYP_CMMTMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("10", "Loans_commitments_received"),
                            ("11", "Other_commitments_received"),
                            (
                                "12",
                                "To_lend_or_to_provide_acceptance_facilities_at_a_below_market_interest_rate",
                            ),
                            (
                                "13",
                                "To_lend_or_to_provide_acceptance_facilities_under_pre_specified_terms_and_conditions_other_than_those_at_a_below_market_interest_rate",
                            ),
                            (
                                "14",
                                "To_lend_or_to_provide_acceptance_facilities_where_the_terms_and_conditions_are_not_under_pre_specified",
                            ),
                            ("15", "To_provide_guarantees"),
                            ("16", "To_purchase_securities"),
                            ("17", "For_tender_and_performance_guarantees"),
                            ("18", "Other_Credit_Facilities"),
                            ("1", "Forward_deposits"),
                            (
                                "2",
                                "Unpaid_portion_of_partly_paid_shares_and_securities",
                            ),
                            ("3", "Documentary_credits_issued_or_confirmed"),
                            ("4", "Trade_finance_off_balance_sheet_items"),
                            (
                                "5",
                                "Documentary_credits_in_which_underlying_shipment_acts_as_collateral_and_other_self_liquidating_transactions",
                            ),
                            (
                                "6",
                                "Warranties_and_indemnities__including_tender_and_performance_bonds_and__guarantees_not_having_the_character_of_credit_substitutes",
                            ),
                            ("7", "Shipping_guarantees_customs_and_tax_bonds"),
                            (
                                "8",
                                "Note_issuance_facilities__NIFs_and__Revolving_underwritings_facilities__RUFs_",
                            ),
                            ("9", "Other_off_balance_sheet_items"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_commitment",
                    ),
                ),
                (
                    "TYP_INSTRMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Instrument_resulting_directly_from_a_Financial_contract",
                            ),
                            ("4", "Instrument_resulting_from_a_Credit_facility"),
                            ("1020", "Factoring"),
                            ("1023", "Other_trade_receivables"),
                            ("130", "Suspence_items"),
                            (
                                "14",
                                "Financial_guarantee_instrument_not_for_a_Debt_security",
                            ),
                            ("18", "Term_repurchase_agreement_instrument"),
                            ("19", "Open_repurchase_agreement_instrument"),
                            (
                                "26",
                                "Security_against_a_fee_borrowing_and_lending_transaction",
                            ),
                            (
                                "27",
                                "Security_against_Security_borrowing_and_lending_transaction",
                            ),
                            ("2", "Equity_instrument_that_is_not_a_security"),
                            ("380", "Forward"),
                            ("51", "Credit_card_debt"),
                            ("050", "Extended_credit"),
                            ("040", "Convenience_credit"),
                            (
                                "522",
                                "Deposits_with_agreed_maturity_other_than_counterpart_liability_to_non_derecognised_loans",
                            ),
                            ("5", "Other_OTC_Derivative_instrument"),
                            ("6", "OTC_Total_return_swap"),
                            ("7", "OTC_Credit_default_swap"),
                            ("80", "Finance_leases"),
                            ("8", "Other_OTC_Swap"),
                            ("1022", "Other_loans"),
                            ("10", "OTC_Option_other_than_OTC_Credit_spread_option"),
                            ("120", "Transit_items"),
                            ("12", "Deposit_redeemable_at_notice"),
                            (
                                "13",
                                "Financial_guarantee_instrument_for_a_Debt_security",
                            ),
                            ("511", "Tranferable_overnight_deposits"),
                            ("9", "OTC_Credit_spread_option"),
                            ("1011", "Other_commitments"),
                            (
                                "140",
                                "Advances_that_are_not_loans_other_than_transit_items_and_suspence_items",
                            ),
                            ("512", "Non_transferable_overnight_deposits"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_instrument",
                    ),
                ),
                (
                    "TYP_RSK",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_Applicable"),
                            ("1", "Interest_rate_risk"),
                            ("2", "Equity_risk"),
                            ("3", "Foreign_exchange_and_gold_risk"),
                            ("4", "Credit_risk"),
                            ("5", "Commodities_risk"),
                            (
                                "6",
                                "Risk_other_than_Interest_rate_risk_Equity_risk_Foreign_exchange_and_gold_risk_Credit_risk_Commodities_risk",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_risk",
                    ),
                ),
                (
                    "ACCMLTD_CVRG_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_coverage_ratio",
                    ),
                ),
                (
                    "CRRNT_LTV_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Current_loan_to_value_ratio",
                    ),
                ),
                (
                    "CSH_RSRV_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Cash_reserve_amount",
                    ),
                ),
                (
                    "DT_CSH_RSRV_MTRTY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Cash_reserve_maturity_date",
                    ),
                ),
                (
                    "DT_INCPTN",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Inception_date",
                    ),
                ),
                (
                    "DT_LGL_FNL_MTRTY",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Legal_final_maturity_date",
                    ),
                ),
                (
                    "DT_ORGNL_CSH_RSRV_AMNT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_original_cash_reserve_amount",
                    ),
                ),
                (
                    "DT_STTLMNT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Settlement_date",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "NTNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Notional_amount",
                    ),
                ),
                (
                    "OFF_BLNC_SHT_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Off_balance_sheet_amount",
                    ),
                ),
                (
                    "ORGNL_CSH_RSRV_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Original_cash_reserve_amount",
                    ),
                ),
                (
                    "the_BIRD_BLNC_SHT_NTTNG_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_blnc_sht_nttng_eil",
                    ),
                ),
                (
                    "the_BIRD_CRDT_FCLTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_crdt_fclty_eil",
                    ),
                ),
                (
                    "the_BIRD_FNNCL_CNTRCT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_fnncl_cntrct_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument",
                "verbose_name_plural": "Instruments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "TYP_ABSTRCT_INSTRMNT_RL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_abstract_intrument_role",
                    ),
                ),
                (
                    "INSTRMNT_CLLTRL_RCVD_INSTRMNT_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Over_the_counter_OTC_Credit_default_swap_Collateral_received_instrument_assignment",
                            ),
                            (
                                "2",
                                "Other_Instrument_Collateral_received_instrument_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_Collateral_received_instrument_assignment_type",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "the_BIRD_ABSTRCT_INSTRMNT_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_abstrct_instrmnt_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument_Collateral_received_instrument_assignment",
                "verbose_name_plural": "Instrument_Collateral_received_instrument_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ASST_PL_LN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_ASST_PL_LN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ASST_PL_LN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "LN_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Loan_Instrument_identifier",
                    ),
                ),
                (
                    "PRCNTG_RTND",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Percentage_retained",
                    ),
                ),
                (
                    "PRCNTG_TRNSFRD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Percentage_transfered",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asset_pool_Loan_excluding_repurchase_agreement_assignment",
                "verbose_name_plural": "Asset_pool_Loan_excluding_repurchase_agreement_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ASST_PL_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_ASST_PL_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ASST_PL_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "EQTY_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Equity_instrument_identifier",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asset_pool_Equity_instrument_that_is_not_a_security_assignment",
                "verbose_name_plural": "Asset_pool_Equity_instrument_that_is_not_a_security_assignments",
            },
        ),
        migrations.AddField(
            model_name="bird_abstrct_instrmnt_rl_eil",
            name="the_BIRD_INSTRMNT_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_instrmnt_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_ENTTY_RL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "INSTRMNT_ENTTY_RL_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Other_commitment_Debtor_assignment"),
                            ("11", "Over_the_counter_OTC_Derivative_Buyer_assignment"),
                            ("12", "Advance_Creditor_assignment"),
                            ("13", "Over_the_counter_OTC_Derivative_Seller_assignment"),
                            ("14", "Advance_Debtor_assignment"),
                            ("15", "Deposit_Depositor_assignment"),
                            ("16", "Credit_card_debt_Creditor_assignment"),
                            ("17", "Credit_card_debt_Debtor_assignment"),
                            ("18", "Deposit_Deposit_taking_corporation_assignment"),
                            (
                                "19",
                                "Financial_guarantee_instrument_Beneficiary_assignment",
                            ),
                            (
                                "1",
                                "Equity_instrument_that_is_not_a_security_Investor_assignment",
                            ),
                            ("20", "Trade_receivable_Assigned_debtor_assignment"),
                            (
                                "21",
                                "Financial_guarantee_instrument_Protection_provider_assignment",
                            ),
                            ("22", "Trade_receivable_Factor_assignment"),
                            ("23", "Financial_lease_Lessor_assignment"),
                            ("24", "Financial_lease_Lessee_assignment"),
                            ("25", "Instrument_Servicer_assignment"),
                            (
                                "2",
                                "Equity_instrument_that_is_not_a_security_Issuer_assignment",
                            ),
                            (
                                "3",
                                "Security_borrowing_and_lending_transaction_Borrower_assignment",
                            ),
                            ("4", "Other_loan_Creditor_assignment"),
                            (
                                "5",
                                "Security_borrowing_and_lending_transaction_Lender_assignment",
                            ),
                            ("6", "Other_loan_Debtor_assignment"),
                            ("7", "Repurchase_agreement_Buyer_assignment"),
                            ("8", "Other_commitment_Creditor_assignment"),
                            ("9", "Repurchase_agreement_Seller_assignment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_Entity_role_assignment_type",
                    ),
                ),
                (
                    "LTGTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Pre_litigation"),
                            ("2", "In_litigation"),
                            ("3", "Not_in_litigation_pre_litigation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Litigation_status",
                    ),
                ),
                (
                    "MN_DBTR_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Main_debtor"),
                            ("2", "Not_main_debtor"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Main_debtor_indicator",
                    ),
                ),
                (
                    "JNT_LBLTY_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Joint_liability_amount",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument_Entity_role_assignment",
                "verbose_name_plural": "Instrument_Entity_role_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_HDGD_EXCHNG_TRDBL_DRVTV_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_HDGD_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_HDGD_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVTV_PSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Exchange_tradable_derivative_position_as_a_hedge"),
                            (
                                "6",
                                "Non_balance_sheet_recognised_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "7",
                                "Fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "8",
                                "Non_fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "10",
                                "Non_fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                            (
                                "9",
                                "Fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_position_role_type",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "the_BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_exchng_trdbl_drvtv_postn_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument_hedged_by_Exchange_tradable_derivative_position",
                "verbose_name_plural": "Instrument_hedged_by_Exchange_tradable_derivative_positions",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_HDGD_OTC_DRVTV_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_HDGD_OTC_DRVTV_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_HDGD_OTC_DRVTV_EIL_uniqueID",
                    ),
                ),
                (
                    "OTC_DRVTV_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Over_the_counter_OTC_Derivative_Instrument_identifier",
                    ),
                ),
                (
                    "HDGD_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Hedged_Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "TYP_ABSTRCT_INSTRMNT_RL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_abstract_intrument_role",
                    ),
                ),
                (
                    "the_BIRD_ABSTRCT_INSTRMNT_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_abstrct_instrmnt_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument_hedged_by_Over_the_counter_OTC_Derivative",
                "verbose_name_plural": "Instrument_hedged_by_Over_the_counter_OTC_Derivatives",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INTRNL_GRP_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_INTRNL_GRP_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INTRNL_GRP_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_ID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "NTRL_PRSN_GRP_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Natural_person_group_role_type",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_GRP_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_grp_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Internal_group_Key_management_personnel_assignment",
                "verbose_name_plural": "Internal_group_Key_management_personnel_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INTRNL_GRP_RL_EIL",
            fields=[
                (
                    "BIRD_INTRNL_GRP_RL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INTRNL_GRP_RL_EIL_uniqueID",
                    ),
                ),
                (
                    "GRP_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[("1", "Reporting_agent_group_")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_role_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_ID",
                    ),
                ),
                (
                    "ACCNTNG_STNDRD_CNLDTD_RPRTNG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "National_GAAP_not_consistent_with_IFRS"),
                            ("2", "IFRS"),
                            ("3", "National_GAAP_consistent_with_IFRS"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_standard_for_consolidated_reporting",
                    ),
                ),
                (
                    "ACCNTNG_STNDRD_SOLO_RPRTNG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "National_GAAP_not_consistent_with_IFRS"),
                            ("2", "IFRS"),
                            ("3", "National_GAAP_consistent_with_IFRS"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_standard_for_solo_reporting",
                    ),
                ),
                (
                    "ACCNTNG_STNDRD_STTSTCL_RPRTNG",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "National_GAAP_not_consistent_with_IFRS"),
                            ("2", "IFRS"),
                            ("3", "National_GAAP_consistent_with_IFRS"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_standard_for_statistical_reporting",
                    ),
                ),
                (
                    "the_BIRD_GRP_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_grp_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Internal_group_role",
                "verbose_name_plural": "Internal_group_roles",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LN_EXCLDNG_RPRCHS_AGRMNT_CLLTRL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LN_EXCLDNG_RPRCHS_AGRMNT_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LN_EXCLDNG_RPRCHS_AGRMNT_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "LN_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Loan_Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "ALLCTD_UNSD_CLLTRL_VL",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Allocated_unused_collateral_value",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "THRD_PRTY_PRRTY_CLMS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Third_party_priority_claims_against_the_protection_",
                    ),
                ),
                (
                    "CLLTRL_VL_UNCPPD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Allocated_collateral_value_uncapped_pre_haircuts",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Loan_excluding_repurchase_agreement_and_advance_Collateral_assignment",
                "verbose_name_plural": "Loan_excluding_repurchase_agreement_and_advance_Collateral_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ACCNTNG_CLSSFCTN_FNNCL_ASSTS_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ACCNTNG_CLSSFCTN_FNNCL_ASSTS_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ACCNTNG_CLSSFCTN_FNNCL_ASSTS_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "ACCMLTD_IMPRMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_impairment",
                    ),
                ),
                (
                    "ACCMLTD_NGTV_VL_ADJSTMNT_MR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_negative_value_adjustments_Market_risk_induced",
                    ),
                ),
                (
                    "ACCMLTD_PRTL_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_partial_write_offs",
                    ),
                ),
                (
                    "ACCMLTD_TTL_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_total_write_offs",
                    ),
                ),
                (
                    "ACCMLTD_WRTFFS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_write_offs",
                    ),
                ),
                (
                    "ARRRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Arrears_for_the_instrument",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "FV_CHNGS_HDG_ACCNTNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_changes_due_to_hedge_accounting",
                    ),
                ),
                (
                    "FVO_DSGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("2", "Management_on_a_fair_value_basis"),
                            ("5", "Management_of_credit_risk_Upon_designation"),
                            ("6", "Management_of_credit_risk_After_the_designation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_option_designation",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount",
                    ),
                ),
                (
                    "GRSS_CRRYNG_AMNT_E_INTRST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Gross_carrying_amount_excluding_accrued_interest",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "IMPRMNT_ASSSSMNT_MTHD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Collectively_assessed"),
                            ("2", "Individually_assessed"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_assessment_method",
                    ),
                ),
                (
                    "IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Impairment_status",
                    ),
                ),
                (
                    "INTL_IMPRMNT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Initial_impairment_status",
                    ),
                ),
                (
                    "LOCOM_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Is_LOCOM"),
                            ("2", "Is_not_LOCOM"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Lower_of_cost_or_market_LOCOM_indicator",
                    ),
                ),
                (
                    "SBJCT_IMPRMNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Subject_to_impairment"),
                            ("2", "Not_subject_to_impairment"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subject_to_impairment_indicator",
                    ),
                ),
                (
                    "TRNSFR_IMPRMNT_STGS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("3", "To_stage_2_from_stage_1"),
                            ("4", "To_stage_2_from_stage_3"),
                            ("1", "To_stage_1_from_stage_2"),
                            ("6", "To_stage_3_from_stage_2"),
                            ("2", "To_stage_1_from_stage_3"),
                            ("5", "To_stage_3_from_stage_1"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Transfer_between_impairment_stages",
                    ),
                ),
                (
                    "TYP_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ACCNTNG_CLSSFCTN_FNNCL_ASSTS_ASSGNMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_debt_security_position_Prudential_portfolio_assignment_Accounting_classification_for_financial_assets_assignment_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_debt_security_position_Prudential_portfolio_assignment_Accounting_classification_for_financial_assets_assignment_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "5",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment_Accounting_classification_for_assets_assignment_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "6",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment_Accounting_classification_for_assets_assignment_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_long_security_position",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "ACCMLTD_CVRG_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_coverage_ratio",
                    ),
                ),
                (
                    "ACCRD_INTRST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accrued_interest_accounting_",
                    ),
                ),
                (
                    "FV_CHNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_change",
                    ),
                ),
                (
                    "GNRL_ALLWNCS_BNK_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_bank_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "GNRL_ALLWNCS_CRDT_RSK",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="General_allowances_for_credit_risk_affecting_carrying_amount_nGAAP_",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_security_position_Prudential_Portfolio_assignment_Accounting_classification_for_financial_assets_assignment",
                "verbose_name_plural": "Long_security_position_Prudential_Portfolio_assignment_Accounting_classification_for_financial_assets_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNG_EQTY_FND_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL",
            fields=[
                (
                    "BIRD_LNG_EQTY_FND_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_EQTY_FND_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "SRC_ENCMBRNC",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("14", "Repurchase_agreements"),
                            ("9", "Deposits_other_than_repurchase_agreements"),
                            ("15", "Short_position"),
                            ("16", "Loan_commitments_received"),
                            ("17", "Financial_guarantees_received"),
                            ("18", "Securities_borrowed_with_non_cash_collateral"),
                            ("10", "Debt_securities_issued_covered_bonds_securities"),
                            ("11", "Debt_securities_issued_asset_backed_securities"),
                            (
                                "12",
                                "Debt_securities_issued_other_than_covered_bonds_and_ABSs",
                            ),
                            ("13", "Other_sources_of_encumbrance"),
                            ("6", "Exchange_traded_derivatives"),
                            ("7", "Over_the_counter_derivatives"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Source_of_encumbrance",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "ENCMBRD_NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Encumbered_number_of_shares",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_equity_or_fund_security_position_Prudential_portfolio_assignment_encumbrance_data",
                "verbose_name_plural": "Long_equity_or_fund_security_position_Prudential_portfolio_assignment_encumbrance_datas",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNG_DBT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL",
            fields=[
                (
                    "BIRD_LNG_DBT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_DBT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_ENCMBRNC_DT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "SRC_ENCMBRNC",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("14", "Repurchase_agreements"),
                            ("9", "Deposits_other_than_repurchase_agreements"),
                            ("15", "Short_position"),
                            ("16", "Loan_commitments_received"),
                            ("17", "Financial_guarantees_received"),
                            ("18", "Securities_borrowed_with_non_cash_collateral"),
                            ("10", "Debt_securities_issued_covered_bonds_securities"),
                            ("11", "Debt_securities_issued_asset_backed_securities"),
                            (
                                "12",
                                "Debt_securities_issued_other_than_covered_bonds_and_ABSs",
                            ),
                            ("13", "Other_sources_of_encumbrance"),
                            ("6", "Exchange_traded_derivatives"),
                            ("7", "Over_the_counter_derivatives"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Source_of_encumbrance",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "ENCMBRD_NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Encumbered_nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_debt_security_position_Prudential_portfolio_assignment_encumbrance_data",
                "verbose_name_plural": "Long_debt_security_position_Prudential_portfolio_assignment_encumbrance_datas",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_RSK_DT_EIL",
            fields=[
                (
                    "BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_RSK_DT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_RSK_DT_EIL_uniqueID",
                    ),
                ),
                (
                    "EXPSR_CLSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "SA_Exposures_to_international_organisations"),
                            ("11", "SA_Exposures_to_multilateral_development_banks"),
                            ("12", "SA_Exposures_to_public_sector_entities"),
                            (
                                "13",
                                "SA_Exposures_to_regional_governments_or_local_authorities",
                            ),
                            ("14", "SA_Items_associated_with_a_particular_high_risk"),
                            ("16", "SA_Other_items"),
                            ("1", "SA_Equity_exposures"),
                            ("2", "SA_Exposures_in_default"),
                            ("3", "SA_Exposures_in_the_form_of_covered_bonds"),
                            (
                                "4",
                                "SA_Exposures_in_the_form_of_units_or_shares_in_CIUs",
                            ),
                            (
                                "6",
                                "SA_Exposures_to_central_governments_or_central_banks",
                            ),
                            (
                                "7",
                                "SA_Exposures_to_corporates_without_a_short_term_credit_assessment",
                            ),
                            (
                                "8",
                                "SA_Exposures_to_institutions_and_corporates_with_a_short_term_credit_assessment",
                            ),
                            (
                                "9",
                                "SA_Exposures_to_institutions_without_a_short_term_credit_assessment",
                            ),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exposure_class",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "APPRCH_PRDNTL_PRPSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "_1250_for_positions_not_subject_to_any_method"),
                            ("25", "Internal_assessment_approach"),
                            ("33", "IRB_Internal_models_approach"),
                            ("34", "IRB_PD_LGD_approach"),
                            ("35", "IRB_Simple_risk_weight_approach"),
                            ("42", "Standardised_approach"),
                            ("66", "Advanced_IRB"),
                            ("67", "Foundation_IRB"),
                            ("68", "IRB_Fixed_risk_weights"),
                            ("18", "Ratings_based_method"),
                            ("19", "Supervisory_formula_method"),
                            ("30", "Look_through_approach"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Approach_for_prudential_purposes",
                    ),
                ),
                (
                    "EXPSR_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Exposure_Value",
                    ),
                ),
                (
                    "LGD_DWNTRNS",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Loss_given_default_LGD_in_downturns",
                    ),
                ),
                (
                    "LGD_NRML",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Loss_given_default_LGD_in_normal_economic_times",
                    ),
                ),
                (
                    "RSK_WGHT",
                    models.FloatField(
                        blank=True, default=None, null=True, verbose_name="Risk_weight"
                    ),
                ),
                (
                    "SPCFC_RSK_WGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Specific_risk_weight",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_security_position_Prudential_portfolio_assignment_risk_data",
                "verbose_name_plural": "Long_security_position_Prudential_portfolio_assignment_risk_datas",
            },
        ),
        migrations.CreateModel(
            name="BIRD_MSTR_AGRMNT_ENTTY_RL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_MSTR_AGRMNT_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_MSTR_AGRMNT_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ORGNSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Organisation_role_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "MSTR_AGRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Master_agreement_identifier",
                    ),
                ),
                (
                    "TYP_MSTR_AGRMNT_ENTTY_RL_ASSGNMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Master_agreement_Non_qualifying_central_counterparty_assignment",
                            ),
                            (
                                "2",
                                "Master_agreement_Qualifying_central_counterparty_assignment",
                            ),
                            ("4", "Master_agreement_Clearing_member_assignment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_master_agreement_entity_role_assigned",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_MSTR_AGRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_mstr_agrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Master_agreement_Entity_role_assignment",
                "verbose_name_plural": "Master_agreement_Entity_role_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_MSTR_AGRMNT_FNNCL_CNTRCT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_MSTR_AGRMNT_FNNCL_CNTRCT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_MSTR_AGRMNT_FNNCL_CNTRCT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "MSTR_AGRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Master_agreement_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "FNNCL_CNTRCT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Financial_contract_identifier",
                    ),
                ),
                (
                    "the_BIRD_FNNCL_CNTRCT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_fnncl_cntrct_eil",
                    ),
                ),
                (
                    "the_BIRD_MSTR_AGRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_mstr_agrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Master_agreement_Financial_contract_assignment",
                "verbose_name_plural": "Master_agreement_Financial_contract_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CLLTRL_NN_FNNCL_ASST_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_CLLTRL_NN_FNNCL_ASST_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CLLTRL_NN_FNNCL_ASST_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "MSRMNT_MTHD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cost_model"),
                            ("3", "Revaluation_model"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Measurement_method",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SFTWR_ASSTS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Software_assets"),
                            ("2", "Not_software_assets"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Software_assets_indicator",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "PPRTY_PLNT_EQPMNT_NT_TKN_INT_PSSSSN_SFTWR_ASSTS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Property_plant_and_equipment_not_taken_into_possession_software_assets_indicator",
                    ),
                ),
                (
                    "SBJCT_OPRTNG_LS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Subject_to_operating_lease"),
                            ("2", "Not_Subject_to_operating_lease"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subject_to_operating_lease_indicator",
                    ),
                ),
                (
                    "PRPRTY_PLNT_EQPMNT_TKN_INT_PSSSSN_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Property_plant_and_equipment_taken_into_possession_type",
                    ),
                ),
                (
                    "PPRTY_PLNT_EQPMNT_TKN_INT_PSSSSN_SFTWR_ASSTS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Property_plant_and_equipment_taken_into_possession_software_assets_indicator",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "OTHR_INTNGBL_ASST_TKN_INT_PSSSSN_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "6301",
                                "Software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "6302",
                                "Non_software_property_plant_and_equipment_not_taken_into_possession",
                            ),
                            (
                                "1301",
                                "Non_financial_liabilites_other_than_Tax_liability_Share_capital_repayable_on_demand_or_Provision",
                            ),
                            ("701", "Provisions_Funds_for_general_banking_risks"),
                            (
                                "702",
                                "Provisions_Employee_benefits_Other_than_pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            (
                                "703",
                                "Provisions_Employee_benefits_Pension_and_other_post_employment_defined_benefit_obligations",
                            ),
                            ("704", "Provisions_Restructuring"),
                            (
                                "705",
                                "Provisions_Pending_legal_issues_and_tax_litigation",
                            ),
                            (
                                "707",
                                "Provisions_Other_than_Employee_benefits_Restructuring_Pending_legal_issues_and_tax_litigation_Off_balance_sheet_exposures_subject_to_credit_risk",
                            ),
                            (
                                "710",
                                "Provisions_Other_than_commitments_and_guarantees_given_and_payment_commitments_to_resolution_funds_and_deposit_guarantee_schemes",
                            ),
                            ("720", "Deferred_tax_liabilities"),
                            ("730", "Share_capital_repayable_on_demand"),
                            (
                                "12",
                                "Other_intangible_asset_taken_into_possession_before_the_period",
                            ),
                            (
                                "13",
                                "Other_intangible_asset_taken_into_possession_during_the_period",
                            ),
                            (
                                "56",
                                "Property_plant_and_equipment_taken_into_possession_before_the_period",
                            ),
                            (
                                "62",
                                "Property_plant_and_equipment_taken_into_possession_during_the_period",
                            ),
                            (
                                "66",
                                "Software_property_plant_and_equipment_taken_into_possession",
                            ),
                            (
                                "67",
                                "Non_software_property_plant_and_equipment_taken_into_possession",
                            ),
                            ("14", "Other_intangible_asset_not_taken_into_possession"),
                            ("15", "Other_intangible_asset_taken_into_possession"),
                            ("420", "Intangible_assets_Goodwill"),
                            ("440", "Current_tax_assets"),
                            ("450", "Deferred_tax_assets"),
                            (
                                "46",
                                "Other_non_financial_asset_not_taken_into_possession",
                            ),
                            ("413", "Tangible_assets_Investment_property"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other_intangible_asset_taken_into_possession_type",
                    ),
                ),
                (
                    "TM_SNC_INTL_RCGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("27", "Up_to_2_years"),
                            ("92", "_gt_1_year_lt_eq_2_year"),
                            ("91", "_gt_0_year_lt_eq_1_year"),
                            ("92_x2", "_gt_1_year_lt_eq_2_year_x2"),
                            ("91_x2", "_gt_0_year_lt_eq_1_year_x2"),
                            ("92_x3", "_gt_1_year_lt_eq_2_year_x3"),
                            ("91_x3", "_gt_0_year_lt_eq_1_year_x3"),
                            ("29", "_2y_5y_"),
                            ("37", "Over_5_years"),
                            ("84", "_5y_7y_"),
                            ("85", "Over_7_years"),
                            ("84_x2", "_5y_7y__x2"),
                            ("85_x2", "Over_7_years_x2"),
                            ("84_x3", "_5y_7y__x3"),
                            ("85_x3", "Over_7_years_x3"),
                            ("12", "_3m_6m_"),
                            ("16", "_6m_12m_"),
                            ("21", "_1y_2y_"),
                            ("73", "_0d_30d_"),
                            ("75", "_1d_30d_"),
                            ("64", "_0d_1d_"),
                            ("9", "_1m_3m_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TM_SNC_INTL_RCGNTN",
                    ),
                ),
                (
                    "NN_FNNCL_ASST_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_financial_asset_ID",
                    ),
                ),
                (
                    "CLLTRL_NN_FNNCL_ASST_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Physical_collateral_Investment_property_assignment"),
                            (
                                "2",
                                "Immaterial_rights_as_collateral_Other_intangible_asset_not_taken_into_possession_assignment",
                            ),
                            (
                                "3",
                                "Immaterial_rights_as_collateral_Other_intangible_asset_taken_into_possession_assignment",
                            ),
                            (
                                "4",
                                "Software_collateral_Software_property_plant_and_equipment_not_taken_into_possession_assignment",
                            ),
                            (
                                "5",
                                "Physical_collateral_Non_software_property_plant_and_equipment_not_taken_into_possession_assignment",
                            ),
                            (
                                "6",
                                "Software_collateral_Software_property_plant_and_equipment_taken_into_possession_assignment",
                            ),
                            (
                                "7",
                                "Physical_collateral_Non_software_property_plant_and_equipment_taken_into_possession_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_non_financial_asset_assignment_type",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_NN_FNNCL_ASST_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_nn_fnncl_asst_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Collateral_Non_financial_asset_assignment",
                "verbose_name_plural": "Collateral_Non_financial_asset_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_OFF_BLNC_INSTRMNT_CLLTRL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_OFF_BLNC_INSTRMNT_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_OFF_BLNC_INSTRMNT_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Off_balance_instrument_Collateral_assignment",
                "verbose_name_plural": "Off_balance_instrument_Collateral_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_INSTRMNT_PRTCN_ARRNGMNT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_INSTRMNT_PRTCN_ARRNGMNT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_INSTRMNT_PRTCN_ARRNGMNT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTCTN_ARRNGMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prtctn_arrngmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrument_Protection_arrangement_assignment",
                "verbose_name_plural": "Instrument_Protection_arrangement_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CRDT_RSK_MTGTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_CRDT_RSK_MTGTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CRDT_RSK_MTGTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTCTN_ARRNGMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prtctn_arrngmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit_risk_mitigation_assignment",
                "verbose_name_plural": "Credit_risk_mitigation_assignments",
            },
        ),
        migrations.AddField(
            model_name="bird_clltrl_eil",
            name="the_BIRD_PRTCTN_ARRNGMNT_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_prtctn_arrngmnt_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_PRTCTN_PRTCTN_PRVD_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_PRTCTN_PRTCTN_PRVD_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTCTN_PRTCTN_PRVD_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRMRY_PRTCTN_PRVDR_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Primary_protection_provider"),
                            ("2", "Not_primary_protection_provider"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Primary_protection_provider_indicator",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTCTN_ARRNGMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prtctn_arrngmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Protection_Protection_provider_assignment",
                "verbose_name_plural": "Protection_Protection_provider_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_OTHR_PRTY_ID_EIL",
            fields=[
                (
                    "BIRD_OTHR_PRTY_ID_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_OTHR_PRTY_ID_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Party_Reference_date",
                    ),
                ),
                (
                    "PRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTY_CD_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "LEI"),
                            ("2", "RIAD"),
                            ("3", "Other_party_code"),
                            ("10", "Other_Non_LEI_code"),
                            ("11", "Public_sector_entity_identifier"),
                            ("12", "TAX_Code"),
                            ("13", "Trade_register_identifier"),
                            ("14", "Value_added_tax_identifier"),
                            ("4", "Other"),
                            ("5", "Identifier_assigned_by_the_National_Central_Bank"),
                            ("6", "Investment_Pension_fund_identifier"),
                            ("7", "National_Business_register_identifier"),
                            ("8", "National_Statistical_Institute_number"),
                            ("9", "National_Supervisory_Authority_code"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_code_type",
                    ),
                ),
                (
                    "PRTY_ID_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "LEI"),
                            ("2", "RIAD"),
                            ("3", "Other_party_code"),
                            ("10", "Other_Non_LEI_code"),
                            ("11", "Public_sector_entity_identifier"),
                            ("12", "TAX_Code"),
                            ("13", "Trade_register_identifier"),
                            ("14", "Value_added_tax_identifier"),
                            ("4", "Other"),
                            ("5", "Identifier_assigned_by_the_National_Central_Bank"),
                            ("6", "Investment_Pension_fund_identifier"),
                            ("7", "National_Business_register_identifier"),
                            ("8", "National_Statistical_Institute_number"),
                            ("9", "National_Supervisory_Authority_code"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier_type",
                    ),
                ),
                (
                    "OTHR_PRTY_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "LEI"),
                            ("2", "RIAD"),
                            ("3", "Other_party_code"),
                            ("10", "Other_Non_LEI_code"),
                            ("11", "Public_sector_entity_identifier"),
                            ("12", "TAX_Code"),
                            ("13", "Trade_register_identifier"),
                            ("14", "Value_added_tax_identifier"),
                            ("4", "Other"),
                            ("5", "Identifier_assigned_by_the_National_Central_Bank"),
                            ("6", "Investment_Pension_fund_identifier"),
                            ("7", "National_Business_register_identifier"),
                            ("8", "National_Statistical_Institute_number"),
                            ("9", "National_Supervisory_Authority_code"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other_party_code",
                    ),
                ),
                (
                    "the_BIRD_PRTY_CD_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_cd_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Other_party_identifier",
                "verbose_name_plural": "Other_party_identifiers",
            },
        ),
        migrations.CreateModel(
            name="BIRD_PRTY_EIL",
            fields=[
                (
                    "BIRD_PRTY_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTY_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Party_Reference_date",
                    ),
                ),
                (
                    "INSTTNL_UNT_GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Institutional_unit_Group_identifier",
                    ),
                ),
                (
                    "AREA_ISSR_SHS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Area_where_the_issuer_is_located",
                    ),
                ),
                (
                    "CNTRY_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Country_code",
                    ),
                ),
                (
                    "DFLT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Default_status",
                    ),
                ),
                (
                    "DT_DFLT_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_default_status",
                    ),
                ),
                (
                    "DT_ENTRPRS_SZ",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_enterprise_size",
                    ),
                ),
                (
                    "ECNMC_ACTVTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("94", "Activities_of_membership_organisations"),
                            ("94_9", "Activities_of_other_membership_organisations"),
                            (
                                "94_1",
                                "Activities_of_business_employers_and_professional_membership_organisations",
                            ),
                            ("94_2", "Activities_of_trade_unions"),
                            ("94_92", "Activities_of_political_organisations"),
                            ("94_91", "Activities_of_religious_organisations"),
                            (
                                "94_99",
                                "Activities_of_other_membership_organisations_n_e_c_",
                            ),
                            (
                                "94_11",
                                "Activities_of_business_and_employers_membership_organisations",
                            ),
                            (
                                "94_12",
                                "Activities_of_professional_membership_organisations",
                            ),
                            ("94_20", "Activities_of_trade_unions_x2"),
                            (
                                "94_9_x2",
                                "Activities_of_other_membership_organisations_x2",
                            ),
                            (
                                "94_1_x2",
                                "Activities_of_business_employers_and_professional_membership_organisations_x2",
                            ),
                            ("94_2_x2", "Activities_of_trade_unions_x3"),
                            ("94_92_x2", "Activities_of_political_organisations_x2"),
                            ("94_91_x2", "Activities_of_religious_organisations_x2"),
                            (
                                "94_99_x2",
                                "Activities_of_other_membership_organisations_n_e_c__x2",
                            ),
                            (
                                "94_11_x2",
                                "Activities_of_business_and_employers_membership_organisations_x2",
                            ),
                            (
                                "94_12_x2",
                                "Activities_of_professional_membership_organisations_x2",
                            ),
                            ("94_20_x2", "Activities_of_trade_unions_x4"),
                            (
                                "94_9_x3",
                                "Activities_of_other_membership_organisations_x3",
                            ),
                            (
                                "94_1_x3",
                                "Activities_of_business_employers_and_professional_membership_organisations_x3",
                            ),
                            ("94_2_x3", "Activities_of_trade_unions_x5"),
                            ("94_92_x3", "Activities_of_political_organisations_x3"),
                            ("94_91_x3", "Activities_of_religious_organisations_x3"),
                            (
                                "94_99_x3",
                                "Activities_of_other_membership_organisations_n_e_c__x3",
                            ),
                            (
                                "94_11_x3",
                                "Activities_of_business_and_employers_membership_organisations_x3",
                            ),
                            (
                                "94_12_x3",
                                "Activities_of_professional_membership_organisations_x3",
                            ),
                            ("94_20_x3", "Activities_of_trade_unions_x6"),
                            ("41", "Construction_of_buildings"),
                            ("41_1", "Development_of_building_projects"),
                            (
                                "41_2",
                                "Construction_of_residential_and_non_residential_buildings",
                            ),
                            ("41_10", "Development_of_building_projects_x2"),
                            (
                                "41_20",
                                "Construction_of_residential_and_non_residential_buildings_x2",
                            ),
                            ("41_1_x2", "Development_of_building_projects_x3"),
                            (
                                "41_2_x2",
                                "Construction_of_residential_and_non_residential_buildings_x3",
                            ),
                            ("41_10_x2", "Development_of_building_projects_x4"),
                            (
                                "41_20_x2",
                                "Construction_of_residential_and_non_residential_buildings_x4",
                            ),
                            ("41_1_x3", "Development_of_building_projects_x5"),
                            (
                                "41_2_x3",
                                "Construction_of_residential_and_non_residential_buildings_x5",
                            ),
                            ("41_10_x3", "Development_of_building_projects_x6"),
                            (
                                "41_20_x3",
                                "Construction_of_residential_and_non_residential_buildings_x6",
                            ),
                            ("86", "Human_health_activities"),
                            ("86_9", "Other_human_health_activities"),
                            ("86_2", "Medical_and_dental_practice_activities"),
                            ("86_1", "Hospital_activities"),
                            ("86_90", "Other_human_health_activities_x2"),
                            ("86_22", "Specialist_medical_practice_activities"),
                            ("86_23", "Dental_practice_activities"),
                            ("86_21", "General_medical_practice_activities"),
                            ("86_10", "Hospital_activities_x2"),
                            ("86_9_x2", "Other_human_health_activities_x3"),
                            ("86_2_x2", "Medical_and_dental_practice_activities_x2"),
                            ("86_1_x2", "Hospital_activities_x3"),
                            ("86_90_x2", "Other_human_health_activities_x4"),
                            ("86_22_x2", "Specialist_medical_practice_activities_x2"),
                            ("86_23_x2", "Dental_practice_activities_x2"),
                            ("86_21_x2", "General_medical_practice_activities_x2"),
                            ("86_10_x2", "Hospital_activities_x4"),
                            ("86_9_x3", "Other_human_health_activities_x5"),
                            ("86_2_x3", "Medical_and_dental_practice_activities_x3"),
                            ("86_1_x3", "Hospital_activities_x5"),
                            ("86_90_x3", "Other_human_health_activities_x6"),
                            ("86_22_x3", "Specialist_medical_practice_activities_x3"),
                            ("86_23_x3", "Dental_practice_activities_x3"),
                            ("86_21_x3", "General_medical_practice_activities_x3"),
                            ("86_10_x3", "Hospital_activities_x6"),
                            (
                                "26",
                                "Manufacture_of_computer_electronic_and_optical_products",
                            ),
                            ("26_8", "Manufacture_of_magnetic_and_optical_media"),
                            (
                                "26_2",
                                "Manufacture_of_computers_and_peripheral_equipment",
                            ),
                            ("26_3", "Manufacture_of_communication_equipment"),
                            ("26_1", "Manufacture_of_electronic_components_and_boards"),
                            (
                                "26_5",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation_watches_and_clocks",
                            ),
                            ("26_4", "Manufacture_of_consumer_electronics"),
                            (
                                "26_6",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment",
                            ),
                            (
                                "26_7",
                                "Manufacture_of_optical_instruments_and_photographic_equipment",
                            ),
                            ("26_80", "Manufacture_of_magnetic_and_optical_media_x2"),
                            (
                                "26_20",
                                "Manufacture_of_computers_and_peripheral_equipment_x2",
                            ),
                            ("26_30", "Manufacture_of_communication_equipment_x2"),
                            ("26_12", "Manufacture_of_loaded_electronic_boards"),
                            ("26_11", "Manufacture_of_electronic_components"),
                            ("26_52", "Manufacture_of_watches_and_clocks"),
                            (
                                "26_51",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation",
                            ),
                            ("26_40", "Manufacture_of_consumer_electronics_x2"),
                            (
                                "26_60",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment_x2",
                            ),
                            (
                                "26_70",
                                "Manufacture_of_optical_instruments_and_photographic_equipment_x2",
                            ),
                            ("26_8_x2", "Manufacture_of_magnetic_and_optical_media_x3"),
                            (
                                "26_2_x2",
                                "Manufacture_of_computers_and_peripheral_equipment_x3",
                            ),
                            ("26_3_x2", "Manufacture_of_communication_equipment_x3"),
                            (
                                "26_1_x2",
                                "Manufacture_of_electronic_components_and_boards_x2",
                            ),
                            (
                                "26_5_x2",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation_watches_and_clocks_x2",
                            ),
                            ("26_4_x2", "Manufacture_of_consumer_electronics_x3"),
                            (
                                "26_6_x2",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment_x3",
                            ),
                            (
                                "26_7_x2",
                                "Manufacture_of_optical_instruments_and_photographic_equipment_x3",
                            ),
                            (
                                "26_80_x2",
                                "Manufacture_of_magnetic_and_optical_media_x4",
                            ),
                            (
                                "26_20_x2",
                                "Manufacture_of_computers_and_peripheral_equipment_x4",
                            ),
                            ("26_30_x2", "Manufacture_of_communication_equipment_x4"),
                            ("26_12_x2", "Manufacture_of_loaded_electronic_boards_x2"),
                            ("26_11_x2", "Manufacture_of_electronic_components_x2"),
                            ("26_52_x2", "Manufacture_of_watches_and_clocks_x2"),
                            (
                                "26_51_x2",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation_x2",
                            ),
                            ("26_40_x2", "Manufacture_of_consumer_electronics_x4"),
                            (
                                "26_60_x2",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment_x4",
                            ),
                            (
                                "26_70_x2",
                                "Manufacture_of_optical_instruments_and_photographic_equipment_x4",
                            ),
                            ("26_8_x3", "Manufacture_of_magnetic_and_optical_media_x5"),
                            (
                                "26_2_x3",
                                "Manufacture_of_computers_and_peripheral_equipment_x5",
                            ),
                            ("26_3_x3", "Manufacture_of_communication_equipment_x5"),
                            (
                                "26_1_x3",
                                "Manufacture_of_electronic_components_and_boards_x3",
                            ),
                            (
                                "26_5_x3",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation_watches_and_clocks_x3",
                            ),
                            ("26_4_x3", "Manufacture_of_consumer_electronics_x5"),
                            (
                                "26_6_x3",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment_x5",
                            ),
                            (
                                "26_7_x3",
                                "Manufacture_of_optical_instruments_and_photographic_equipment_x5",
                            ),
                            (
                                "26_80_x3",
                                "Manufacture_of_magnetic_and_optical_media_x6",
                            ),
                            (
                                "26_20_x3",
                                "Manufacture_of_computers_and_peripheral_equipment_x6",
                            ),
                            ("26_30_x3", "Manufacture_of_communication_equipment_x6"),
                            ("26_12_x3", "Manufacture_of_loaded_electronic_boards_x3"),
                            ("26_11_x3", "Manufacture_of_electronic_components_x3"),
                            ("26_52_x3", "Manufacture_of_watches_and_clocks_x3"),
                            (
                                "26_51_x3",
                                "Manufacture_of_instruments_and_appliances_for_measuring_testing_and_navigation_x3",
                            ),
                            ("26_40_x3", "Manufacture_of_consumer_electronics_x6"),
                            (
                                "26_60_x3",
                                "Manufacture_of_irradiation_electromedical_and_electrotherapeutic_equipment_x6",
                            ),
                            (
                                "26_70_x3",
                                "Manufacture_of_optical_instruments_and_photographic_equipment_x6",
                            ),
                            ("53", "Postal_and_courier_activities"),
                            ("53_2", "Other_postal_and_courier_activities"),
                            (
                                "53_1",
                                "Postal_activities_under_universal_service_obligation",
                            ),
                            ("53_20", "Other_postal_and_courier_activities_x2"),
                            (
                                "53_10",
                                "Postal_activities_under_universal_service_obligation_x2",
                            ),
                            ("53_2_x2", "Other_postal_and_courier_activities_x3"),
                            (
                                "53_1_x2",
                                "Postal_activities_under_universal_service_obligation_x3",
                            ),
                            ("53_20_x2", "Other_postal_and_courier_activities_x4"),
                            (
                                "53_10_x2",
                                "Postal_activities_under_universal_service_obligation_x4",
                            ),
                            ("53_2_x3", "Other_postal_and_courier_activities_x5"),
                            (
                                "53_1_x3",
                                "Postal_activities_under_universal_service_obligation_x5",
                            ),
                            ("53_20_x3", "Other_postal_and_courier_activities_x6"),
                            (
                                "53_10_x3",
                                "Postal_activities_under_universal_service_obligation_x6",
                            ),
                            (
                                "19",
                                "Manufacture_of_coke_and_refined_petroleum_products",
                            ),
                            ("19_2", "Manufacture_of_refined_petroleum_products"),
                            ("19_1", "Manufacture_of_coke_oven_products"),
                            ("19_20", "Manufacture_of_refined_petroleum_products_x2"),
                            ("19_10", "Manufacture_of_coke_oven_products_x2"),
                            ("19_2_x2", "Manufacture_of_refined_petroleum_products_x3"),
                            ("19_1_x2", "Manufacture_of_coke_oven_products_x3"),
                            (
                                "19_20_x2",
                                "Manufacture_of_refined_petroleum_products_x4",
                            ),
                            ("19_10_x2", "Manufacture_of_coke_oven_products_x4"),
                            ("19_2_x3", "Manufacture_of_refined_petroleum_products_x5"),
                            ("19_1_x3", "Manufacture_of_coke_oven_products_x5"),
                            (
                                "19_20_x3",
                                "Manufacture_of_refined_petroleum_products_x6",
                            ),
                            ("19_10_x3", "Manufacture_of_coke_oven_products_x6"),
                            ("02", "Forestry_and_logging"),
                            ("02_4", "Support_services_to_forestry"),
                            ("02_1", "Silviculture_and_other_forestry_activities"),
                            ("02_3", "Gathering_of_wild_growing_non_wood_products"),
                            ("02_2", "Logging"),
                            ("02_40", "Support_services_to_forestry_x2"),
                            ("02_10", "Silviculture_and_other_forestry_activities_x2"),
                            ("02_30", "Gathering_of_wild_growing_non_wood_products_x2"),
                            ("02_20", "Logging_x2"),
                            ("02_4_x2", "Support_services_to_forestry_x3"),
                            (
                                "02_1_x2",
                                "Silviculture_and_other_forestry_activities_x3",
                            ),
                            (
                                "02_3_x2",
                                "Gathering_of_wild_growing_non_wood_products_x3",
                            ),
                            ("02_2_x2", "Logging_x3"),
                            ("02_40_x2", "Support_services_to_forestry_x4"),
                            (
                                "02_10_x2",
                                "Silviculture_and_other_forestry_activities_x4",
                            ),
                            (
                                "02_30_x2",
                                "Gathering_of_wild_growing_non_wood_products_x4",
                            ),
                            ("02_20_x2", "Logging_x4"),
                            ("02_4_x3", "Support_services_to_forestry_x5"),
                            (
                                "02_1_x3",
                                "Silviculture_and_other_forestry_activities_x5",
                            ),
                            (
                                "02_3_x3",
                                "Gathering_of_wild_growing_non_wood_products_x5",
                            ),
                            ("02_2_x3", "Logging_x5"),
                            ("02_40_x3", "Support_services_to_forestry_x6"),
                            (
                                "02_10_x3",
                                "Silviculture_and_other_forestry_activities_x6",
                            ),
                            (
                                "02_30_x3",
                                "Gathering_of_wild_growing_non_wood_products_x6",
                            ),
                            ("02_20_x3", "Logging_x6"),
                            ("77", "Rental_and_leasing_activities"),
                            (
                                "77_4",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works",
                            ),
                            ("77_1", "Renting_and_leasing_of_motor_vehicles"),
                            (
                                "77_3",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods",
                            ),
                            (
                                "77_2",
                                "Renting_and_leasing_of_personal_and_household_goods",
                            ),
                            (
                                "77_40",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works_x2",
                            ),
                            ("77_12", "Renting_and_leasing_of_trucks"),
                            (
                                "77_11",
                                "Renting_and_leasing_of_cars_and_light_motor_vehicles",
                            ),
                            (
                                "77_39",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods_n_e_c_",
                            ),
                            (
                                "77_31",
                                "Renting_and_leasing_of_agricultural_machinery_and_equipment",
                            ),
                            (
                                "77_33",
                                "Renting_and_leasing_of_office_machinery_and_equipment_including_computers_",
                            ),
                            (
                                "77_32",
                                "Renting_and_leasing_of_construction_and_civil_engineering_machinery_and_equipment",
                            ),
                            ("77_35", "Renting_and_leasing_of_air_transport_equipment"),
                            (
                                "77_34",
                                "Renting_and_leasing_of_water_transport_equipment",
                            ),
                            (
                                "77_29",
                                "Renting_and_leasing_of_other_personal_and_household_goods",
                            ),
                            (
                                "77_21",
                                "Renting_and_leasing_of_recreational_and_sports_goods",
                            ),
                            ("77_22", "Renting_of_video_tapes_and_disks"),
                            (
                                "77_4_x2",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works_x3",
                            ),
                            ("77_1_x2", "Renting_and_leasing_of_motor_vehicles_x2"),
                            (
                                "77_3_x2",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods_x2",
                            ),
                            (
                                "77_2_x2",
                                "Renting_and_leasing_of_personal_and_household_goods_x2",
                            ),
                            (
                                "77_40_x2",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works_x4",
                            ),
                            ("77_12_x2", "Renting_and_leasing_of_trucks_x2"),
                            (
                                "77_11_x2",
                                "Renting_and_leasing_of_cars_and_light_motor_vehicles_x2",
                            ),
                            (
                                "77_39_x2",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods_n_e_c__x2",
                            ),
                            (
                                "77_31_x2",
                                "Renting_and_leasing_of_agricultural_machinery_and_equipment_x2",
                            ),
                            (
                                "77_33_x2",
                                "Renting_and_leasing_of_office_machinery_and_equipment_including_computers__x2",
                            ),
                            (
                                "77_32_x2",
                                "Renting_and_leasing_of_construction_and_civil_engineering_machinery_and_equipment_x2",
                            ),
                            (
                                "77_35_x2",
                                "Renting_and_leasing_of_air_transport_equipment_x2",
                            ),
                            (
                                "77_34_x2",
                                "Renting_and_leasing_of_water_transport_equipment_x2",
                            ),
                            (
                                "77_29_x2",
                                "Renting_and_leasing_of_other_personal_and_household_goods_x2",
                            ),
                            (
                                "77_21_x2",
                                "Renting_and_leasing_of_recreational_and_sports_goods_x2",
                            ),
                            ("77_22_x2", "Renting_of_video_tapes_and_disks_x2"),
                            (
                                "77_4_x3",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works_x5",
                            ),
                            ("77_1_x3", "Renting_and_leasing_of_motor_vehicles_x3"),
                            (
                                "77_3_x3",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods_x3",
                            ),
                            (
                                "77_2_x3",
                                "Renting_and_leasing_of_personal_and_household_goods_x3",
                            ),
                            (
                                "77_40_x3",
                                "Leasing_of_intellectual_property_and_similar_products_except_copyrighted_works_x6",
                            ),
                            ("77_12_x3", "Renting_and_leasing_of_trucks_x3"),
                            (
                                "77_11_x3",
                                "Renting_and_leasing_of_cars_and_light_motor_vehicles_x3",
                            ),
                            (
                                "77_39_x3",
                                "Renting_and_leasing_of_other_machinery_equipment_and_tangible_goods_n_e_c__x3",
                            ),
                            (
                                "77_31_x3",
                                "Renting_and_leasing_of_agricultural_machinery_and_equipment_x3",
                            ),
                            (
                                "77_33_x3",
                                "Renting_and_leasing_of_office_machinery_and_equipment_including_computers__x3",
                            ),
                            (
                                "77_32_x3",
                                "Renting_and_leasing_of_construction_and_civil_engineering_machinery_and_equipment_x3",
                            ),
                            (
                                "77_35_x3",
                                "Renting_and_leasing_of_air_transport_equipment_x3",
                            ),
                            (
                                "77_34_x3",
                                "Renting_and_leasing_of_water_transport_equipment_x3",
                            ),
                            (
                                "77_29_x3",
                                "Renting_and_leasing_of_other_personal_and_household_goods_x3",
                            ),
                            (
                                "77_21_x3",
                                "Renting_and_leasing_of_recreational_and_sports_goods_x3",
                            ),
                            ("77_22_x3", "Renting_of_video_tapes_and_disks_x3"),
                            ("10", "Manufacture_of_food_products"),
                            (
                                "10_2",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs",
                            ),
                            (
                                "10_3",
                                "Processing_and_preserving_of_fruit_and_vegetables",
                            ),
                            (
                                "10_1",
                                "Processing_and_preserving_of_meat_and_production_of_meat_products",
                            ),
                            ("10_5", "Manufacture_of_dairy_products"),
                            (
                                "10_4",
                                "Manufacture_of_vegetable_and_animal_oils_and_fats",
                            ),
                            (
                                "10_6",
                                "Manufacture_of_grain_mill_products_starches_and_starch_products",
                            ),
                            ("10_7", "Manufacture_of_bakery_and_farinaceous_products"),
                            ("10_8", "Manufacture_of_other_food_products"),
                            ("10_9", "Manufacture_of_prepared_animal_feeds"),
                            (
                                "10_20",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs_x2",
                            ),
                            (
                                "10_39",
                                "Other_processing_and_preserving_of_fruit_and_vegetables",
                            ),
                            ("10_31", "Processing_and_preserving_of_potatoes"),
                            ("10_32", "Manufacture_of_fruit_and_vegetable_juice"),
                            ("10_12", "Processing_and_preserving_of_poultry_meat"),
                            ("10_13", "Production_of_meat_and_poultry_meat_products"),
                            ("10_11", "Processing_and_preserving_of_meat"),
                            ("10_52", "Manufacture_of_ice_cream"),
                            ("10_51", "Operation_of_dairies_and_cheese_making"),
                            (
                                "10_42",
                                "Manufacture_of_margarine_and_similar_edible_fats",
                            ),
                            ("10_41", "Manufacture_of_oils_and_fats"),
                            ("10_61", "Manufacture_of_grain_mill_products"),
                            ("10_62", "Manufacture_of_starches_and_starch_products"),
                            (
                                "10_71",
                                "Manufacture_of_bread_manufacture_of_fresh_pastry_goods_and_cakes",
                            ),
                            (
                                "10_72",
                                "Manufacture_of_rusks_and_biscuits_manufacture_of_preserved_pastry_goods_and_cakes",
                            ),
                            (
                                "10_73",
                                "Manufacture_of_macaroni_noodles_couscous_and_similar_farinaceous_products",
                            ),
                            ("10_89", "Manufacture_of_other_food_products_n_e_c_"),
                            ("10_81", "Manufacture_of_sugar"),
                            ("10_83", "Processing_of_tea_and_coffee"),
                            (
                                "10_82",
                                "Manufacture_of_cocoa_chocolate_and_sugar_confectionery",
                            ),
                            (
                                "10_86",
                                "Manufacture_of_homogenised_food_preparations_and_dietetic_food",
                            ),
                            ("10_85", "Manufacture_of_prepared_meals_and_dishes"),
                            ("10_84", "Manufacture_of_condiments_and_seasonings"),
                            ("10_91", "Manufacture_of_prepared_feeds_for_farm_animals"),
                            ("10_92", "Manufacture_of_prepared_pet_foods"),
                            (
                                "10_2_x2",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs_x3",
                            ),
                            (
                                "10_3_x2",
                                "Processing_and_preserving_of_fruit_and_vegetables_x2",
                            ),
                            (
                                "10_1_x2",
                                "Processing_and_preserving_of_meat_and_production_of_meat_products_x2",
                            ),
                            ("10_5_x2", "Manufacture_of_dairy_products_x2"),
                            (
                                "10_4_x2",
                                "Manufacture_of_vegetable_and_animal_oils_and_fats_x2",
                            ),
                            (
                                "10_6_x2",
                                "Manufacture_of_grain_mill_products_starches_and_starch_products_x2",
                            ),
                            (
                                "10_7_x2",
                                "Manufacture_of_bakery_and_farinaceous_products_x2",
                            ),
                            ("10_8_x2", "Manufacture_of_other_food_products_x2"),
                            ("10_9_x2", "Manufacture_of_prepared_animal_feeds_x2"),
                            (
                                "10_20_x2",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs_x4",
                            ),
                            (
                                "10_39_x2",
                                "Other_processing_and_preserving_of_fruit_and_vegetables_x2",
                            ),
                            ("10_31_x2", "Processing_and_preserving_of_potatoes_x2"),
                            ("10_32_x2", "Manufacture_of_fruit_and_vegetable_juice_x2"),
                            (
                                "10_12_x2",
                                "Processing_and_preserving_of_poultry_meat_x2",
                            ),
                            (
                                "10_13_x2",
                                "Production_of_meat_and_poultry_meat_products_x2",
                            ),
                            ("10_11_x2", "Processing_and_preserving_of_meat_x2"),
                            ("10_52_x2", "Manufacture_of_ice_cream_x2"),
                            ("10_51_x2", "Operation_of_dairies_and_cheese_making_x2"),
                            (
                                "10_42_x2",
                                "Manufacture_of_margarine_and_similar_edible_fats_x2",
                            ),
                            ("10_41_x2", "Manufacture_of_oils_and_fats_x2"),
                            ("10_61_x2", "Manufacture_of_grain_mill_products_x2"),
                            (
                                "10_62_x2",
                                "Manufacture_of_starches_and_starch_products_x2",
                            ),
                            (
                                "10_71_x2",
                                "Manufacture_of_bread_manufacture_of_fresh_pastry_goods_and_cakes_x2",
                            ),
                            (
                                "10_72_x2",
                                "Manufacture_of_rusks_and_biscuits_manufacture_of_preserved_pastry_goods_and_cakes_x2",
                            ),
                            (
                                "10_73_x2",
                                "Manufacture_of_macaroni_noodles_couscous_and_similar_farinaceous_products_x2",
                            ),
                            (
                                "10_89_x2",
                                "Manufacture_of_other_food_products_n_e_c__x2",
                            ),
                            ("10_81_x2", "Manufacture_of_sugar_x2"),
                            ("10_83_x2", "Processing_of_tea_and_coffee_x2"),
                            (
                                "10_82_x2",
                                "Manufacture_of_cocoa_chocolate_and_sugar_confectionery_x2",
                            ),
                            (
                                "10_86_x2",
                                "Manufacture_of_homogenised_food_preparations_and_dietetic_food_x2",
                            ),
                            ("10_85_x2", "Manufacture_of_prepared_meals_and_dishes_x2"),
                            ("10_84_x2", "Manufacture_of_condiments_and_seasonings_x2"),
                            (
                                "10_91_x2",
                                "Manufacture_of_prepared_feeds_for_farm_animals_x2",
                            ),
                            ("10_92_x2", "Manufacture_of_prepared_pet_foods_x2"),
                            (
                                "10_2_x3",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs_x5",
                            ),
                            (
                                "10_3_x3",
                                "Processing_and_preserving_of_fruit_and_vegetables_x3",
                            ),
                            (
                                "10_1_x3",
                                "Processing_and_preserving_of_meat_and_production_of_meat_products_x3",
                            ),
                            ("10_5_x3", "Manufacture_of_dairy_products_x3"),
                            (
                                "10_4_x3",
                                "Manufacture_of_vegetable_and_animal_oils_and_fats_x3",
                            ),
                            (
                                "10_6_x3",
                                "Manufacture_of_grain_mill_products_starches_and_starch_products_x3",
                            ),
                            (
                                "10_7_x3",
                                "Manufacture_of_bakery_and_farinaceous_products_x3",
                            ),
                            ("10_8_x3", "Manufacture_of_other_food_products_x3"),
                            ("10_9_x3", "Manufacture_of_prepared_animal_feeds_x3"),
                            (
                                "10_20_x3",
                                "Processing_and_preserving_of_fish_crustaceans_and_molluscs_x6",
                            ),
                            (
                                "10_39_x3",
                                "Other_processing_and_preserving_of_fruit_and_vegetables_x3",
                            ),
                            ("10_31_x3", "Processing_and_preserving_of_potatoes_x3"),
                            ("10_32_x3", "Manufacture_of_fruit_and_vegetable_juice_x3"),
                            (
                                "10_12_x3",
                                "Processing_and_preserving_of_poultry_meat_x3",
                            ),
                            (
                                "10_13_x3",
                                "Production_of_meat_and_poultry_meat_products_x3",
                            ),
                            ("10_11_x3", "Processing_and_preserving_of_meat_x3"),
                            ("10_52_x3", "Manufacture_of_ice_cream_x3"),
                            ("10_51_x3", "Operation_of_dairies_and_cheese_making_x3"),
                            (
                                "10_42_x3",
                                "Manufacture_of_margarine_and_similar_edible_fats_x3",
                            ),
                            ("10_41_x3", "Manufacture_of_oils_and_fats_x3"),
                            ("10_61_x3", "Manufacture_of_grain_mill_products_x3"),
                            (
                                "10_62_x3",
                                "Manufacture_of_starches_and_starch_products_x3",
                            ),
                            (
                                "10_71_x3",
                                "Manufacture_of_bread_manufacture_of_fresh_pastry_goods_and_cakes_x3",
                            ),
                            (
                                "10_72_x3",
                                "Manufacture_of_rusks_and_biscuits_manufacture_of_preserved_pastry_goods_and_cakes_x3",
                            ),
                            (
                                "10_73_x3",
                                "Manufacture_of_macaroni_noodles_couscous_and_similar_farinaceous_products_x3",
                            ),
                            (
                                "10_89_x3",
                                "Manufacture_of_other_food_products_n_e_c__x3",
                            ),
                            ("10_81_x3", "Manufacture_of_sugar_x3"),
                            ("10_83_x3", "Processing_of_tea_and_coffee_x3"),
                            (
                                "10_82_x3",
                                "Manufacture_of_cocoa_chocolate_and_sugar_confectionery_x3",
                            ),
                            (
                                "10_86_x3",
                                "Manufacture_of_homogenised_food_preparations_and_dietetic_food_x3",
                            ),
                            ("10_85_x3", "Manufacture_of_prepared_meals_and_dishes_x3"),
                            ("10_84_x3", "Manufacture_of_condiments_and_seasonings_x3"),
                            (
                                "10_91_x3",
                                "Manufacture_of_prepared_feeds_for_farm_animals_x3",
                            ),
                            ("10_92_x3", "Manufacture_of_prepared_pet_foods_x3"),
                            (
                                "65",
                                "Insurance_reinsurance_and_pension_funding_except_compulsory_social_security",
                            ),
                            ("65_2", "Reinsurance"),
                            ("65_3", "Pension_funding"),
                            ("65_1", "Insurance"),
                            ("65_20", "Reinsurance_x2"),
                            ("65_30", "Pension_funding_x2"),
                            ("65_12", "Non_life_insurance"),
                            ("65_11", "Life_insurance"),
                            ("65_2_x2", "Reinsurance_x3"),
                            ("65_3_x2", "Pension_funding_x3"),
                            ("65_1_x2", "Insurance_x2"),
                            ("65_20_x2", "Reinsurance_x4"),
                            ("65_30_x2", "Pension_funding_x4"),
                            ("65_12_x2", "Non_life_insurance_x2"),
                            ("65_11_x2", "Life_insurance_x2"),
                            ("65_2_x3", "Reinsurance_x5"),
                            ("65_3_x3", "Pension_funding_x5"),
                            ("65_1_x3", "Insurance_x3"),
                            ("65_20_x3", "Reinsurance_x6"),
                            ("65_30_x3", "Pension_funding_x6"),
                            ("65_12_x3", "Non_life_insurance_x3"),
                            ("65_11_x3", "Life_insurance_x3"),
                            ("58", "Publishing_activities"),
                            ("58_2", "Software_publishing"),
                            (
                                "58_1",
                                "Publishing_of_books_periodicals_and_other_publishing_activities",
                            ),
                            ("58_29", "Other_software_publishing"),
                            ("58_21", "Publishing_of_computer_games"),
                            ("58_14", "Publishing_of_journals_and_periodicals"),
                            ("58_11", "Book_publishing"),
                            ("58_19", "Other_publishing_activities"),
                            ("58_12", "Publishing_of_directories_and_mailing_lists"),
                            ("58_13", "Publishing_of_Newspapers"),
                            ("58_2_x2", "Software_publishing_x2"),
                            (
                                "58_1_x2",
                                "Publishing_of_books_periodicals_and_other_publishing_activities_x2",
                            ),
                            ("58_29_x2", "Other_software_publishing_x2"),
                            ("58_21_x2", "Publishing_of_computer_games_x2"),
                            ("58_14_x2", "Publishing_of_journals_and_periodicals_x2"),
                            ("58_11_x2", "Book_publishing_x2"),
                            ("58_19_x2", "Other_publishing_activities_x2"),
                            (
                                "58_12_x2",
                                "Publishing_of_directories_and_mailing_lists_x2",
                            ),
                            ("58_13_x2", "Publishing_of_Newspapers_x2"),
                            ("58_2_x3", "Software_publishing_x3"),
                            (
                                "58_1_x3",
                                "Publishing_of_books_periodicals_and_other_publishing_activities_x3",
                            ),
                            ("58_29_x3", "Other_software_publishing_x3"),
                            ("58_21_x3", "Publishing_of_computer_games_x3"),
                            ("58_14_x3", "Publishing_of_journals_and_periodicals_x3"),
                            ("58_11_x3", "Book_publishing_x3"),
                            ("58_19_x3", "Other_publishing_activities_x3"),
                            (
                                "58_12_x3",
                                "Publishing_of_directories_and_mailing_lists_x3",
                            ),
                            ("58_13_x3", "Publishing_of_Newspapers_x3"),
                            ("12", "Manufacture_of_tobacco_products"),
                            ("12_0", "Manufacture_of_tobacco_products_x2"),
                            ("12_00", "Manufacture_of_tobacco_products_x3"),
                            ("12_0_x2", "Manufacture_of_tobacco_products_x4"),
                            ("12_00_x2", "Manufacture_of_tobacco_products_x5"),
                            ("12_0_x3", "Manufacture_of_tobacco_products_x6"),
                            ("12_00_x3", "Manufacture_of_tobacco_products_x7"),
                            ("75", "Veterinary_activities"),
                            ("75_0", "Veterinary_activities_x2"),
                            ("75_00", "Veterinary_activities_x3"),
                            ("75_0_x2", "Veterinary_activities_x4"),
                            ("75_00_x2", "Veterinary_activities_x5"),
                            ("75_0_x3", "Veterinary_activities_x6"),
                            ("75_00_x3", "Veterinary_activities_x7"),
                            (
                                "84",
                                "Public_administration_and_defence_compulsory_social_security",
                            ),
                            (
                                "84_2",
                                "Provision_of_services_to_the_community_as_a_whole",
                            ),
                            ("84_3", "Compulsory_social_security_activities"),
                            (
                                "84_1",
                                "Administration_of_the_State_and_the_economic_and_social_policy_of_the_community",
                            ),
                            ("84_24", "Public_order_and_safety_activities"),
                            ("84_25", "Fire_service_activities"),
                            ("84_22", "Defence_activities"),
                            ("84_23", "Justice_and_judicial_activities"),
                            ("84_21", "Foreign_affairs"),
                            ("84_30", "Compulsory_social_security_activities_x2"),
                            ("84_11", "General_public_administration_activities"),
                            (
                                "84_13",
                                "Regulation_of_and_contribution_to_more_efficient_operation_of_businesses",
                            ),
                            (
                                "84_12",
                                "Regulation_of_the_activities_of_providing_health_care_education_cultural_services_and_other_social_services_excluding_social_security",
                            ),
                            (
                                "84_2_x2",
                                "Provision_of_services_to_the_community_as_a_whole_x2",
                            ),
                            ("84_3_x2", "Compulsory_social_security_activities_x3"),
                            (
                                "84_1_x2",
                                "Administration_of_the_State_and_the_economic_and_social_policy_of_the_community_x2",
                            ),
                            ("84_24_x2", "Public_order_and_safety_activities_x2"),
                            ("84_25_x2", "Fire_service_activities_x2"),
                            ("84_22_x2", "Defence_activities_x2"),
                            ("84_23_x2", "Justice_and_judicial_activities_x2"),
                            ("84_21_x2", "Foreign_affairs_x2"),
                            ("84_30_x2", "Compulsory_social_security_activities_x4"),
                            ("84_11_x2", "General_public_administration_activities_x2"),
                            (
                                "84_13_x2",
                                "Regulation_of_and_contribution_to_more_efficient_operation_of_businesses_x2",
                            ),
                            (
                                "84_12_x2",
                                "Regulation_of_the_activities_of_providing_health_care_education_cultural_services_and_other_social_services_excluding_social_security_x2",
                            ),
                            (
                                "84_2_x3",
                                "Provision_of_services_to_the_community_as_a_whole_x3",
                            ),
                            ("84_3_x3", "Compulsory_social_security_activities_x5"),
                            (
                                "84_1_x3",
                                "Administration_of_the_State_and_the_economic_and_social_policy_of_the_community_x3",
                            ),
                            ("84_24_x3", "Public_order_and_safety_activities_x3"),
                            ("84_25_x3", "Fire_service_activities_x3"),
                            ("84_22_x3", "Defence_activities_x3"),
                            ("84_23_x3", "Justice_and_judicial_activities_x3"),
                            ("84_21_x3", "Foreign_affairs_x3"),
                            ("84_30_x3", "Compulsory_social_security_activities_x6"),
                            ("84_11_x3", "General_public_administration_activities_x3"),
                            (
                                "84_13_x3",
                                "Regulation_of_and_contribution_to_more_efficient_operation_of_businesses_x3",
                            ),
                            (
                                "84_12_x3",
                                "Regulation_of_the_activities_of_providing_health_care_education_cultural_services_and_other_social_services_excluding_social_security_x3",
                            ),
                            ("51", "Air_transport"),
                            ("51_2", "Freight_air_transport_and_space_transport"),
                            ("51_1", "Passenger_air_transport"),
                            ("51_21", "Freight_air_transport"),
                            ("51_22", "Space_transport"),
                            ("51_10", "Passenger_air_transport_x2"),
                            ("51_2_x2", "Freight_air_transport_and_space_transport_x2"),
                            ("51_1_x2", "Passenger_air_transport_x3"),
                            ("51_21_x2", "Freight_air_transport_x2"),
                            ("51_22_x2", "Space_transport_x2"),
                            ("51_10_x2", "Passenger_air_transport_x4"),
                            ("51_2_x3", "Freight_air_transport_and_space_transport_x3"),
                            ("51_1_x3", "Passenger_air_transport_x5"),
                            ("51_21_x3", "Freight_air_transport_x3"),
                            ("51_22_x3", "Space_transport_x3"),
                            ("51_10_x3", "Passenger_air_transport_x6"),
                            ("24", "Manufacture_of_basic_metals"),
                            ("24_5", "Casting_of_metals"),
                            (
                                "24_4",
                                "Manufacture_of_basic_precious_and_other_non_ferrous_metals",
                            ),
                            (
                                "24_2",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel",
                            ),
                            (
                                "24_3",
                                "Manufacture_of_other_products_of_first_processing_of_steel",
                            ),
                            (
                                "24_1",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys",
                            ),
                            ("24_52", "Casting_of_steel"),
                            ("24_53", "Casting_of_light_metals"),
                            ("24_51", "Casting_of_iron"),
                            ("24_54", "Casting_of_other_non_ferrous_metals"),
                            ("24_44", "Copper_production"),
                            ("24_45", "Other_non_ferrous_metal_production"),
                            ("24_46", "Processing_of_nuclear_fuel"),
                            ("24_42", "Aluminium_production"),
                            ("24_43", "Lead_zinc_and_tin_production"),
                            ("24_41", "Precious_metals_production"),
                            (
                                "24_20",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel_x2",
                            ),
                            ("24_34", "Cold_drawing_of_wire"),
                            ("24_31", "Cold_drawing_of_bars"),
                            ("24_32", "Cold_rolling_of_narrow_strip"),
                            ("24_33", "Cold_forming_or_folding"),
                            (
                                "24_10",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys_x2",
                            ),
                            ("24_5_x2", "Casting_of_metals_x2"),
                            (
                                "24_4_x2",
                                "Manufacture_of_basic_precious_and_other_non_ferrous_metals_x2",
                            ),
                            (
                                "24_2_x2",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel_x3",
                            ),
                            (
                                "24_3_x2",
                                "Manufacture_of_other_products_of_first_processing_of_steel_x2",
                            ),
                            (
                                "24_1_x2",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys_x3",
                            ),
                            ("24_52_x2", "Casting_of_steel_x2"),
                            ("24_53_x2", "Casting_of_light_metals_x2"),
                            ("24_51_x2", "Casting_of_iron_x2"),
                            ("24_54_x2", "Casting_of_other_non_ferrous_metals_x2"),
                            ("24_44_x2", "Copper_production_x2"),
                            ("24_45_x2", "Other_non_ferrous_metal_production_x2"),
                            ("24_46_x2", "Processing_of_nuclear_fuel_x2"),
                            ("24_42_x2", "Aluminium_production_x2"),
                            ("24_43_x2", "Lead_zinc_and_tin_production_x2"),
                            ("24_41_x2", "Precious_metals_production_x2"),
                            (
                                "24_20_x2",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel_x4",
                            ),
                            ("24_34_x2", "Cold_drawing_of_wire_x2"),
                            ("24_31_x2", "Cold_drawing_of_bars_x2"),
                            ("24_32_x2", "Cold_rolling_of_narrow_strip_x2"),
                            ("24_33_x2", "Cold_forming_or_folding_x2"),
                            (
                                "24_10_x2",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys_x4",
                            ),
                            ("24_5_x3", "Casting_of_metals_x3"),
                            (
                                "24_4_x3",
                                "Manufacture_of_basic_precious_and_other_non_ferrous_metals_x3",
                            ),
                            (
                                "24_2_x3",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel_x5",
                            ),
                            (
                                "24_3_x3",
                                "Manufacture_of_other_products_of_first_processing_of_steel_x3",
                            ),
                            (
                                "24_1_x3",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys_x5",
                            ),
                            ("24_52_x3", "Casting_of_steel_x3"),
                            ("24_53_x3", "Casting_of_light_metals_x3"),
                            ("24_51_x3", "Casting_of_iron_x3"),
                            ("24_54_x3", "Casting_of_other_non_ferrous_metals_x3"),
                            ("24_44_x3", "Copper_production_x3"),
                            ("24_45_x3", "Other_non_ferrous_metal_production_x3"),
                            ("24_46_x3", "Processing_of_nuclear_fuel_x3"),
                            ("24_42_x3", "Aluminium_production_x3"),
                            ("24_43_x3", "Lead_zinc_and_tin_production_x3"),
                            ("24_41_x3", "Precious_metals_production_x3"),
                            (
                                "24_20_x3",
                                "Manufacture_of_tubes_pipes_hollow_profiles_and_related_fittings_of_steel_x6",
                            ),
                            ("24_34_x3", "Cold_drawing_of_wire_x3"),
                            ("24_31_x3", "Cold_drawing_of_bars_x3"),
                            ("24_32_x3", "Cold_rolling_of_narrow_strip_x3"),
                            ("24_33_x3", "Cold_forming_or_folding_x3"),
                            (
                                "24_10_x3",
                                "Manufacture_of_basic_iron_and_steel_and_of_ferro_alloys_x6",
                            ),
                            ("96", "Other_personal_service_activities"),
                            ("96_0", "Other_personal_service_activities_x2"),
                            ("96_09", "Other_personal_service_activities_n_e_c_"),
                            (
                                "96_01",
                                "Washing_and_dry_cleaning_of_textile_and_fur_products",
                            ),
                            ("96_03", "Funeral_and_related_activities"),
                            ("96_02", "Hairdressing_and_other_beauty_treatment"),
                            ("96_04", "Physical_well_being_activities"),
                            ("96_0_x2", "Other_personal_service_activities_x3"),
                            ("96_09_x2", "Other_personal_service_activities_n_e_c__x2"),
                            (
                                "96_01_x2",
                                "Washing_and_dry_cleaning_of_textile_and_fur_products_x2",
                            ),
                            ("96_03_x2", "Funeral_and_related_activities_x2"),
                            ("96_02_x2", "Hairdressing_and_other_beauty_treatment_x2"),
                            ("96_04_x2", "Physical_well_being_activities_x2"),
                            ("96_0_x3", "Other_personal_service_activities_x4"),
                            ("96_09_x3", "Other_personal_service_activities_n_e_c__x3"),
                            (
                                "96_01_x3",
                                "Washing_and_dry_cleaning_of_textile_and_fur_products_x3",
                            ),
                            ("96_03_x3", "Funeral_and_related_activities_x3"),
                            ("96_02_x3", "Hairdressing_and_other_beauty_treatment_x3"),
                            ("96_04_x3", "Physical_well_being_activities_x3"),
                            ("09", "Mining_support_service_activities"),
                            (
                                "09_9",
                                "Support_activities_for_other_mining_and_quarrying",
                            ),
                            (
                                "09_1",
                                "Support_activities_for_petroleum_and_natural_gas_extraction",
                            ),
                            (
                                "09_90",
                                "Support_activities_for_other_mining_and_quarrying_x2",
                            ),
                            (
                                "09_10",
                                "Support_activities_for_petroleum_and_natural_gas_extraction_x2",
                            ),
                            (
                                "09_9_x2",
                                "Support_activities_for_other_mining_and_quarrying_x3",
                            ),
                            (
                                "09_1_x2",
                                "Support_activities_for_petroleum_and_natural_gas_extraction_x3",
                            ),
                            (
                                "09_90_x2",
                                "Support_activities_for_other_mining_and_quarrying_x4",
                            ),
                            (
                                "09_10_x2",
                                "Support_activities_for_petroleum_and_natural_gas_extraction_x4",
                            ),
                            (
                                "09_9_x3",
                                "Support_activities_for_other_mining_and_quarrying_x5",
                            ),
                            (
                                "09_1_x3",
                                "Support_activities_for_petroleum_and_natural_gas_extraction_x5",
                            ),
                            (
                                "09_90_x3",
                                "Support_activities_for_other_mining_and_quarrying_x6",
                            ),
                            (
                                "09_10_x3",
                                "Support_activities_for_petroleum_and_natural_gas_extraction_x6",
                            ),
                            ("43", "Specialised_construction_activities"),
                            ("43_9", "Other_specialised_construction_activities"),
                            ("43_1", "Demolition_and_site_preparation"),
                            ("43_3", "Building_completion_and_finishing"),
                            (
                                "43_2",
                                "Electrical_plumbing_and_other_construction_installation_activities",
                            ),
                            ("43_91", "Roofing_activities"),
                            (
                                "43_99",
                                "Other_specialised_construction_activities_n_e_c_",
                            ),
                            ("43_13", "Test_drilling_and_boring"),
                            ("43_12", "Site_preparation"),
                            ("43_11", "Demolition"),
                            ("43_34", "Painting_and_glazing"),
                            ("43_31", "Plastering"),
                            ("43_39", "Other_building_completion_and_finishing"),
                            ("43_32", "Joinery_installation"),
                            ("43_33", "Floor_and_wall_covering"),
                            ("43_21", "Electrical_installation"),
                            ("43_29", "Other_construction_installation"),
                            (
                                "43_22",
                                "Plumbing_heat_and_air_conditioning_installation",
                            ),
                            ("43_9_x2", "Other_specialised_construction_activities_x2"),
                            ("43_1_x2", "Demolition_and_site_preparation_x2"),
                            ("43_3_x2", "Building_completion_and_finishing_x2"),
                            (
                                "43_2_x2",
                                "Electrical_plumbing_and_other_construction_installation_activities_x2",
                            ),
                            ("43_91_x2", "Roofing_activities_x2"),
                            (
                                "43_99_x2",
                                "Other_specialised_construction_activities_n_e_c__x2",
                            ),
                            ("43_13_x2", "Test_drilling_and_boring_x2"),
                            ("43_12_x2", "Site_preparation_x2"),
                            ("43_11_x2", "Demolition_x2"),
                            ("43_34_x2", "Painting_and_glazing_x2"),
                            ("43_31_x2", "Plastering_x2"),
                            ("43_39_x2", "Other_building_completion_and_finishing_x2"),
                            ("43_32_x2", "Joinery_installation_x2"),
                            ("43_33_x2", "Floor_and_wall_covering_x2"),
                            ("43_21_x2", "Electrical_installation_x2"),
                            ("43_29_x2", "Other_construction_installation_x2"),
                            (
                                "43_22_x2",
                                "Plumbing_heat_and_air_conditioning_installation_x2",
                            ),
                            ("43_9_x3", "Other_specialised_construction_activities_x3"),
                            ("43_1_x3", "Demolition_and_site_preparation_x3"),
                            ("43_3_x3", "Building_completion_and_finishing_x3"),
                            (
                                "43_2_x3",
                                "Electrical_plumbing_and_other_construction_installation_activities_x3",
                            ),
                            ("43_91_x3", "Roofing_activities_x3"),
                            (
                                "43_99_x3",
                                "Other_specialised_construction_activities_n_e_c__x3",
                            ),
                            ("43_13_x3", "Test_drilling_and_boring_x3"),
                            ("43_12_x3", "Site_preparation_x3"),
                            ("43_11_x3", "Demolition_x3"),
                            ("43_34_x3", "Painting_and_glazing_x3"),
                            ("43_31_x3", "Plastering_x3"),
                            ("43_39_x3", "Other_building_completion_and_finishing_x3"),
                            ("43_32_x3", "Joinery_installation_x3"),
                            ("43_33_x3", "Floor_and_wall_covering_x3"),
                            ("43_21_x3", "Electrical_installation_x3"),
                            ("43_29_x3", "Other_construction_installation_x3"),
                            (
                                "43_22_x3",
                                "Plumbing_heat_and_air_conditioning_installation_x3",
                            ),
                            ("36", "Water_collection_treatment_and_supply"),
                            ("36_0", "Water_collection_treatment_and_supply_x2"),
                            ("36_00", "Water_collection_treatment_and_supply_x3"),
                            ("36_0_x2", "Water_collection_treatment_and_supply_x4"),
                            ("36_00_x2", "Water_collection_treatment_and_supply_x5"),
                            ("36_0_x3", "Water_collection_treatment_and_supply_x6"),
                            ("36_00_x3", "Water_collection_treatment_and_supply_x7"),
                            ("20", "Manufacture_of_chemicals_and_chemical_products"),
                            ("20_6", "Manufacture_of_man_made_fibres"),
                            ("20_5", "Manufacture_of_other_chemical_products"),
                            (
                                "20_4",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations_perfumes_and_toilet_preparations",
                            ),
                            (
                                "20_1",
                                "Manufacture_of_basic_chemicals_fertilisers_and_nitrogen_compounds_plastics_and_synthetic_rubber_in_primary_forms",
                            ),
                            (
                                "20_2",
                                "Manufacture_of_pesticides_and_other_agrochemical_products",
                            ),
                            (
                                "20_3",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics",
                            ),
                            ("20_60", "Manufacture_of_man_made_fibres_x2"),
                            ("20_51", "Manufacture_of_explosives"),
                            ("20_59", "Manufacture_of_other_chemical_products_n_e_c_"),
                            ("20_52", "Manufacture_of_glues"),
                            ("20_53", "Manufacture_of_essential_oils"),
                            (
                                "20_41",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations",
                            ),
                            (
                                "20_42",
                                "Manufacture_of_perfumes_and_toilet_preparations",
                            ),
                            ("20_16", "Manufacture_of_plastics_in_primary_forms"),
                            (
                                "20_17",
                                "Manufacture_of_synthetic_rubber_in_primary_forms",
                            ),
                            (
                                "20_15",
                                "Manufacture_of_fertilisers_and_nitrogen_compounds",
                            ),
                            ("20_14", "Manufacture_of_other_organic_basic_chemicals"),
                            ("20_11", "Manufacture_of_industrial_gases"),
                            ("20_13", "Manufacture_of_other_inorganic_basic_chemicals"),
                            ("20_12", "Manufacture_of_dyes_and_pigments"),
                            (
                                "20_20",
                                "Manufacture_of_pesticides_and_other_agrochemical_products_x2",
                            ),
                            (
                                "20_30",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics_x2",
                            ),
                            ("20_6_x2", "Manufacture_of_man_made_fibres_x3"),
                            ("20_5_x2", "Manufacture_of_other_chemical_products_x2"),
                            (
                                "20_4_x2",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations_perfumes_and_toilet_preparations_x2",
                            ),
                            (
                                "20_1_x2",
                                "Manufacture_of_basic_chemicals_fertilisers_and_nitrogen_compounds_plastics_and_synthetic_rubber_in_primary_forms_x2",
                            ),
                            (
                                "20_2_x2",
                                "Manufacture_of_pesticides_and_other_agrochemical_products_x3",
                            ),
                            (
                                "20_3_x2",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics_x3",
                            ),
                            ("20_60_x2", "Manufacture_of_man_made_fibres_x4"),
                            ("20_51_x2", "Manufacture_of_explosives_x2"),
                            (
                                "20_59_x2",
                                "Manufacture_of_other_chemical_products_n_e_c__x2",
                            ),
                            ("20_52_x2", "Manufacture_of_glues_x2"),
                            ("20_53_x2", "Manufacture_of_essential_oils_x2"),
                            (
                                "20_41_x2",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations_x2",
                            ),
                            (
                                "20_42_x2",
                                "Manufacture_of_perfumes_and_toilet_preparations_x2",
                            ),
                            ("20_16_x2", "Manufacture_of_plastics_in_primary_forms_x2"),
                            (
                                "20_17_x2",
                                "Manufacture_of_synthetic_rubber_in_primary_forms_x2",
                            ),
                            (
                                "20_15_x2",
                                "Manufacture_of_fertilisers_and_nitrogen_compounds_x2",
                            ),
                            (
                                "20_14_x2",
                                "Manufacture_of_other_organic_basic_chemicals_x2",
                            ),
                            ("20_11_x2", "Manufacture_of_industrial_gases_x2"),
                            (
                                "20_13_x2",
                                "Manufacture_of_other_inorganic_basic_chemicals_x2",
                            ),
                            ("20_12_x2", "Manufacture_of_dyes_and_pigments_x2"),
                            (
                                "20_20_x2",
                                "Manufacture_of_pesticides_and_other_agrochemical_products_x4",
                            ),
                            (
                                "20_30_x2",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics_x4",
                            ),
                            ("20_6_x3", "Manufacture_of_man_made_fibres_x5"),
                            ("20_5_x3", "Manufacture_of_other_chemical_products_x3"),
                            (
                                "20_4_x3",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations_perfumes_and_toilet_preparations_x3",
                            ),
                            (
                                "20_1_x3",
                                "Manufacture_of_basic_chemicals_fertilisers_and_nitrogen_compounds_plastics_and_synthetic_rubber_in_primary_forms_x3",
                            ),
                            (
                                "20_2_x3",
                                "Manufacture_of_pesticides_and_other_agrochemical_products_x5",
                            ),
                            (
                                "20_3_x3",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics_x5",
                            ),
                            ("20_60_x3", "Manufacture_of_man_made_fibres_x6"),
                            ("20_51_x3", "Manufacture_of_explosives_x3"),
                            (
                                "20_59_x3",
                                "Manufacture_of_other_chemical_products_n_e_c__x3",
                            ),
                            ("20_52_x3", "Manufacture_of_glues_x3"),
                            ("20_53_x3", "Manufacture_of_essential_oils_x3"),
                            (
                                "20_41_x3",
                                "Manufacture_of_soap_and_detergents_cleaning_and_polishing_preparations_x3",
                            ),
                            (
                                "20_42_x3",
                                "Manufacture_of_perfumes_and_toilet_preparations_x3",
                            ),
                            ("20_16_x3", "Manufacture_of_plastics_in_primary_forms_x3"),
                            (
                                "20_17_x3",
                                "Manufacture_of_synthetic_rubber_in_primary_forms_x3",
                            ),
                            (
                                "20_15_x3",
                                "Manufacture_of_fertilisers_and_nitrogen_compounds_x3",
                            ),
                            (
                                "20_14_x3",
                                "Manufacture_of_other_organic_basic_chemicals_x3",
                            ),
                            ("20_11_x3", "Manufacture_of_industrial_gases_x3"),
                            (
                                "20_13_x3",
                                "Manufacture_of_other_inorganic_basic_chemicals_x3",
                            ),
                            ("20_12_x3", "Manufacture_of_dyes_and_pigments_x3"),
                            (
                                "20_20_x3",
                                "Manufacture_of_pesticides_and_other_agrochemical_products_x6",
                            ),
                            (
                                "20_30_x3",
                                "Manufacture_of_paints_varnishes_and_similar_coatings_printing_ink_and_mastics_x6",
                            ),
                            ("55", "Accommodation"),
                            ("55_9", "Other_accommodation"),
                            ("55_1", "Hotels_and_similar_accommodation"),
                            ("55_2", "Holiday_and_other_short_stay_accommodation"),
                            (
                                "55_3",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks",
                            ),
                            ("55_90", "Other_accommodation_x2"),
                            ("55_10", "Hotels_and_similar_accommodation_x2"),
                            ("55_20", "Holiday_and_other_short_stay_accommodation_x2"),
                            (
                                "55_30",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks_x2",
                            ),
                            ("55_9_x2", "Other_accommodation_x3"),
                            ("55_1_x2", "Hotels_and_similar_accommodation_x3"),
                            (
                                "55_2_x2",
                                "Holiday_and_other_short_stay_accommodation_x3",
                            ),
                            (
                                "55_3_x2",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks_x3",
                            ),
                            ("55_90_x2", "Other_accommodation_x4"),
                            ("55_10_x2", "Hotels_and_similar_accommodation_x4"),
                            (
                                "55_20_x2",
                                "Holiday_and_other_short_stay_accommodation_x4",
                            ),
                            (
                                "55_30_x2",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks_x4",
                            ),
                            ("55_9_x3", "Other_accommodation_x5"),
                            ("55_1_x3", "Hotels_and_similar_accommodation_x5"),
                            (
                                "55_2_x3",
                                "Holiday_and_other_short_stay_accommodation_x5",
                            ),
                            (
                                "55_3_x3",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks_x5",
                            ),
                            ("55_90_x3", "Other_accommodation_x6"),
                            ("55_10_x3", "Hotels_and_similar_accommodation_x6"),
                            (
                                "55_20_x3",
                                "Holiday_and_other_short_stay_accommodation_x6",
                            ),
                            (
                                "55_30_x3",
                                "Camping_grounds_recreational_vehicle_parks_and_trailer_parks_x6",
                            ),
                            ("80", "Security_and_investigation_activities"),
                            ("80_1", "Private_security_activities"),
                            ("80_2", "Security_systems_service_activities"),
                            ("80_3", "Investigation_activities"),
                            ("80_10", "Private_security_activities_x2"),
                            ("80_20", "Security_systems_service_activities_x2"),
                            ("80_30", "Investigation_activities_x2"),
                            ("80_1_x2", "Private_security_activities_x3"),
                            ("80_2_x2", "Security_systems_service_activities_x3"),
                            ("80_3_x2", "Investigation_activities_x3"),
                            ("80_10_x2", "Private_security_activities_x4"),
                            ("80_20_x2", "Security_systems_service_activities_x4"),
                            ("80_30_x2", "Investigation_activities_x4"),
                            ("80_1_x3", "Private_security_activities_x5"),
                            ("80_2_x3", "Security_systems_service_activities_x5"),
                            ("80_3_x3", "Investigation_activities_x5"),
                            ("80_10_x3", "Private_security_activities_x6"),
                            ("80_20_x3", "Security_systems_service_activities_x6"),
                            ("80_30_x3", "Investigation_activities_x6"),
                            ("78", "Employment_activities"),
                            ("78_2", "Temporary_employment_agency_activities"),
                            ("78_3", "Other_human_resources_provision"),
                            ("78_1", "Activities_of_employment_placement_agencies"),
                            ("78_20", "Temporary_employment_agency_activities_x2"),
                            ("78_30", "Other_human_resources_provision_x2"),
                            ("78_10", "Activities_of_employment_placement_agencies_x2"),
                            ("78_2_x2", "Temporary_employment_agency_activities_x3"),
                            ("78_3_x2", "Other_human_resources_provision_x3"),
                            (
                                "78_1_x2",
                                "Activities_of_employment_placement_agencies_x3",
                            ),
                            ("78_20_x2", "Temporary_employment_agency_activities_x4"),
                            ("78_30_x2", "Other_human_resources_provision_x4"),
                            (
                                "78_10_x2",
                                "Activities_of_employment_placement_agencies_x4",
                            ),
                            ("78_2_x3", "Temporary_employment_agency_activities_x5"),
                            ("78_3_x3", "Other_human_resources_provision_x5"),
                            (
                                "78_1_x3",
                                "Activities_of_employment_placement_agencies_x5",
                            ),
                            ("78_20_x3", "Temporary_employment_agency_activities_x6"),
                            ("78_30_x3", "Other_human_resources_provision_x6"),
                            (
                                "78_10_x3",
                                "Activities_of_employment_placement_agencies_x6",
                            ),
                            ("32", "Other_manufacturing"),
                            ("32_9", "Manufacturing_n_e_c_"),
                            ("32_3", "Manufacture_of_sports_goods"),
                            ("32_2", "Manufacture_of_musical_instruments"),
                            (
                                "32_1",
                                "Manufacture_of_jewellery_bijouterie_and_related_articles",
                            ),
                            ("32_4", "Manufacture_of_games_and_toys"),
                            (
                                "32_5",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies",
                            ),
                            ("32_91", "Manufacture_of_brooms_and_brushes"),
                            ("32_99", "Other_manufacturing_n_e_c_"),
                            ("32_30", "Manufacture_of_sports_goods_x2"),
                            ("32_20", "Manufacture_of_musical_instruments_x2"),
                            ("32_11", "Striking_of_coins"),
                            (
                                "32_13",
                                "Manufacture_of_imitation_jewellery_and_related_articles",
                            ),
                            ("32_12", "Manufacture_of_jewellery_and_related_articles"),
                            ("32_40", "Manufacture_of_games_and_toys_x2"),
                            (
                                "32_50",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies_x2",
                            ),
                            ("32_9_x2", "Manufacturing_n_e_c__x2"),
                            ("32_3_x2", "Manufacture_of_sports_goods_x3"),
                            ("32_2_x2", "Manufacture_of_musical_instruments_x3"),
                            (
                                "32_1_x2",
                                "Manufacture_of_jewellery_bijouterie_and_related_articles_x2",
                            ),
                            ("32_4_x2", "Manufacture_of_games_and_toys_x3"),
                            (
                                "32_5_x2",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies_x3",
                            ),
                            ("32_91_x2", "Manufacture_of_brooms_and_brushes_x2"),
                            ("32_99_x2", "Other_manufacturing_n_e_c__x2"),
                            ("32_30_x2", "Manufacture_of_sports_goods_x4"),
                            ("32_20_x2", "Manufacture_of_musical_instruments_x4"),
                            ("32_11_x2", "Striking_of_coins_x2"),
                            (
                                "32_13_x2",
                                "Manufacture_of_imitation_jewellery_and_related_articles_x2",
                            ),
                            (
                                "32_12_x2",
                                "Manufacture_of_jewellery_and_related_articles_x2",
                            ),
                            ("32_40_x2", "Manufacture_of_games_and_toys_x4"),
                            (
                                "32_50_x2",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies_x4",
                            ),
                            ("32_9_x3", "Manufacturing_n_e_c__x3"),
                            ("32_3_x3", "Manufacture_of_sports_goods_x5"),
                            ("32_2_x3", "Manufacture_of_musical_instruments_x5"),
                            (
                                "32_1_x3",
                                "Manufacture_of_jewellery_bijouterie_and_related_articles_x3",
                            ),
                            ("32_4_x3", "Manufacture_of_games_and_toys_x5"),
                            (
                                "32_5_x3",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies_x5",
                            ),
                            ("32_91_x3", "Manufacture_of_brooms_and_brushes_x3"),
                            ("32_99_x3", "Other_manufacturing_n_e_c__x3"),
                            ("32_30_x3", "Manufacture_of_sports_goods_x6"),
                            ("32_20_x3", "Manufacture_of_musical_instruments_x6"),
                            ("32_11_x3", "Striking_of_coins_x3"),
                            (
                                "32_13_x3",
                                "Manufacture_of_imitation_jewellery_and_related_articles_x3",
                            ),
                            (
                                "32_12_x3",
                                "Manufacture_of_jewellery_and_related_articles_x3",
                            ),
                            ("32_40_x3", "Manufacture_of_games_and_toys_x6"),
                            (
                                "32_50_x3",
                                "Manufacture_of_medical_and_dental_instruments_and_supplies_x6",
                            ),
                            (
                                "47",
                                "Retail_trade_except_of_motor_vehicles_and_motorcycles",
                            ),
                            ("47_9", "Retail_trade_not_in_stores_stalls_or_markets"),
                            ("47_8", "Retail_sale_via_stalls_and_markets"),
                            (
                                "47_3",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores",
                            ),
                            (
                                "47_2",
                                "Retail_sale_of_food_beverages_and_tobacco_in_specialised_stores",
                            ),
                            ("47_1", "Retail_sale_in_non_specialised_stores"),
                            (
                                "47_4",
                                "Retail_sale_of_information_and_communication_equipment_in_specialised_stores",
                            ),
                            (
                                "47_5",
                                "Retail_sale_of_other_household_equipment_in_specialised_stores",
                            ),
                            (
                                "47_7",
                                "Retail_sale_of_other_goods_in_specialised_stores",
                            ),
                            (
                                "47_6",
                                "Retail_sale_of_cultural_and_recreation_goods_in_specialised_stores",
                            ),
                            (
                                "47_91",
                                "Retail_sale_via_mail_order_houses_or_via_Internet",
                            ),
                            (
                                "47_99",
                                "Other_retail_sale_not_in_stores_stalls_or_markets",
                            ),
                            (
                                "47_82",
                                "Retail_sale_via_stalls_and_markets_of_textiles_clothing_and_footwear",
                            ),
                            (
                                "47_81",
                                "Retail_sale_via_stalls_and_markets_of_food_beverages_and_tobacco_products",
                            ),
                            (
                                "47_89",
                                "Retail_sale_via_stalls_and_markets_of_other_goods",
                            ),
                            (
                                "47_30",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores_x2",
                            ),
                            (
                                "47_24",
                                "Retail_sale_of_bread_cakes_flour_confectionery_and_sugar_confectionery_in_specialised_stores",
                            ),
                            ("47_25", "Retail_sale_of_beverages_in_specialised_stores"),
                            (
                                "47_26",
                                "Retail_sale_of_tobacco_products_in_specialised_stores",
                            ),
                            (
                                "47_22",
                                "Retail_sale_of_meat_and_meat_products_in_specialised_stores",
                            ),
                            (
                                "47_23",
                                "Retail_sale_of_fish_crustaceans_and_molluscs_in_specialised_stores",
                            ),
                            (
                                "47_21",
                                "Retail_sale_of_fruit_and_vegetables_in_specialised_stores",
                            ),
                            (
                                "47_29",
                                "Other_retail_sale_of_food_in_specialised_stores",
                            ),
                            ("47_19", "Other_retail_sale_in_non_specialised_stores"),
                            (
                                "47_11",
                                "Retail_sale_in_non_specialised_stores_with_food_beverages_or_tobacco_predominating",
                            ),
                            (
                                "47_41",
                                "Retail_sale_of_computers_peripheral_units_and_software_in_specialised_stores",
                            ),
                            (
                                "47_42",
                                "Retail_sale_of_telecommunications_equipment_in_specialised_stores",
                            ),
                            (
                                "47_43",
                                "Retail_sale_of_audio_and_video_equipment_in_specialised_stores",
                            ),
                            (
                                "47_54",
                                "Retail_sale_of_electrical_household_appliances_in_specialised_stores",
                            ),
                            ("47_51", "Retail_sale_of_textiles_in_specialised_stores"),
                            (
                                "47_59",
                                "Retail_sale_of_furniture_lighting_equipment_and_other_household_articles_in_specialised_stores",
                            ),
                            (
                                "47_52",
                                "Retail_sale_of_hardware_paints_and_glass_in_specialised_stores",
                            ),
                            (
                                "47_53",
                                "Retail_sale_of_carpets_rugs_wall_and_floor_coverings_in_specialised_stores",
                            ),
                            ("47_73", "Dispensing_chemist_in_specialised_stores"),
                            (
                                "47_72",
                                "Retail_sale_of_footwear_and_leather_goods_in_specialised_stores",
                            ),
                            ("47_79", "Retail_sale_of_second_hand_goods_in_stores"),
                            ("47_71", "Retail_sale_of_clothing_in_specialised_stores"),
                            (
                                "47_78",
                                "Other_retail_sale_of_New_goods_in_specialised_stores",
                            ),
                            (
                                "47_75",
                                "Retail_sale_of_cosmetic_and_toilet_articles_in_specialised_stores",
                            ),
                            (
                                "47_74",
                                "Retail_sale_of_medical_and_orthopaedic_goods_in_specialised_stores",
                            ),
                            (
                                "47_76",
                                "Retail_sale_of_flowers_plants_seeds_fertilisers_pet_animals_and_pet_food_in_specialised_stores",
                            ),
                            (
                                "47_77",
                                "Retail_sale_of_watches_and_jewellery_in_specialised_stores",
                            ),
                            (
                                "47_65",
                                "Retail_sale_of_games_and_toys_in_specialised_stores",
                            ),
                            (
                                "47_64",
                                "Retail_sale_of_sporting_equipment_in_specialised_stores",
                            ),
                            (
                                "47_63",
                                "Retail_sale_of_music_and_video_recordings_in_specialised_stores",
                            ),
                            (
                                "47_62",
                                "Retail_sale_of_Newspapers_and_stationery_in_specialised_stores",
                            ),
                            ("47_61", "Retail_sale_of_books_in_specialised_stores"),
                            (
                                "47_9_x2",
                                "Retail_trade_not_in_stores_stalls_or_markets_x2",
                            ),
                            ("47_8_x2", "Retail_sale_via_stalls_and_markets_x2"),
                            (
                                "47_3_x2",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores_x3",
                            ),
                            (
                                "47_2_x2",
                                "Retail_sale_of_food_beverages_and_tobacco_in_specialised_stores_x2",
                            ),
                            ("47_1_x2", "Retail_sale_in_non_specialised_stores_x2"),
                            (
                                "47_4_x2",
                                "Retail_sale_of_information_and_communication_equipment_in_specialised_stores_x2",
                            ),
                            (
                                "47_5_x2",
                                "Retail_sale_of_other_household_equipment_in_specialised_stores_x2",
                            ),
                            (
                                "47_7_x2",
                                "Retail_sale_of_other_goods_in_specialised_stores_x2",
                            ),
                            (
                                "47_6_x2",
                                "Retail_sale_of_cultural_and_recreation_goods_in_specialised_stores_x2",
                            ),
                            (
                                "47_91_x2",
                                "Retail_sale_via_mail_order_houses_or_via_Internet_x2",
                            ),
                            (
                                "47_99_x2",
                                "Other_retail_sale_not_in_stores_stalls_or_markets_x2",
                            ),
                            (
                                "47_82_x2",
                                "Retail_sale_via_stalls_and_markets_of_textiles_clothing_and_footwear_x2",
                            ),
                            (
                                "47_81_x2",
                                "Retail_sale_via_stalls_and_markets_of_food_beverages_and_tobacco_products_x2",
                            ),
                            (
                                "47_89_x2",
                                "Retail_sale_via_stalls_and_markets_of_other_goods_x2",
                            ),
                            (
                                "47_30_x2",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores_x4",
                            ),
                            (
                                "47_24_x2",
                                "Retail_sale_of_bread_cakes_flour_confectionery_and_sugar_confectionery_in_specialised_stores_x2",
                            ),
                            (
                                "47_25_x2",
                                "Retail_sale_of_beverages_in_specialised_stores_x2",
                            ),
                            (
                                "47_26_x2",
                                "Retail_sale_of_tobacco_products_in_specialised_stores_x2",
                            ),
                            (
                                "47_22_x2",
                                "Retail_sale_of_meat_and_meat_products_in_specialised_stores_x2",
                            ),
                            (
                                "47_23_x2",
                                "Retail_sale_of_fish_crustaceans_and_molluscs_in_specialised_stores_x2",
                            ),
                            (
                                "47_21_x2",
                                "Retail_sale_of_fruit_and_vegetables_in_specialised_stores_x2",
                            ),
                            (
                                "47_29_x2",
                                "Other_retail_sale_of_food_in_specialised_stores_x2",
                            ),
                            (
                                "47_19_x2",
                                "Other_retail_sale_in_non_specialised_stores_x2",
                            ),
                            (
                                "47_11_x2",
                                "Retail_sale_in_non_specialised_stores_with_food_beverages_or_tobacco_predominating_x2",
                            ),
                            (
                                "47_41_x2",
                                "Retail_sale_of_computers_peripheral_units_and_software_in_specialised_stores_x2",
                            ),
                            (
                                "47_42_x2",
                                "Retail_sale_of_telecommunications_equipment_in_specialised_stores_x2",
                            ),
                            (
                                "47_43_x2",
                                "Retail_sale_of_audio_and_video_equipment_in_specialised_stores_x2",
                            ),
                            (
                                "47_54_x2",
                                "Retail_sale_of_electrical_household_appliances_in_specialised_stores_x2",
                            ),
                            (
                                "47_51_x2",
                                "Retail_sale_of_textiles_in_specialised_stores_x2",
                            ),
                            (
                                "47_59_x2",
                                "Retail_sale_of_furniture_lighting_equipment_and_other_household_articles_in_specialised_stores_x2",
                            ),
                            (
                                "47_52_x2",
                                "Retail_sale_of_hardware_paints_and_glass_in_specialised_stores_x2",
                            ),
                            (
                                "47_53_x2",
                                "Retail_sale_of_carpets_rugs_wall_and_floor_coverings_in_specialised_stores_x2",
                            ),
                            ("47_73_x2", "Dispensing_chemist_in_specialised_stores_x2"),
                            (
                                "47_72_x2",
                                "Retail_sale_of_footwear_and_leather_goods_in_specialised_stores_x2",
                            ),
                            (
                                "47_79_x2",
                                "Retail_sale_of_second_hand_goods_in_stores_x2",
                            ),
                            (
                                "47_71_x2",
                                "Retail_sale_of_clothing_in_specialised_stores_x2",
                            ),
                            (
                                "47_78_x2",
                                "Other_retail_sale_of_New_goods_in_specialised_stores_x2",
                            ),
                            (
                                "47_75_x2",
                                "Retail_sale_of_cosmetic_and_toilet_articles_in_specialised_stores_x2",
                            ),
                            (
                                "47_74_x2",
                                "Retail_sale_of_medical_and_orthopaedic_goods_in_specialised_stores_x2",
                            ),
                            (
                                "47_76_x2",
                                "Retail_sale_of_flowers_plants_seeds_fertilisers_pet_animals_and_pet_food_in_specialised_stores_x2",
                            ),
                            (
                                "47_77_x2",
                                "Retail_sale_of_watches_and_jewellery_in_specialised_stores_x2",
                            ),
                            (
                                "47_65_x2",
                                "Retail_sale_of_games_and_toys_in_specialised_stores_x2",
                            ),
                            (
                                "47_64_x2",
                                "Retail_sale_of_sporting_equipment_in_specialised_stores_x2",
                            ),
                            (
                                "47_63_x2",
                                "Retail_sale_of_music_and_video_recordings_in_specialised_stores_x2",
                            ),
                            (
                                "47_62_x2",
                                "Retail_sale_of_Newspapers_and_stationery_in_specialised_stores_x2",
                            ),
                            (
                                "47_61_x2",
                                "Retail_sale_of_books_in_specialised_stores_x2",
                            ),
                            (
                                "47_9_x3",
                                "Retail_trade_not_in_stores_stalls_or_markets_x3",
                            ),
                            ("47_8_x3", "Retail_sale_via_stalls_and_markets_x3"),
                            (
                                "47_3_x3",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores_x5",
                            ),
                            (
                                "47_2_x3",
                                "Retail_sale_of_food_beverages_and_tobacco_in_specialised_stores_x3",
                            ),
                            ("47_1_x3", "Retail_sale_in_non_specialised_stores_x3"),
                            (
                                "47_4_x3",
                                "Retail_sale_of_information_and_communication_equipment_in_specialised_stores_x3",
                            ),
                            (
                                "47_5_x3",
                                "Retail_sale_of_other_household_equipment_in_specialised_stores_x3",
                            ),
                            (
                                "47_7_x3",
                                "Retail_sale_of_other_goods_in_specialised_stores_x3",
                            ),
                            (
                                "47_6_x3",
                                "Retail_sale_of_cultural_and_recreation_goods_in_specialised_stores_x3",
                            ),
                            (
                                "47_91_x3",
                                "Retail_sale_via_mail_order_houses_or_via_Internet_x3",
                            ),
                            (
                                "47_99_x3",
                                "Other_retail_sale_not_in_stores_stalls_or_markets_x3",
                            ),
                            (
                                "47_82_x3",
                                "Retail_sale_via_stalls_and_markets_of_textiles_clothing_and_footwear_x3",
                            ),
                            (
                                "47_81_x3",
                                "Retail_sale_via_stalls_and_markets_of_food_beverages_and_tobacco_products_x3",
                            ),
                            (
                                "47_89_x3",
                                "Retail_sale_via_stalls_and_markets_of_other_goods_x3",
                            ),
                            (
                                "47_30_x3",
                                "Retail_sale_of_automotive_fuel_in_specialised_stores_x6",
                            ),
                            (
                                "47_24_x3",
                                "Retail_sale_of_bread_cakes_flour_confectionery_and_sugar_confectionery_in_specialised_stores_x3",
                            ),
                            (
                                "47_25_x3",
                                "Retail_sale_of_beverages_in_specialised_stores_x3",
                            ),
                            (
                                "47_26_x3",
                                "Retail_sale_of_tobacco_products_in_specialised_stores_x3",
                            ),
                            (
                                "47_22_x3",
                                "Retail_sale_of_meat_and_meat_products_in_specialised_stores_x3",
                            ),
                            (
                                "47_23_x3",
                                "Retail_sale_of_fish_crustaceans_and_molluscs_in_specialised_stores_x3",
                            ),
                            (
                                "47_21_x3",
                                "Retail_sale_of_fruit_and_vegetables_in_specialised_stores_x3",
                            ),
                            (
                                "47_29_x3",
                                "Other_retail_sale_of_food_in_specialised_stores_x3",
                            ),
                            (
                                "47_19_x3",
                                "Other_retail_sale_in_non_specialised_stores_x3",
                            ),
                            (
                                "47_11_x3",
                                "Retail_sale_in_non_specialised_stores_with_food_beverages_or_tobacco_predominating_x3",
                            ),
                            (
                                "47_41_x3",
                                "Retail_sale_of_computers_peripheral_units_and_software_in_specialised_stores_x3",
                            ),
                            (
                                "47_42_x3",
                                "Retail_sale_of_telecommunications_equipment_in_specialised_stores_x3",
                            ),
                            (
                                "47_43_x3",
                                "Retail_sale_of_audio_and_video_equipment_in_specialised_stores_x3",
                            ),
                            (
                                "47_54_x3",
                                "Retail_sale_of_electrical_household_appliances_in_specialised_stores_x3",
                            ),
                            (
                                "47_51_x3",
                                "Retail_sale_of_textiles_in_specialised_stores_x3",
                            ),
                            (
                                "47_59_x3",
                                "Retail_sale_of_furniture_lighting_equipment_and_other_household_articles_in_specialised_stores_x3",
                            ),
                            (
                                "47_52_x3",
                                "Retail_sale_of_hardware_paints_and_glass_in_specialised_stores_x3",
                            ),
                            (
                                "47_53_x3",
                                "Retail_sale_of_carpets_rugs_wall_and_floor_coverings_in_specialised_stores_x3",
                            ),
                            ("47_73_x3", "Dispensing_chemist_in_specialised_stores_x3"),
                            (
                                "47_72_x3",
                                "Retail_sale_of_footwear_and_leather_goods_in_specialised_stores_x3",
                            ),
                            (
                                "47_79_x3",
                                "Retail_sale_of_second_hand_goods_in_stores_x3",
                            ),
                            (
                                "47_71_x3",
                                "Retail_sale_of_clothing_in_specialised_stores_x3",
                            ),
                            (
                                "47_78_x3",
                                "Other_retail_sale_of_New_goods_in_specialised_stores_x3",
                            ),
                            (
                                "47_75_x3",
                                "Retail_sale_of_cosmetic_and_toilet_articles_in_specialised_stores_x3",
                            ),
                            (
                                "47_74_x3",
                                "Retail_sale_of_medical_and_orthopaedic_goods_in_specialised_stores_x3",
                            ),
                            (
                                "47_76_x3",
                                "Retail_sale_of_flowers_plants_seeds_fertilisers_pet_animals_and_pet_food_in_specialised_stores_x3",
                            ),
                            (
                                "47_77_x3",
                                "Retail_sale_of_watches_and_jewellery_in_specialised_stores_x3",
                            ),
                            (
                                "47_65_x3",
                                "Retail_sale_of_games_and_toys_in_specialised_stores_x3",
                            ),
                            (
                                "47_64_x3",
                                "Retail_sale_of_sporting_equipment_in_specialised_stores_x3",
                            ),
                            (
                                "47_63_x3",
                                "Retail_sale_of_music_and_video_recordings_in_specialised_stores_x3",
                            ),
                            (
                                "47_62_x3",
                                "Retail_sale_of_Newspapers_and_stationery_in_specialised_stores_x3",
                            ),
                            (
                                "47_61_x3",
                                "Retail_sale_of_books_in_specialised_stores_x3",
                            ),
                            ("92", "Gambling_and_betting_activities"),
                            ("92_0", "Gambling_and_betting_activities_x2"),
                            ("92_00", "Gambling_and_betting_activities_x3"),
                            ("92_0_x2", "Gambling_and_betting_activities_x4"),
                            ("92_00_x2", "Gambling_and_betting_activities_x5"),
                            ("92_0_x3", "Gambling_and_betting_activities_x6"),
                            ("92_00_x3", "Gambling_and_betting_activities_x7"),
                            (
                                "16",
                                "Manufacture_of_wood_and_of_products_of_wood_and_cork_except_furniture_manufacture_of_articles_of_straw_and_plaiting_materials",
                            ),
                            ("16_1", "Sawmilling_and_planing_of_wood"),
                            (
                                "16_2",
                                "Manufacture_of_products_of_wood_cork_straw_and_plaiting_materials",
                            ),
                            ("16_10", "Sawmilling_and_planing_of_wood_x2"),
                            ("16_24", "Manufacture_of_wooden_containers"),
                            (
                                "16_23",
                                "Manufacture_of_other_builders_carpentry_and_joinery",
                            ),
                            ("16_22", "Manufacture_of_assembled_parquet_floors"),
                            (
                                "16_29",
                                "Manufacture_of_other_products_of_wood_manufacture_of_articles_of_cork_straw_and_plaiting_materials",
                            ),
                            (
                                "16_21",
                                "Manufacture_of_veneer_sheets_and_wood_based_panels",
                            ),
                            ("16_1_x2", "Sawmilling_and_planing_of_wood_x3"),
                            (
                                "16_2_x2",
                                "Manufacture_of_products_of_wood_cork_straw_and_plaiting_materials_x2",
                            ),
                            ("16_10_x2", "Sawmilling_and_planing_of_wood_x4"),
                            ("16_24_x2", "Manufacture_of_wooden_containers_x2"),
                            (
                                "16_23_x2",
                                "Manufacture_of_other_builders_carpentry_and_joinery_x2",
                            ),
                            ("16_22_x2", "Manufacture_of_assembled_parquet_floors_x2"),
                            (
                                "16_29_x2",
                                "Manufacture_of_other_products_of_wood_manufacture_of_articles_of_cork_straw_and_plaiting_materials_x2",
                            ),
                            (
                                "16_21_x2",
                                "Manufacture_of_veneer_sheets_and_wood_based_panels_x2",
                            ),
                            ("16_1_x3", "Sawmilling_and_planing_of_wood_x5"),
                            (
                                "16_2_x3",
                                "Manufacture_of_products_of_wood_cork_straw_and_plaiting_materials_x3",
                            ),
                            ("16_10_x3", "Sawmilling_and_planing_of_wood_x6"),
                            ("16_24_x3", "Manufacture_of_wooden_containers_x3"),
                            (
                                "16_23_x3",
                                "Manufacture_of_other_builders_carpentry_and_joinery_x3",
                            ),
                            ("16_22_x3", "Manufacture_of_assembled_parquet_floors_x3"),
                            (
                                "16_29_x3",
                                "Manufacture_of_other_products_of_wood_manufacture_of_articles_of_cork_straw_and_plaiting_materials_x3",
                            ),
                            (
                                "16_21_x3",
                                "Manufacture_of_veneer_sheets_and_wood_based_panels_x3",
                            ),
                            (
                                "29",
                                "Manufacture_of_motor_vehicles_trailers_and_semi_trailers",
                            ),
                            ("29_1", "Manufacture_of_motor_vehicles"),
                            (
                                "29_3",
                                "Manufacture_of_parts_and_accessories_for_motor_vehicles",
                            ),
                            (
                                "29_2",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers",
                            ),
                            ("29_10", "Manufacture_of_motor_vehicles_x2"),
                            (
                                "29_31",
                                "Manufacture_of_electrical_and_electronic_equipment_for_motor_vehicles",
                            ),
                            (
                                "29_32",
                                "Manufacture_of_other_parts_and_accessories_for_motor_vehicles",
                            ),
                            (
                                "29_20",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers_x2",
                            ),
                            ("29_1_x2", "Manufacture_of_motor_vehicles_x3"),
                            (
                                "29_3_x2",
                                "Manufacture_of_parts_and_accessories_for_motor_vehicles_x2",
                            ),
                            (
                                "29_2_x2",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers_x3",
                            ),
                            ("29_10_x2", "Manufacture_of_motor_vehicles_x4"),
                            (
                                "29_31_x2",
                                "Manufacture_of_electrical_and_electronic_equipment_for_motor_vehicles_x2",
                            ),
                            (
                                "29_32_x2",
                                "Manufacture_of_other_parts_and_accessories_for_motor_vehicles_x2",
                            ),
                            (
                                "29_20_x2",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers_x4",
                            ),
                            ("29_1_x3", "Manufacture_of_motor_vehicles_x5"),
                            (
                                "29_3_x3",
                                "Manufacture_of_parts_and_accessories_for_motor_vehicles_x3",
                            ),
                            (
                                "29_2_x3",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers_x5",
                            ),
                            ("29_10_x3", "Manufacture_of_motor_vehicles_x6"),
                            (
                                "29_31_x3",
                                "Manufacture_of_electrical_and_electronic_equipment_for_motor_vehicles_x3",
                            ),
                            (
                                "29_32_x3",
                                "Manufacture_of_other_parts_and_accessories_for_motor_vehicles_x3",
                            ),
                            (
                                "29_20_x3",
                                "Manufacture_of_bodies_coachwork_for_motor_vehicles_manufacture_of_trailers_and_semi_trailers_x6",
                            ),
                            ("63", "Information_service_activities"),
                            (
                                "63_1",
                                "Data_processing_hosting_and_related_activities_web_portals",
                            ),
                            ("63_9", "Other_information_service_activities"),
                            ("63_11", "Data_processing_hosting_and_related_activities"),
                            ("63_12", "Web_portals"),
                            ("63_99", "Other_information_service_activities_n_e_c_"),
                            ("63_91", "News_agency_activities"),
                            (
                                "63_1_x2",
                                "Data_processing_hosting_and_related_activities_web_portals_x2",
                            ),
                            ("63_9_x2", "Other_information_service_activities_x2"),
                            (
                                "63_11_x2",
                                "Data_processing_hosting_and_related_activities_x2",
                            ),
                            ("63_12_x2", "Web_portals_x2"),
                            (
                                "63_99_x2",
                                "Other_information_service_activities_n_e_c__x2",
                            ),
                            ("63_91_x2", "News_agency_activities_x2"),
                            (
                                "63_1_x3",
                                "Data_processing_hosting_and_related_activities_web_portals_x3",
                            ),
                            ("63_9_x3", "Other_information_service_activities_x3"),
                            (
                                "63_11_x3",
                                "Data_processing_hosting_and_related_activities_x3",
                            ),
                            ("63_12_x3", "Web_portals_x3"),
                            (
                                "63_99_x3",
                                "Other_information_service_activities_n_e_c__x3",
                            ),
                            ("63_91_x3", "News_agency_activities_x3"),
                            (
                                "71",
                                "Architectural_and_engineering_activities_technical_testing_and_analysis",
                            ),
                            ("71_2", "Technical_testing_and_analysis"),
                            (
                                "71_1",
                                "Architectural_and_engineering_activities_and_related_technical_consultancy",
                            ),
                            ("71_20", "Technical_testing_and_analysis_x2"),
                            ("71_11", "Architectural_activities"),
                            (
                                "71_12",
                                "Engineering_activities_and_related_technical_consultancy",
                            ),
                            ("71_2_x2", "Technical_testing_and_analysis_x3"),
                            (
                                "71_1_x2",
                                "Architectural_and_engineering_activities_and_related_technical_consultancy_x2",
                            ),
                            ("71_20_x2", "Technical_testing_and_analysis_x4"),
                            ("71_11_x2", "Architectural_activities_x2"),
                            (
                                "71_12_x2",
                                "Engineering_activities_and_related_technical_consultancy_x2",
                            ),
                            ("71_2_x3", "Technical_testing_and_analysis_x5"),
                            (
                                "71_1_x3",
                                "Architectural_and_engineering_activities_and_related_technical_consultancy_x3",
                            ),
                            ("71_20_x3", "Technical_testing_and_analysis_x6"),
                            ("71_11_x3", "Architectural_activities_x3"),
                            (
                                "71_12_x3",
                                "Engineering_activities_and_related_technical_consultancy_x3",
                            ),
                            ("73", "Advertising_and_market_research"),
                            ("73_2", "Market_research_and_public_opinion_polling"),
                            ("73_1", "Advertising"),
                            ("73_20", "Market_research_and_public_opinion_polling_x2"),
                            ("73_11", "Advertising_agencies"),
                            ("73_12", "Media_representation"),
                            (
                                "73_2_x2",
                                "Market_research_and_public_opinion_polling_x3",
                            ),
                            ("73_1_x2", "Advertising_x2"),
                            (
                                "73_20_x2",
                                "Market_research_and_public_opinion_polling_x4",
                            ),
                            ("73_11_x2", "Advertising_agencies_x2"),
                            ("73_12_x2", "Media_representation_x2"),
                            (
                                "73_2_x3",
                                "Market_research_and_public_opinion_polling_x5",
                            ),
                            ("73_1_x3", "Advertising_x3"),
                            (
                                "73_20_x3",
                                "Market_research_and_public_opinion_polling_x6",
                            ),
                            ("73_11_x3", "Advertising_agencies_x3"),
                            ("73_12_x3", "Media_representation_x3"),
                            (
                                "39",
                                "Remediation_activities_and_other_waste_management_services",
                            ),
                            (
                                "39_0",
                                "Remediation_activities_and_other_waste_management_services_x2",
                            ),
                            (
                                "39_00",
                                "Remediation_activities_and_other_waste_management_services_x3",
                            ),
                            (
                                "39_0_x2",
                                "Remediation_activities_and_other_waste_management_services_x4",
                            ),
                            (
                                "39_00_x2",
                                "Remediation_activities_and_other_waste_management_services_x5",
                            ),
                            (
                                "39_0_x3",
                                "Remediation_activities_and_other_waste_management_services_x6",
                            ),
                            (
                                "39_00_x3",
                                "Remediation_activities_and_other_waste_management_services_x7",
                            ),
                            ("06", "Extraction_of_crude_petroleum_and_natural_gas"),
                            ("06_2", "Extraction_of_natural_gas"),
                            ("06_1", "Extraction_of_crude_petroleum"),
                            ("06_20", "Extraction_of_natural_gas_x2"),
                            ("06_10", "Extraction_of_crude_petroleum_x2"),
                            ("06_2_x2", "Extraction_of_natural_gas_x3"),
                            ("06_1_x2", "Extraction_of_crude_petroleum_x3"),
                            ("06_20_x2", "Extraction_of_natural_gas_x4"),
                            ("06_10_x2", "Extraction_of_crude_petroleum_x4"),
                            ("06_2_x3", "Extraction_of_natural_gas_x5"),
                            ("06_1_x3", "Extraction_of_crude_petroleum_x5"),
                            ("06_20_x3", "Extraction_of_natural_gas_x6"),
                            ("06_10_x3", "Extraction_of_crude_petroleum_x6"),
                            (
                                "99",
                                "Activities_of_extraterritorial_organisations_and_bodies",
                            ),
                            (
                                "99_0",
                                "Activities_of_extraterritorial_organisations_and_bodies_x2",
                            ),
                            (
                                "99_00",
                                "Activities_of_extraterritorial_organisations_and_bodies_x3",
                            ),
                            (
                                "99_0_x2",
                                "Activities_of_extraterritorial_organisations_and_bodies_x4",
                            ),
                            (
                                "99_00_x2",
                                "Activities_of_extraterritorial_organisations_and_bodies_x5",
                            ),
                            (
                                "99_0_x3",
                                "Activities_of_extraterritorial_organisations_and_bodies_x6",
                            ),
                            (
                                "99_00_x3",
                                "Activities_of_extraterritorial_organisations_and_bodies_x7",
                            ),
                            ("61", "Telecommunications"),
                            ("61_1", "Wired_telecommunications_activities"),
                            ("61_2", "Wireless_telecommunications_activities"),
                            ("61_3", "Satellite_telecommunications_activities"),
                            ("61_9", "Other_telecommunications_activities"),
                            ("61_10", "Wired_telecommunications_activities_x2"),
                            ("61_20", "Wireless_telecommunications_activities_x2"),
                            ("61_30", "Satellite_telecommunications_activities_x2"),
                            ("61_90", "Other_telecommunications_activities_x2"),
                            ("61_1_x2", "Wired_telecommunications_activities_x3"),
                            ("61_2_x2", "Wireless_telecommunications_activities_x3"),
                            ("61_3_x2", "Satellite_telecommunications_activities_x3"),
                            ("61_9_x2", "Other_telecommunications_activities_x3"),
                            ("61_10_x2", "Wired_telecommunications_activities_x4"),
                            ("61_20_x2", "Wireless_telecommunications_activities_x4"),
                            ("61_30_x2", "Satellite_telecommunications_activities_x4"),
                            ("61_90_x2", "Other_telecommunications_activities_x4"),
                            ("61_1_x3", "Wired_telecommunications_activities_x5"),
                            ("61_2_x3", "Wireless_telecommunications_activities_x5"),
                            ("61_3_x3", "Satellite_telecommunications_activities_x5"),
                            ("61_9_x3", "Other_telecommunications_activities_x5"),
                            ("61_10_x3", "Wired_telecommunications_activities_x6"),
                            ("61_20_x3", "Wireless_telecommunications_activities_x6"),
                            ("61_30_x3", "Satellite_telecommunications_activities_x6"),
                            ("61_90_x3", "Other_telecommunications_activities_x6"),
                            ("14", "Manufacture_of_wearing_apparel"),
                            (
                                "14_1",
                                "Manufacture_of_wearing_apparel_except_fur_apparel",
                            ),
                            ("14_2", "Manufacture_of_articles_of_fur"),
                            ("14_3", "Manufacture_of_knitted_and_crocheted_apparel"),
                            ("14_11", "Manufacture_of_leather_clothes"),
                            (
                                "14_19",
                                "Manufacture_of_other_wearing_apparel_and_accessories",
                            ),
                            ("14_12", "Manufacture_of_workwear"),
                            ("14_13", "Manufacture_of_other_outerwear"),
                            ("14_14", "Manufacture_of_underwear"),
                            ("14_20", "Manufacture_of_articles_of_fur_x2"),
                            (
                                "14_39",
                                "Manufacture_of_other_knitted_and_crocheted_apparel",
                            ),
                            ("14_31", "Manufacture_of_knitted_and_crocheted_hosiery"),
                            (
                                "14_1_x2",
                                "Manufacture_of_wearing_apparel_except_fur_apparel_x2",
                            ),
                            ("14_2_x2", "Manufacture_of_articles_of_fur_x3"),
                            (
                                "14_3_x2",
                                "Manufacture_of_knitted_and_crocheted_apparel_x2",
                            ),
                            ("14_11_x2", "Manufacture_of_leather_clothes_x2"),
                            (
                                "14_19_x2",
                                "Manufacture_of_other_wearing_apparel_and_accessories_x2",
                            ),
                            ("14_12_x2", "Manufacture_of_workwear_x2"),
                            ("14_13_x2", "Manufacture_of_other_outerwear_x2"),
                            ("14_14_x2", "Manufacture_of_underwear_x2"),
                            ("14_20_x2", "Manufacture_of_articles_of_fur_x4"),
                            (
                                "14_39_x2",
                                "Manufacture_of_other_knitted_and_crocheted_apparel_x2",
                            ),
                            (
                                "14_31_x2",
                                "Manufacture_of_knitted_and_crocheted_hosiery_x2",
                            ),
                            (
                                "14_1_x3",
                                "Manufacture_of_wearing_apparel_except_fur_apparel_x3",
                            ),
                            ("14_2_x3", "Manufacture_of_articles_of_fur_x5"),
                            (
                                "14_3_x3",
                                "Manufacture_of_knitted_and_crocheted_apparel_x3",
                            ),
                            ("14_11_x3", "Manufacture_of_leather_clothes_x3"),
                            (
                                "14_19_x3",
                                "Manufacture_of_other_wearing_apparel_and_accessories_x3",
                            ),
                            ("14_12_x3", "Manufacture_of_workwear_x3"),
                            ("14_13_x3", "Manufacture_of_other_outerwear_x3"),
                            ("14_14_x3", "Manufacture_of_underwear_x3"),
                            ("14_20_x3", "Manufacture_of_articles_of_fur_x6"),
                            (
                                "14_39_x3",
                                "Manufacture_of_other_knitted_and_crocheted_apparel_x3",
                            ),
                            (
                                "14_31_x3",
                                "Manufacture_of_knitted_and_crocheted_hosiery_x3",
                            ),
                            (
                                "45",
                                "Wholesale_and_retail_trade_and_repair_of_motor_vehicles_and_motorcycles",
                            ),
                            (
                                "45_4",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories",
                            ),
                            ("45_3", "Sale_of_motor_vehicle_parts_and_accessories"),
                            ("45_2", "Maintenance_and_repair_of_motor_vehicles"),
                            ("45_1", "Sale_of_motor_vehicles"),
                            (
                                "45_40",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories_x2",
                            ),
                            (
                                "45_32",
                                "Retail_trade_of_motor_vehicle_parts_and_accessories",
                            ),
                            (
                                "45_31",
                                "Wholesale_trade_of_motor_vehicle_parts_and_accessories",
                            ),
                            ("45_20", "Maintenance_and_repair_of_motor_vehicles_x2"),
                            ("45_19", "Sale_of_other_motor_vehicles"),
                            ("45_11", "Sale_of_cars_and_light_motor_vehicles"),
                            (
                                "45_4_x2",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories_x3",
                            ),
                            (
                                "45_3_x2",
                                "Sale_of_motor_vehicle_parts_and_accessories_x2",
                            ),
                            ("45_2_x2", "Maintenance_and_repair_of_motor_vehicles_x3"),
                            ("45_1_x2", "Sale_of_motor_vehicles_x2"),
                            (
                                "45_40_x2",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories_x4",
                            ),
                            (
                                "45_32_x2",
                                "Retail_trade_of_motor_vehicle_parts_and_accessories_x2",
                            ),
                            (
                                "45_31_x2",
                                "Wholesale_trade_of_motor_vehicle_parts_and_accessories_x2",
                            ),
                            ("45_20_x2", "Maintenance_and_repair_of_motor_vehicles_x4"),
                            ("45_19_x2", "Sale_of_other_motor_vehicles_x2"),
                            ("45_11_x2", "Sale_of_cars_and_light_motor_vehicles_x2"),
                            (
                                "45_4_x3",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories_x5",
                            ),
                            (
                                "45_3_x3",
                                "Sale_of_motor_vehicle_parts_and_accessories_x3",
                            ),
                            ("45_2_x3", "Maintenance_and_repair_of_motor_vehicles_x5"),
                            ("45_1_x3", "Sale_of_motor_vehicles_x3"),
                            (
                                "45_40_x3",
                                "Sale_maintenance_and_repair_of_motorcycles_and_related_parts_and_accessories_x6",
                            ),
                            (
                                "45_32_x3",
                                "Retail_trade_of_motor_vehicle_parts_and_accessories_x3",
                            ),
                            (
                                "45_31_x3",
                                "Wholesale_trade_of_motor_vehicle_parts_and_accessories_x3",
                            ),
                            ("45_20_x3", "Maintenance_and_repair_of_motor_vehicles_x6"),
                            ("45_19_x3", "Sale_of_other_motor_vehicles_x3"),
                            ("45_11_x3", "Sale_of_cars_and_light_motor_vehicles_x3"),
                            ("30", "Manufacture_of_other_transport_equipment"),
                            ("30_9", "Manufacture_of_transport_equipment_n_e_c_"),
                            ("30_4", "Manufacture_of_military_fighting_vehicles"),
                            (
                                "30_3",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery",
                            ),
                            (
                                "30_2",
                                "Manufacture_of_railway_locomotives_and_rolling_stock",
                            ),
                            ("30_1", "Building_of_ships_and_boats"),
                            ("30_92", "Manufacture_of_bicycles_and_invalid_carriages"),
                            ("30_91", "Manufacture_of_motorcycles"),
                            (
                                "30_99",
                                "Manufacture_of_other_transport_equipment_n_e_c_",
                            ),
                            ("30_40", "Manufacture_of_military_fighting_vehicles_x2"),
                            (
                                "30_30",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery_x2",
                            ),
                            (
                                "30_20",
                                "Manufacture_of_railway_locomotives_and_rolling_stock_x2",
                            ),
                            ("30_11", "Building_of_ships_and_floating_structures"),
                            ("30_12", "Building_of_pleasure_and_sporting_boats"),
                            ("30_9_x2", "Manufacture_of_transport_equipment_n_e_c__x2"),
                            ("30_4_x2", "Manufacture_of_military_fighting_vehicles_x3"),
                            (
                                "30_3_x2",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery_x3",
                            ),
                            (
                                "30_2_x2",
                                "Manufacture_of_railway_locomotives_and_rolling_stock_x3",
                            ),
                            ("30_1_x2", "Building_of_ships_and_boats_x2"),
                            (
                                "30_92_x2",
                                "Manufacture_of_bicycles_and_invalid_carriages_x2",
                            ),
                            ("30_91_x2", "Manufacture_of_motorcycles_x2"),
                            (
                                "30_99_x2",
                                "Manufacture_of_other_transport_equipment_n_e_c__x2",
                            ),
                            (
                                "30_40_x2",
                                "Manufacture_of_military_fighting_vehicles_x4",
                            ),
                            (
                                "30_30_x2",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery_x4",
                            ),
                            (
                                "30_20_x2",
                                "Manufacture_of_railway_locomotives_and_rolling_stock_x4",
                            ),
                            (
                                "30_11_x2",
                                "Building_of_ships_and_floating_structures_x2",
                            ),
                            ("30_12_x2", "Building_of_pleasure_and_sporting_boats_x2"),
                            ("30_9_x3", "Manufacture_of_transport_equipment_n_e_c__x3"),
                            ("30_4_x3", "Manufacture_of_military_fighting_vehicles_x5"),
                            (
                                "30_3_x3",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery_x5",
                            ),
                            (
                                "30_2_x3",
                                "Manufacture_of_railway_locomotives_and_rolling_stock_x5",
                            ),
                            ("30_1_x3", "Building_of_ships_and_boats_x3"),
                            (
                                "30_92_x3",
                                "Manufacture_of_bicycles_and_invalid_carriages_x3",
                            ),
                            ("30_91_x3", "Manufacture_of_motorcycles_x3"),
                            (
                                "30_99_x3",
                                "Manufacture_of_other_transport_equipment_n_e_c__x3",
                            ),
                            (
                                "30_40_x3",
                                "Manufacture_of_military_fighting_vehicles_x6",
                            ),
                            (
                                "30_30_x3",
                                "Manufacture_of_air_and_spacecraft_and_related_machinery_x6",
                            ),
                            (
                                "30_20_x3",
                                "Manufacture_of_railway_locomotives_and_rolling_stock_x6",
                            ),
                            (
                                "30_11_x3",
                                "Building_of_ships_and_floating_structures_x3",
                            ),
                            ("30_12_x3", "Building_of_pleasure_and_sporting_boats_x3"),
                            ("90", "Creative_arts_and_entertainment_activities"),
                            ("90_0", "Creative_arts_and_entertainment_activities_x2"),
                            ("90_03", "Artistic_creation"),
                            ("90_02", "Support_activities_to_performing_arts"),
                            ("90_01", "Performing_arts"),
                            ("90_04", "Operation_of_arts_facilities"),
                            (
                                "90_0_x2",
                                "Creative_arts_and_entertainment_activities_x3",
                            ),
                            ("90_03_x2", "Artistic_creation_x2"),
                            ("90_02_x2", "Support_activities_to_performing_arts_x2"),
                            ("90_01_x2", "Performing_arts_x2"),
                            ("90_04_x2", "Operation_of_arts_facilities_x2"),
                            (
                                "90_0_x3",
                                "Creative_arts_and_entertainment_activities_x4",
                            ),
                            ("90_03_x3", "Artistic_creation_x3"),
                            ("90_02_x3", "Support_activities_to_performing_arts_x3"),
                            ("90_01_x3", "Performing_arts_x3"),
                            ("90_04_x3", "Operation_of_arts_facilities_x3"),
                            ("22", "Manufacture_of_rubber_and_plastic_products"),
                            ("22_1", "Manufacture_of_rubber_products"),
                            ("22_2", "Manufacture_of_plastics_products"),
                            ("22_19", "Manufacture_of_other_rubber_products"),
                            (
                                "22_11",
                                "Manufacture_of_rubber_tyres_and_tubes_retreading_and_rebuilding_of_rubber_tyres",
                            ),
                            ("22_22", "Manufacture_of_plastic_packing_goods"),
                            ("22_23", "Manufacture_of_builders__ware_of_plastic"),
                            (
                                "22_21",
                                "Manufacture_of_plastic_plates_sheets_tubes_and_profiles",
                            ),
                            ("22_29", "Manufacture_of_other_plastic_products"),
                            ("22_1_x2", "Manufacture_of_rubber_products_x2"),
                            ("22_2_x2", "Manufacture_of_plastics_products_x2"),
                            ("22_19_x2", "Manufacture_of_other_rubber_products_x2"),
                            (
                                "22_11_x2",
                                "Manufacture_of_rubber_tyres_and_tubes_retreading_and_rebuilding_of_rubber_tyres_x2",
                            ),
                            ("22_22_x2", "Manufacture_of_plastic_packing_goods_x2"),
                            ("22_23_x2", "Manufacture_of_builders__ware_of_plastic_x2"),
                            (
                                "22_21_x2",
                                "Manufacture_of_plastic_plates_sheets_tubes_and_profiles_x2",
                            ),
                            ("22_29_x2", "Manufacture_of_other_plastic_products_x2"),
                            ("22_1_x3", "Manufacture_of_rubber_products_x3"),
                            ("22_2_x3", "Manufacture_of_plastics_products_x3"),
                            ("22_19_x3", "Manufacture_of_other_rubber_products_x3"),
                            (
                                "22_11_x3",
                                "Manufacture_of_rubber_tyres_and_tubes_retreading_and_rebuilding_of_rubber_tyres_x3",
                            ),
                            ("22_22_x3", "Manufacture_of_plastic_packing_goods_x3"),
                            ("22_23_x3", "Manufacture_of_builders__ware_of_plastic_x3"),
                            (
                                "22_21_x3",
                                "Manufacture_of_plastic_plates_sheets_tubes_and_profiles_x3",
                            ),
                            ("22_29_x3", "Manufacture_of_other_plastic_products_x3"),
                            ("68", "Real_estate_activities"),
                            ("68_1", "Buying_and_selling_of_own_real_estate"),
                            (
                                "68_3",
                                "Real_estate_activities_on_a_fee_or_contract_basis",
                            ),
                            (
                                "68_2",
                                "Renting_and_operating_of_own_or_leased_real_estate",
                            ),
                            ("68_10", "Buying_and_selling_of_own_real_estate_x2"),
                            ("68_31", "Real_estate_agencies"),
                            (
                                "68_32",
                                "Management_of_real_estate_on_a_fee_or_contract_basis",
                            ),
                            (
                                "68_20",
                                "Renting_and_operating_of_own_or_leased_real_estate_x2",
                            ),
                            ("68_1_x2", "Buying_and_selling_of_own_real_estate_x3"),
                            (
                                "68_3_x2",
                                "Real_estate_activities_on_a_fee_or_contract_basis_x2",
                            ),
                            (
                                "68_2_x2",
                                "Renting_and_operating_of_own_or_leased_real_estate_x3",
                            ),
                            ("68_10_x2", "Buying_and_selling_of_own_real_estate_x4"),
                            ("68_31_x2", "Real_estate_agencies_x2"),
                            (
                                "68_32_x2",
                                "Management_of_real_estate_on_a_fee_or_contract_basis_x2",
                            ),
                            (
                                "68_20_x2",
                                "Renting_and_operating_of_own_or_leased_real_estate_x4",
                            ),
                            ("68_1_x3", "Buying_and_selling_of_own_real_estate_x5"),
                            (
                                "68_3_x3",
                                "Real_estate_activities_on_a_fee_or_contract_basis_x3",
                            ),
                            (
                                "68_2_x3",
                                "Renting_and_operating_of_own_or_leased_real_estate_x5",
                            ),
                            ("68_10_x3", "Buying_and_selling_of_own_real_estate_x6"),
                            ("68_31_x3", "Real_estate_agencies_x3"),
                            (
                                "68_32_x3",
                                "Management_of_real_estate_on_a_fee_or_contract_basis_x3",
                            ),
                            (
                                "68_20_x3",
                                "Renting_and_operating_of_own_or_leased_real_estate_x6",
                            ),
                            (
                                "82",
                                "Office_administrative_office_support_and_other_business_support_activities",
                            ),
                            ("82_9", "Business_support_service_activities_n_e_c_"),
                            ("82_1", "Office_administrative_and_support_activities"),
                            ("82_2", "Activities_of_call_centres"),
                            ("82_3", "Organisation_of_conventions_and_trade_shows"),
                            (
                                "82_91",
                                "Activities_of_collection_agencies_and_credit_bureaus",
                            ),
                            (
                                "82_99",
                                "Other_business_support_service_activities_n_e_c_",
                            ),
                            ("82_92", "Packaging_activities"),
                            (
                                "82_19",
                                "Photocopying_document_preparation_and_other_specialised_office_support_activities",
                            ),
                            (
                                "82_11",
                                "Combined_office_administrative_service_activities",
                            ),
                            ("82_20", "Activities_of_call_centres_x2"),
                            ("82_30", "Organisation_of_conventions_and_trade_shows_x2"),
                            (
                                "82_9_x2",
                                "Business_support_service_activities_n_e_c__x2",
                            ),
                            (
                                "82_1_x2",
                                "Office_administrative_and_support_activities_x2",
                            ),
                            ("82_2_x2", "Activities_of_call_centres_x3"),
                            (
                                "82_3_x2",
                                "Organisation_of_conventions_and_trade_shows_x3",
                            ),
                            (
                                "82_91_x2",
                                "Activities_of_collection_agencies_and_credit_bureaus_x2",
                            ),
                            (
                                "82_99_x2",
                                "Other_business_support_service_activities_n_e_c__x2",
                            ),
                            ("82_92_x2", "Packaging_activities_x2"),
                            (
                                "82_19_x2",
                                "Photocopying_document_preparation_and_other_specialised_office_support_activities_x2",
                            ),
                            (
                                "82_11_x2",
                                "Combined_office_administrative_service_activities_x2",
                            ),
                            ("82_20_x2", "Activities_of_call_centres_x4"),
                            (
                                "82_30_x2",
                                "Organisation_of_conventions_and_trade_shows_x4",
                            ),
                            (
                                "82_9_x3",
                                "Business_support_service_activities_n_e_c__x3",
                            ),
                            (
                                "82_1_x3",
                                "Office_administrative_and_support_activities_x3",
                            ),
                            ("82_2_x3", "Activities_of_call_centres_x5"),
                            (
                                "82_3_x3",
                                "Organisation_of_conventions_and_trade_shows_x5",
                            ),
                            (
                                "82_91_x3",
                                "Activities_of_collection_agencies_and_credit_bureaus_x3",
                            ),
                            (
                                "82_99_x3",
                                "Other_business_support_service_activities_n_e_c__x3",
                            ),
                            ("82_92_x3", "Packaging_activities_x3"),
                            (
                                "82_19_x3",
                                "Photocopying_document_preparation_and_other_specialised_office_support_activities_x3",
                            ),
                            (
                                "82_11_x3",
                                "Combined_office_administrative_service_activities_x3",
                            ),
                            ("82_20_x3", "Activities_of_call_centres_x6"),
                            (
                                "82_30_x3",
                                "Organisation_of_conventions_and_trade_shows_x6",
                            ),
                            (
                                "91",
                                "Libraries_archives_museums_and_other_cultural_activities",
                            ),
                            (
                                "91_0",
                                "Libraries_archives_museums_and_other_cultural_activities_x2",
                            ),
                            (
                                "91_04",
                                "Botanical_and_zoological_gardens_and_nature_reserves_activities",
                            ),
                            ("91_02", "Museums_activities"),
                            (
                                "91_03",
                                "Operation_of_historical_sites_and_buildings_and_similar_visitor_attractions",
                            ),
                            ("91_01", "Library_and_archives_activities"),
                            (
                                "91_0_x2",
                                "Libraries_archives_museums_and_other_cultural_activities_x3",
                            ),
                            (
                                "91_04_x2",
                                "Botanical_and_zoological_gardens_and_nature_reserves_activities_x2",
                            ),
                            ("91_02_x2", "Museums_activities_x2"),
                            (
                                "91_03_x2",
                                "Operation_of_historical_sites_and_buildings_and_similar_visitor_attractions_x2",
                            ),
                            ("91_01_x2", "Library_and_archives_activities_x2"),
                            (
                                "91_0_x3",
                                "Libraries_archives_museums_and_other_cultural_activities_x4",
                            ),
                            (
                                "91_04_x3",
                                "Botanical_and_zoological_gardens_and_nature_reserves_activities_x3",
                            ),
                            ("91_02_x3", "Museums_activities_x3"),
                            (
                                "91_03_x3",
                                "Operation_of_historical_sites_and_buildings_and_similar_visitor_attractions_x3",
                            ),
                            ("91_01_x3", "Library_and_archives_activities_x3"),
                            ("31", "Manufacture_of_furniture"),
                            ("31_0", "Manufacture_of_furniture_x2"),
                            ("31_01", "Manufacture_of_office_and_shop_furniture"),
                            ("31_09", "Manufacture_of_other_furniture"),
                            ("31_02", "Manufacture_of_kitchen_furniture"),
                            ("31_03", "Manufacture_of_mattresses"),
                            ("31_0_x2", "Manufacture_of_furniture_x3"),
                            ("31_01_x2", "Manufacture_of_office_and_shop_furniture_x2"),
                            ("31_09_x2", "Manufacture_of_other_furniture_x2"),
                            ("31_02_x2", "Manufacture_of_kitchen_furniture_x2"),
                            ("31_03_x2", "Manufacture_of_mattresses_x2"),
                            ("31_0_x3", "Manufacture_of_furniture_x4"),
                            ("31_01_x3", "Manufacture_of_office_and_shop_furniture_x3"),
                            ("31_09_x3", "Manufacture_of_other_furniture_x3"),
                            ("31_02_x3", "Manufacture_of_kitchen_furniture_x3"),
                            ("31_03_x3", "Manufacture_of_mattresses_x3"),
                            ("69", "Legal_and_accounting_activities"),
                            (
                                "69_2",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy",
                            ),
                            ("69_1", "Legal_activities"),
                            (
                                "69_20",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy_x2",
                            ),
                            ("69_10", "Legal_activities_x2"),
                            (
                                "69_2_x2",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy_x3",
                            ),
                            ("69_1_x2", "Legal_activities_x3"),
                            (
                                "69_20_x2",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy_x4",
                            ),
                            ("69_10_x2", "Legal_activities_x4"),
                            (
                                "69_2_x3",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy_x5",
                            ),
                            ("69_1_x3", "Legal_activities_x5"),
                            (
                                "69_20_x3",
                                "Accounting_bookkeeping_and_auditing_activities_tax_consultancy_x6",
                            ),
                            ("69_10_x3", "Legal_activities_x6"),
                            (
                                "23",
                                "Manufacture_of_other_non_metallic_mineral_products",
                            ),
                            (
                                "23_9",
                                "Manufacture_of_abrasive_products_and_non_metallic_mineral_products_n_e_c_",
                            ),
                            (
                                "23_4",
                                "Manufacture_of_other_porcelain_and_ceramic_products",
                            ),
                            ("23_5", "Manufacture_of_cement_lime_and_plaster"),
                            ("23_7", "Cutting_shaping_and_finishing_of_stone"),
                            (
                                "23_6",
                                "Manufacture_of_articles_of_concrete_cement_and_plaster",
                            ),
                            ("23_3", "Manufacture_of_clay_building_materials"),
                            ("23_2", "Manufacture_of_refractory_products"),
                            ("23_1", "Manufacture_of_glass_and_glass_products"),
                            (
                                "23_99",
                                "Manufacture_of_other_non_metallic_mineral_products_n_e_c_",
                            ),
                            ("23_91", "Production_of_abrasive_products"),
                            ("23_49", "Manufacture_of_other_ceramic_products"),
                            (
                                "23_41",
                                "Manufacture_of_ceramic_household_and_ornamental_articles",
                            ),
                            (
                                "23_43",
                                "Manufacture_of_ceramic_insulators_and_insulating_fittings",
                            ),
                            ("23_42", "Manufacture_of_ceramic_sanitary_fixtures"),
                            (
                                "23_44",
                                "Manufacture_of_other_technical_ceramic_products",
                            ),
                            ("23_51", "Manufacture_of_cement"),
                            ("23_52", "Manufacture_of_lime_and_plaster"),
                            ("23_70", "Cutting_shaping_and_finishing_of_stone_x2"),
                            ("23_64", "Manufacture_of_mortars"),
                            ("23_65", "Manufacture_of_fibre_cement"),
                            (
                                "23_62",
                                "Manufacture_of_plaster_products_for_construction_purposes",
                            ),
                            ("23_63", "Manufacture_of_ready_mixed_concrete"),
                            (
                                "23_61",
                                "Manufacture_of_concrete_products_for_construction_purposes",
                            ),
                            (
                                "23_69",
                                "Manufacture_of_other_articles_of_concrete_plaster_and_cement",
                            ),
                            (
                                "23_32",
                                "Manufacture_of_bricks_tiles_and_construction_products_in_baked_clay",
                            ),
                            ("23_31", "Manufacture_of_ceramic_tiles_and_flags"),
                            ("23_20", "Manufacture_of_refractory_products_x2"),
                            ("23_14", "Manufacture_of_glass_fibres"),
                            ("23_11", "Manufacture_of_flat_glass"),
                            (
                                "23_19",
                                "Manufacture_and_processing_of_other_glass_including_technical_glassware",
                            ),
                            ("23_12", "Shaping_and_processing_of_flat_glass"),
                            ("23_13", "Manufacture_of_hollow_glass"),
                            (
                                "23_9_x2",
                                "Manufacture_of_abrasive_products_and_non_metallic_mineral_products_n_e_c__x2",
                            ),
                            (
                                "23_4_x2",
                                "Manufacture_of_other_porcelain_and_ceramic_products_x2",
                            ),
                            ("23_5_x2", "Manufacture_of_cement_lime_and_plaster_x2"),
                            ("23_7_x2", "Cutting_shaping_and_finishing_of_stone_x3"),
                            (
                                "23_6_x2",
                                "Manufacture_of_articles_of_concrete_cement_and_plaster_x2",
                            ),
                            ("23_3_x2", "Manufacture_of_clay_building_materials_x2"),
                            ("23_2_x2", "Manufacture_of_refractory_products_x3"),
                            ("23_1_x2", "Manufacture_of_glass_and_glass_products_x2"),
                            (
                                "23_99_x2",
                                "Manufacture_of_other_non_metallic_mineral_products_n_e_c__x2",
                            ),
                            ("23_91_x2", "Production_of_abrasive_products_x2"),
                            ("23_49_x2", "Manufacture_of_other_ceramic_products_x2"),
                            (
                                "23_41_x2",
                                "Manufacture_of_ceramic_household_and_ornamental_articles_x2",
                            ),
                            (
                                "23_43_x2",
                                "Manufacture_of_ceramic_insulators_and_insulating_fittings_x2",
                            ),
                            ("23_42_x2", "Manufacture_of_ceramic_sanitary_fixtures_x2"),
                            (
                                "23_44_x2",
                                "Manufacture_of_other_technical_ceramic_products_x2",
                            ),
                            ("23_51_x2", "Manufacture_of_cement_x2"),
                            ("23_52_x2", "Manufacture_of_lime_and_plaster_x2"),
                            ("23_70_x2", "Cutting_shaping_and_finishing_of_stone_x4"),
                            ("23_64_x2", "Manufacture_of_mortars_x2"),
                            ("23_65_x2", "Manufacture_of_fibre_cement_x2"),
                            (
                                "23_62_x2",
                                "Manufacture_of_plaster_products_for_construction_purposes_x2",
                            ),
                            ("23_63_x2", "Manufacture_of_ready_mixed_concrete_x2"),
                            (
                                "23_61_x2",
                                "Manufacture_of_concrete_products_for_construction_purposes_x2",
                            ),
                            (
                                "23_69_x2",
                                "Manufacture_of_other_articles_of_concrete_plaster_and_cement_x2",
                            ),
                            (
                                "23_32_x2",
                                "Manufacture_of_bricks_tiles_and_construction_products_in_baked_clay_x2",
                            ),
                            ("23_31_x2", "Manufacture_of_ceramic_tiles_and_flags_x2"),
                            ("23_20_x2", "Manufacture_of_refractory_products_x4"),
                            ("23_14_x2", "Manufacture_of_glass_fibres_x2"),
                            ("23_11_x2", "Manufacture_of_flat_glass_x2"),
                            (
                                "23_19_x2",
                                "Manufacture_and_processing_of_other_glass_including_technical_glassware_x2",
                            ),
                            ("23_12_x2", "Shaping_and_processing_of_flat_glass_x2"),
                            ("23_13_x2", "Manufacture_of_hollow_glass_x2"),
                            (
                                "23_9_x3",
                                "Manufacture_of_abrasive_products_and_non_metallic_mineral_products_n_e_c__x3",
                            ),
                            (
                                "23_4_x3",
                                "Manufacture_of_other_porcelain_and_ceramic_products_x3",
                            ),
                            ("23_5_x3", "Manufacture_of_cement_lime_and_plaster_x3"),
                            ("23_7_x3", "Cutting_shaping_and_finishing_of_stone_x5"),
                            (
                                "23_6_x3",
                                "Manufacture_of_articles_of_concrete_cement_and_plaster_x3",
                            ),
                            ("23_3_x3", "Manufacture_of_clay_building_materials_x3"),
                            ("23_2_x3", "Manufacture_of_refractory_products_x5"),
                            ("23_1_x3", "Manufacture_of_glass_and_glass_products_x3"),
                            (
                                "23_99_x3",
                                "Manufacture_of_other_non_metallic_mineral_products_n_e_c__x3",
                            ),
                            ("23_91_x3", "Production_of_abrasive_products_x3"),
                            ("23_49_x3", "Manufacture_of_other_ceramic_products_x3"),
                            (
                                "23_41_x3",
                                "Manufacture_of_ceramic_household_and_ornamental_articles_x3",
                            ),
                            (
                                "23_43_x3",
                                "Manufacture_of_ceramic_insulators_and_insulating_fittings_x3",
                            ),
                            ("23_42_x3", "Manufacture_of_ceramic_sanitary_fixtures_x3"),
                            (
                                "23_44_x3",
                                "Manufacture_of_other_technical_ceramic_products_x3",
                            ),
                            ("23_51_x3", "Manufacture_of_cement_x3"),
                            ("23_52_x3", "Manufacture_of_lime_and_plaster_x3"),
                            ("23_70_x3", "Cutting_shaping_and_finishing_of_stone_x6"),
                            ("23_64_x3", "Manufacture_of_mortars_x3"),
                            ("23_65_x3", "Manufacture_of_fibre_cement_x3"),
                            (
                                "23_62_x3",
                                "Manufacture_of_plaster_products_for_construction_purposes_x3",
                            ),
                            ("23_63_x3", "Manufacture_of_ready_mixed_concrete_x3"),
                            (
                                "23_61_x3",
                                "Manufacture_of_concrete_products_for_construction_purposes_x3",
                            ),
                            (
                                "23_69_x3",
                                "Manufacture_of_other_articles_of_concrete_plaster_and_cement_x3",
                            ),
                            (
                                "23_32_x3",
                                "Manufacture_of_bricks_tiles_and_construction_products_in_baked_clay_x3",
                            ),
                            ("23_31_x3", "Manufacture_of_ceramic_tiles_and_flags_x3"),
                            ("23_20_x3", "Manufacture_of_refractory_products_x6"),
                            ("23_14_x3", "Manufacture_of_glass_fibres_x3"),
                            ("23_11_x3", "Manufacture_of_flat_glass_x3"),
                            (
                                "23_19_x3",
                                "Manufacture_and_processing_of_other_glass_including_technical_glassware_x3",
                            ),
                            ("23_12_x3", "Shaping_and_processing_of_flat_glass_x3"),
                            ("23_13_x3", "Manufacture_of_hollow_glass_x3"),
                            ("56", "Food_and_beverage_service_activities"),
                            ("56_3", "Beverage_serving_activities"),
                            (
                                "56_2",
                                "Event_catering_and_other_food_service_activities",
                            ),
                            ("56_1", "Restaurants_and_mobile_food_service_activities"),
                            ("56_30", "Beverage_serving_activities_x2"),
                            ("56_29", "Other_food_service_activities"),
                            ("56_21", "Event_catering_activities"),
                            (
                                "56_10",
                                "Restaurants_and_mobile_food_service_activities_x2",
                            ),
                            ("56_3_x2", "Beverage_serving_activities_x3"),
                            (
                                "56_2_x2",
                                "Event_catering_and_other_food_service_activities_x2",
                            ),
                            (
                                "56_1_x2",
                                "Restaurants_and_mobile_food_service_activities_x3",
                            ),
                            ("56_30_x2", "Beverage_serving_activities_x4"),
                            ("56_29_x2", "Other_food_service_activities_x2"),
                            ("56_21_x2", "Event_catering_activities_x2"),
                            (
                                "56_10_x2",
                                "Restaurants_and_mobile_food_service_activities_x4",
                            ),
                            ("56_3_x3", "Beverage_serving_activities_x5"),
                            (
                                "56_2_x3",
                                "Event_catering_and_other_food_service_activities_x3",
                            ),
                            (
                                "56_1_x3",
                                "Restaurants_and_mobile_food_service_activities_x5",
                            ),
                            ("56_30_x3", "Beverage_serving_activities_x6"),
                            ("56_29_x3", "Other_food_service_activities_x3"),
                            ("56_21_x3", "Event_catering_activities_x3"),
                            (
                                "56_10_x3",
                                "Restaurants_and_mobile_food_service_activities_x6",
                            ),
                            (
                                "98",
                                "Undifferentiated_goods_and_services_producing_activities_of_private_households_for_own_use",
                            ),
                            (
                                "98_1",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use",
                            ),
                            (
                                "98_2",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use",
                            ),
                            (
                                "98_10",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use_x2",
                            ),
                            (
                                "98_20",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use_x2",
                            ),
                            (
                                "98_1_x2",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use_x3",
                            ),
                            (
                                "98_2_x2",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use_x3",
                            ),
                            (
                                "98_10_x2",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use_x4",
                            ),
                            (
                                "98_20_x2",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use_x4",
                            ),
                            (
                                "98_1_x3",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use_x5",
                            ),
                            (
                                "98_2_x3",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use_x5",
                            ),
                            (
                                "98_10_x3",
                                "Undifferentiated_goods_producing_activities_of_private_households_for_own_use_x6",
                            ),
                            (
                                "98_20_x3",
                                "Undifferentiated_service_producing_activities_of_private_households_for_own_use_x6",
                            ),
                            ("07", "Mining_of_metal_ores"),
                            ("07_1", "Mining_of_iron_ores"),
                            ("07_2", "Mining_of_non_ferrous_metal_ores"),
                            ("07_10", "Mining_of_iron_ores_x2"),
                            ("07_21", "Mining_of_uranium_and_thorium_ores"),
                            ("07_29", "Mining_of_other_non_ferrous_metal_ores"),
                            ("07_1_x2", "Mining_of_iron_ores_x3"),
                            ("07_2_x2", "Mining_of_non_ferrous_metal_ores_x2"),
                            ("07_10_x2", "Mining_of_iron_ores_x4"),
                            ("07_21_x2", "Mining_of_uranium_and_thorium_ores_x2"),
                            ("07_29_x2", "Mining_of_other_non_ferrous_metal_ores_x2"),
                            ("07_1_x3", "Mining_of_iron_ores_x5"),
                            ("07_2_x3", "Mining_of_non_ferrous_metal_ores_x3"),
                            ("07_10_x3", "Mining_of_iron_ores_x6"),
                            ("07_21_x3", "Mining_of_uranium_and_thorium_ores_x3"),
                            ("07_29_x3", "Mining_of_other_non_ferrous_metal_ores_x3"),
                            (
                                "38",
                                "Waste_collection_treatment_and_disposal_activities_materials_recovery",
                            ),
                            ("38_1", "Waste_collection"),
                            ("38_3", "Materials_recovery"),
                            ("38_2", "Waste_treatment_and_disposal"),
                            ("38_12", "Collection_of_hazardous_waste"),
                            ("38_11", "Collection_of_non_hazardous_waste"),
                            ("38_31", "Dismantling_of_wrecks"),
                            ("38_32", "Recovery_of_sorted_materials"),
                            ("38_21", "Treatment_and_disposal_of_non_hazardous_waste"),
                            ("38_22", "Treatment_and_disposal_of_hazardous_waste"),
                            ("38_1_x2", "Waste_collection_x2"),
                            ("38_3_x2", "Materials_recovery_x2"),
                            ("38_2_x2", "Waste_treatment_and_disposal_x2"),
                            ("38_12_x2", "Collection_of_hazardous_waste_x2"),
                            ("38_11_x2", "Collection_of_non_hazardous_waste_x2"),
                            ("38_31_x2", "Dismantling_of_wrecks_x2"),
                            ("38_32_x2", "Recovery_of_sorted_materials_x2"),
                            (
                                "38_21_x2",
                                "Treatment_and_disposal_of_non_hazardous_waste_x2",
                            ),
                            (
                                "38_22_x2",
                                "Treatment_and_disposal_of_hazardous_waste_x2",
                            ),
                            ("38_1_x3", "Waste_collection_x3"),
                            ("38_3_x3", "Materials_recovery_x3"),
                            ("38_2_x3", "Waste_treatment_and_disposal_x3"),
                            ("38_12_x3", "Collection_of_hazardous_waste_x3"),
                            ("38_11_x3", "Collection_of_non_hazardous_waste_x3"),
                            ("38_31_x3", "Dismantling_of_wrecks_x3"),
                            ("38_32_x3", "Recovery_of_sorted_materials_x3"),
                            (
                                "38_21_x3",
                                "Treatment_and_disposal_of_non_hazardous_waste_x3",
                            ),
                            (
                                "38_22_x3",
                                "Treatment_and_disposal_of_hazardous_waste_x3",
                            ),
                            ("72", "Scientific_research_and_development"),
                            (
                                "72_1",
                                "Research_and_experimental_development_on_natural_sciences_and_engineering",
                            ),
                            (
                                "72_2",
                                "Research_and_experimental_development_on_social_sciences_and_humanities",
                            ),
                            (
                                "72_19",
                                "Other_research_and_experimental_development_on_natural_sciences_and_engineering",
                            ),
                            (
                                "72_11",
                                "Research_and_experimental_development_on_biotechnology",
                            ),
                            (
                                "72_20",
                                "Research_and_experimental_development_on_social_sciences_and_humanities_x2",
                            ),
                            (
                                "72_1_x2",
                                "Research_and_experimental_development_on_natural_sciences_and_engineering_x2",
                            ),
                            (
                                "72_2_x2",
                                "Research_and_experimental_development_on_social_sciences_and_humanities_x3",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Economic_activity",
                    ),
                ),
                (
                    "ENTRPRS_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Enterprise"),
                            ("2", "Not_enterprise"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Enterprise_indicator",
                    ),
                ),
                (
                    "ENTRPRS_SZ",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Medium_enterprise"),
                            ("3", "Small_enterprise"),
                            ("4", "Micro_enterprise"),
                            ("6", "Large_enterprise_from_input_data_"),
                            ("7", "Large_enterprise_because_of_absence_of_input_data"),
                            ("1", "Large_enterprise"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Enterprise_size",
                    ),
                ),
                (
                    "GVRND_CNTRY_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Governed_Country_code",
                    ),
                ),
                (
                    "INSTTTNL_SCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "S125_W",
                                "Other_financial_corporations_excluding_financial_vehicle_corporations",
                            ),
                            (
                                "S125_I",
                                "Other_financial_intermediaries_except_insurance_corporations_and_pension_funds_other_than_CCPs_FVCs_security_and_derivative_dealers_financial_corporations_engaged_in_lending_and_specialised_financial_corporations",
                            ),
                            ("S125_C", "Financial_corporations_engaged_in_lending"),
                            ("S125_B", "Security_and_derivative_dealers"),
                            (
                                "S125_D",
                                "Specialised_financial_corporations_other_than_CCPs",
                            ),
                            ("S125_E", "Central_Counterparties_CCPs_"),
                            (
                                "S125_B2",
                                "Security_and_derivative_dealers_other_than_credit_institutions",
                            ),
                            (
                                "S125_B1",
                                "Security_and_derivative_dealers_classified_as_credit_institutions",
                            ),
                            (
                                "S125_I_x2",
                                "Other_financial_intermediaries_except_insurance_corporations_and_pension_funds_other_than_CCPs_FVCs_security_and_derivative_dealers_financial_corporations_engaged_in_lending_and_specialised_financial_corporations_x2",
                            ),
                            (
                                "S125_C_x2",
                                "Financial_corporations_engaged_in_lending_x2",
                            ),
                            ("S125_B_x2", "Security_and_derivative_dealers_x2"),
                            (
                                "S125_D_x2",
                                "Specialised_financial_corporations_other_than_CCPs_x2",
                            ),
                            ("S125_E_x2", "Central_Counterparties_CCPs__x2"),
                            (
                                "S125_B2_x2",
                                "Security_and_derivative_dealers_other_than_credit_institutions_x2",
                            ),
                            (
                                "S125_B1_x2",
                                "Security_and_derivative_dealers_classified_as_credit_institutions_x2",
                            ),
                            (
                                "S125_I_x3",
                                "Other_financial_intermediaries_except_insurance_corporations_and_pension_funds_other_than_CCPs_FVCs_security_and_derivative_dealers_financial_corporations_engaged_in_lending_and_specialised_financial_corporations_x3",
                            ),
                            (
                                "S125_C_x3",
                                "Financial_corporations_engaged_in_lending_x3",
                            ),
                            ("S125_B_x3", "Security_and_derivative_dealers_x3"),
                            (
                                "S125_D_x3",
                                "Specialised_financial_corporations_other_than_CCPs_x3",
                            ),
                            ("S125_E_x3", "Central_Counterparties_CCPs__x3"),
                            (
                                "S125_B2_x3",
                                "Security_and_derivative_dealers_other_than_credit_institutions_x3",
                            ),
                            (
                                "S125_B1_x3",
                                "Security_and_derivative_dealers_classified_as_credit_institutions_x3",
                            ),
                            ("S14", "Households"),
                            (
                                "S14_B",
                                "Households_other_than_sole_proprietorships_partnerships_without_legal_status",
                            ),
                            (
                                "S14_A",
                                "Households_that_are_sole_proprietorships_partnerships_without_legal_status",
                            ),
                            (
                                "S14_B_x2",
                                "Households_other_than_sole_proprietorships_partnerships_without_legal_status_x2",
                            ),
                            (
                                "S14_A_x2",
                                "Households_that_are_sole_proprietorships_partnerships_without_legal_status_x2",
                            ),
                            (
                                "S14_B_x3",
                                "Households_other_than_sole_proprietorships_partnerships_without_legal_status_x3",
                            ),
                            (
                                "S14_A_x3",
                                "Households_that_are_sole_proprietorships_partnerships_without_legal_status_x3",
                            ),
                            ("S11", "Non_financial_corporations"),
                            ("S11_B", "Head_office_of_non_financial_corporations"),
                            (
                                "S11_C",
                                "Non_financial_corporation_other_than_head_office_of_non_financial_corporations_and_post_office_giro",
                            ),
                            ("S11_A", "Post_Office_Giro"),
                            (
                                "S11_B_x2",
                                "Head_office_of_non_financial_corporations_x2",
                            ),
                            (
                                "S11_C_x2",
                                "Non_financial_corporation_other_than_head_office_of_non_financial_corporations_and_post_office_giro_x2",
                            ),
                            ("S11_A_x2", "Post_Office_Giro_x2"),
                            (
                                "S11_B_x3",
                                "Head_office_of_non_financial_corporations_x3",
                            ),
                            (
                                "S11_C_x3",
                                "Non_financial_corporation_other_than_head_office_of_non_financial_corporations_and_post_office_giro_x3",
                            ),
                            ("S11_A_x3", "Post_Office_Giro_x3"),
                            ("S121", "Central_banks"),
                            (
                                "S121_O",
                                "Central_banks_Other_than_European_system_of_Central_Banks",
                            ),
                            (
                                "S121_ESCB",
                                "Central_banks_European_system_of_Central_Banks",
                            ),
                            ("S121_NCB", "Central_banks_National_central_banks"),
                            ("S121_ECB", "Central_banks_European_central_bank"),
                            (
                                "S121_O_x2",
                                "Central_banks_Other_than_European_system_of_Central_Banks_x2",
                            ),
                            (
                                "S121_ESCB_x2",
                                "Central_banks_European_system_of_Central_Banks_x2",
                            ),
                            ("S121_NCB_x2", "Central_banks_National_central_banks_x2"),
                            ("S121_ECB_x2", "Central_banks_European_central_bank_x2"),
                            (
                                "S121_O_x3",
                                "Central_banks_Other_than_European_system_of_Central_Banks_x3",
                            ),
                            (
                                "S121_ESCB_x3",
                                "Central_banks_European_system_of_Central_Banks_x3",
                            ),
                            ("S121_NCB_x3", "Central_banks_National_central_banks_x3"),
                            ("S121_ECB_x3", "Central_banks_European_central_bank_x3"),
                            (
                                "S122_A_1",
                                "Credit_institutions_not_including_entities_according_to_the_article_2_5_Directive_2013_36_EU",
                            ),
                            (
                                "S122_A_2",
                                "Credit_institutions_according_to_the_article_2_5_Directive_2013_36_EU",
                            ),
                            ("S122_A", "Credit_institutions"),
                            (
                                "S122_A_1_x2",
                                "Credit_institutions_not_including_entities_according_to_the_article_2_5_Directive_2013_36_EU_x2",
                            ),
                            (
                                "S122_A_2_x2",
                                "Credit_institutions_according_to_the_article_2_5_Directive_2013_36_EU_x2",
                            ),
                            (
                                "S122_A_R",
                                "Credit_institutions_subject_to_minimum_reserve_requirements",
                            ),
                            (
                                "S122_A_NR",
                                "Credit_institutions_not_subject_to_minimum_reserve_requirements",
                            ),
                            (
                                "S122_A_1_x3",
                                "Credit_institutions_not_including_entities_according_to_the_article_2_5_Directive_2013_36_EU_x3",
                            ),
                            (
                                "S122_A_2_x3",
                                "Credit_institutions_according_to_the_article_2_5_Directive_2013_36_EU_x3",
                            ),
                            (
                                "S122_A_R_x2",
                                "Credit_institutions_subject_to_minimum_reserve_requirements_x2",
                            ),
                            (
                                "S122_A_NR_x2",
                                "Credit_institutions_not_subject_to_minimum_reserve_requirements_x2",
                            ),
                            (
                                "S122_A_1_x4",
                                "Credit_institutions_not_including_entities_according_to_the_article_2_5_Directive_2013_36_EU_x4",
                            ),
                            (
                                "S122_A_2_x4",
                                "Credit_institutions_according_to_the_article_2_5_Directive_2013_36_EU_x4",
                            ),
                            (
                                "S122_A_R_x3",
                                "Credit_institutions_subject_to_minimum_reserve_requirements_x3",
                            ),
                            (
                                "S122_A_NR_x3",
                                "Credit_institutions_not_subject_to_minimum_reserve_requirements_x3",
                            ),
                            (
                                "S122_B1",
                                "Electronic_money_institutions_principally_engaged_in_financial_intermediation",
                            ),
                            (
                                "S122_B2",
                                "Deposit_taking_corporations_except_the_central_bank_other_than_credit_institutions_and_electronic_money_institutions",
                            ),
                            ("S123", "Money_Market_Funds_MMFs_"),
                            ("S124", "Non_MMF_investment_funds"),
                            ("S124_A", "Non_MMF_investment_funds_open_ended"),
                            ("S124_B", "Non_MMF_investment_funds_closed"),
                            ("S124_A_x2", "Non_MMF_investment_funds_open_ended_x2"),
                            ("S124_B_x2", "Non_MMF_investment_funds_closed_x2"),
                            ("S124_A_x3", "Non_MMF_investment_funds_open_ended_x3"),
                            ("S124_B_x3", "Non_MMF_investment_funds_closed_x3"),
                            ("S125_A", "Financial_Vehicle_Corporations_FVCs_"),
                            ("S125_B_x4", "Security_and_derivative_dealers_x4"),
                            (
                                "S125_B2_x4",
                                "Security_and_derivative_dealers_other_than_credit_institutions_x4",
                            ),
                            (
                                "S125_B1_x4",
                                "Security_and_derivative_dealers_classified_as_credit_institutions_x4",
                            ),
                            (
                                "S125_B2_x5",
                                "Security_and_derivative_dealers_other_than_credit_institutions_x5",
                            ),
                            (
                                "S125_B1_x5",
                                "Security_and_derivative_dealers_classified_as_credit_institutions_x5",
                            ),
                            (
                                "S125_B2_x6",
                                "Security_and_derivative_dealers_other_than_credit_institutions_x6",
                            ),
                            (
                                "S125_B1_x6",
                                "Security_and_derivative_dealers_classified_as_credit_institutions_x6",
                            ),
                            (
                                "S125_C_x4",
                                "Financial_corporations_engaged_in_lending_x4",
                            ),
                            (
                                "S125_D_x4",
                                "Specialised_financial_corporations_other_than_CCPs_x4",
                            ),
                            ("S125_E_x4", "Central_Counterparties_CCPs__x4"),
                            (
                                "S125_I_x4",
                                "Other_financial_intermediaries_except_insurance_corporations_and_pension_funds_other_than_CCPs_FVCs_security_and_derivative_dealers_financial_corporations_engaged_in_lending_and_specialised_financial_corporations_x4",
                            ),
                            ("S126", "Financial_auxiliaries"),
                            ("S126_A", "Management_companies"),
                            ("S126_C", "Payment_Institution"),
                            ("S126_B", "Head_office_of_financial_corporations"),
                            (
                                "S126_D",
                                "Financial_auxiliaries_other_than_management_companies_head_office_of_financial_corporations_payment_institutions",
                            ),
                            ("S126_A_x2", "Management_companies_x2"),
                            ("S126_C_x2", "Payment_Institution_x2"),
                            ("S126_B_x2", "Head_office_of_financial_corporations_x2"),
                            (
                                "S126_D_x2",
                                "Financial_auxiliaries_other_than_management_companies_head_office_of_financial_corporations_payment_institutions_x2",
                            ),
                            ("S126_A_x3", "Management_companies_x3"),
                            ("S126_C_x3", "Payment_Institution_x3"),
                            ("S126_B_x3", "Head_office_of_financial_corporations_x3"),
                            (
                                "S126_D_x3",
                                "Financial_auxiliaries_other_than_management_companies_head_office_of_financial_corporations_payment_institutions_x3",
                            ),
                            (
                                "S127",
                                "Captive_financial_institutions_and_money_lenders",
                            ),
                            ("S127_A", "Holding_companies"),
                            (
                                "S127_B",
                                "Captive_financial_institutions_and_money_lenders_other_than_Holding_companies",
                            ),
                            ("S127_A_x2", "Holding_companies_x2"),
                            (
                                "S127_B_x2",
                                "Captive_financial_institutions_and_money_lenders_other_than_Holding_companies_x2",
                            ),
                            ("S127_A_x3", "Holding_companies_x3"),
                            (
                                "S127_B_x3",
                                "Captive_financial_institutions_and_money_lenders_other_than_Holding_companies_x3",
                            ),
                            ("S128", "Insurance_corporations"),
                            (
                                "S128_E",
                                "Other_than_Reinsurance_Life_insurance_Non_Life_insurance_and_Composite_insurance",
                            ),
                            ("S128_D", "Composite_insurance"),
                            ("S128_C", "Non_Life_insurance"),
                            ("S128_B", "Life_insurance"),
                            ("S128_A", "Reinsurance"),
                            (
                                "S128_E_x2",
                                "Other_than_Reinsurance_Life_insurance_Non_Life_insurance_and_Composite_insurance_x2",
                            ),
                            ("S128_D_x2", "Composite_insurance_x2"),
                            ("S128_C_x2", "Non_Life_insurance_x2"),
                            ("S128_B_x2", "Life_insurance_x2"),
                            ("S128_A_x2", "Reinsurance_x2"),
                            (
                                "S128_E_x3",
                                "Other_than_Reinsurance_Life_insurance_Non_Life_insurance_and_Composite_insurance_x3",
                            ),
                            ("S128_D_x3", "Composite_insurance_x3"),
                            ("S128_C_x3", "Non_Life_insurance_x3"),
                            ("S128_B_x3", "Life_insurance_x3"),
                            ("S128_A_x3", "Reinsurance_x3"),
                            ("S129", "Pension_funds"),
                            (
                                "S1311",
                                "Central_government_excluding_social_security_funds_",
                            ),
                            (
                                "S1312",
                                "State_government_excluding_social_security_funds_",
                            ),
                            (
                                "S1313",
                                "Local_government_excluding_social_security_funds_",
                            ),
                            ("S1314", "Social_security_funds"),
                            (
                                "S14_A_x4",
                                "Households_that_are_sole_proprietorships_partnerships_without_legal_status_x4",
                            ),
                            (
                                "S14_B_x4",
                                "Households_other_than_sole_proprietorships_partnerships_without_legal_status_x4",
                            ),
                            ("S15", "Non_profit_institutions_serving_households"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Institutional_sector",
                    ),
                ),
                (
                    "INSTTTNL_SCTR_CNTRL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "not_applicable"),
                            ("2", "National_private"),
                            ("3", "Foreign_controlled"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Institutional_sector_control",
                    ),
                ),
                (
                    "INTRNTNL_ORGNSTN_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="International_organisation_code",
                    ),
                ),
                (
                    "LDNG_BRNCH_ANCRDT_RPRTNG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("46", "Leading_branch"),
                            ("47", "Non_leading_branch"),
                            ("14", "Organisation_without_legal_proceeding"),
                            ("15", "Organisation_with_legal_proceeding"),
                            ("18", "Non_self_employed_natural_person"),
                            ("19", "Self_employed_natural_person"),
                            ("32", "Branch"),
                            ("33", "Investment_vehicle_fund"),
                            ("34", "Other_organisational_unit"),
                            ("5", "Other_financial_corporation"),
                            ("6", "Central_government"),
                            (
                                "7",
                                "State_and_local_government_and_Social_security_funds",
                            ),
                            ("9", "International_organisation"),
                            ("S11", "Non_financial_corporation"),
                            ("S122_A", "Credit_institution"),
                            ("37", "European_Central_Bank"),
                            (
                                "38",
                                "Central_Bank_that_is_not_the_European_Central_Bank",
                            ),
                            (
                                "36",
                                "Central_bank_and_private_sector_company_other_than_corporation",
                            ),
                            ("25", "Domestic_Branch"),
                            ("26", "Foreign_Branch"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Leading_branch_for_AnaCredit_reporting_indicator",
                    ),
                ),
                (
                    "LGL_FRM",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AT102", "Offene_Gesellschaft"),
                            ("AT103", "Kommanditgesellschaft"),
                            ("AT201", "Aktiengesellschaft"),
                            ("AT202", "Gesellschaft_mit_beschrankter_Haftung"),
                            ("AT401", "Erwerbs_und_Wirtschaftsgenossenschaft"),
                            ("AT501", "Versicherungsverein_auf_Gegenseitigkeit"),
                            ("AT601", "EUNT_Einzelunternehmen"),
                            ("AT603", "Privatstiftung"),
                            ("AT604", "Sparkasse"),
                            ("AT605", "Sonstiger_Rechtstrager"),
                            ("AT607", "Sonstige_Rechtsform"),
                            ("AT609", "GesbR_Gesellschaft_des_burgerlichen_Rechts"),
                            ("AT610", "Offentlich_rechtliche_Korperschaften"),
                            ("AT611", "Offentlich_rechtliche_Stiftungen"),
                            ("AT612", "Vereine"),
                            ("AT613", "Eigentumergemeinschaft"),
                            (
                                "BE000",
                                "Anciennes_formes_juridiques_plus_applicable_Oude_rechtsvormen_niet_langer_van_toepassing_Alte_Rechtsformen_nicht_mehr_anwendbar_",
                            ),
                            (
                                "BE002",
                                "Organisme_de_financement_de_pensions_Organisme_voor_de_Financiering_van_Pensioenen_Organismus_fur_die_Finanzierung_von_Pensionen",
                            ),
                            ("BE003", "Unite_TVA_BTW_eenheid_Mehrwertsteuereinheit"),
                            (
                                "BE006",
                                "Societe_cooperative_a_responsabilite_illimitee_Cooperatieve_vennootschap_met_onbeperkte_aansprakelijkheid_Genossenschaft_mit_unbeschrankter_Haftung",
                            ),
                            (
                                "BE008",
                                "Societe_cooperative_a_responsabilite_limitee_Cooperatieve_vennootschap_met_beperkte_aansprakelijkheid_Genossenschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE011",
                                "Societe_en_nom_collectif_Vennootschap_onder_firma_Offene_Handelsgesellschaft",
                            ),
                            (
                                "BE012",
                                "Societe_en_commandite_simple_Gewone_commanditaire_vennootschap_Einfache_Kommanditgesellschaft",
                            ),
                            (
                                "BE013",
                                "Societe_en_commandite_par_actions_Commanditaire_vennootschap_op_aandelen_Kommanditgesellschaft_auf_Aktien",
                            ),
                            (
                                "BE014",
                                "Societe_anonyme_Naamloze_vennootschap_Aktiengesellschaft",
                            ),
                            (
                                "BE015",
                                "Societe_privee_a_responsabilite_limitee_Besloten_vennootschap_met_beperkte_aansprakelijkheid_Privatgesellschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE017",
                                "Association_sans_but_lucratif_Vereniging_zonder_winstoogmerk_Vereinigung_ohne_Gewinnerzielungsabsicht",
                            ),
                            (
                                "BE019",
                                "Mutualite_Societe_Mutualiste_Union_nationale_de_mutualites_Ziekenfonds_Maatschappij_van_onderlinge_bijstand_Landsbond_van_ziekenfondsen_Krankenkasse_Gesellschaft_auf_Gegenseitigkeit_Krankenkassenlandesverband",
                            ),
                            (
                                "BE020",
                                "Union_professionnelle_Beroepsvereniging_Berufsvereinigung",
                            ),
                            (
                                "BE021",
                                "Association_d_assurances_mutuelles_Caisse_commune_d_assurances_de_droit_prive_Onderlinge_verzekeringsvereniging_Gemeenschappelijke_verzekeringskas_van_privaat_recht_Versicherungsvereinigung_auf_Gegenseitigkeit_Privatrechtliche_Versicherungsgesellschaft",
                            ),
                            (
                                "BE023",
                                "AEP_BPR_PRaV_Foreign_private_associations_with_establishment_in_Belgium",
                            ),
                            (
                                "BE025",
                                "Societe_agricole_Landbouwvennootschap_Landwirtschaftliche_Gesellschaft",
                            ),
                            (
                                "BE026",
                                "Fondation_privee_Private_stichting_Privatstiftung",
                            ),
                            (
                                "BE028",
                                "Institution_sans_but_lucratif_Instelling_zonder_winstoogmerk_Einrichtung_ohne_Gewinnerzielungsabsicht",
                            ),
                            (
                                "BE029",
                                "Fondation_d_utilite_publique_Stichting_van_openbaar_nut_Gemeinnutzige_Stiftung",
                            ),
                            ("BE030", "ENT_E_BO_AGes_Foreign_company"),
                            (
                                "BE051",
                                "Autre_forme_de_droit_prive_avec_personnalite_juridique_Andere_privaatrechtelijke_vorm_met_rechtspersoonlijkheid_Andere_privatrechtliche_Rechtsform_mit_Rechtspersonlichkeit",
                            ),
                            (
                                "BE060",
                                "Groupement_d_interet_economique_Economisch_samenwerkingsverband_Wirtschaftliche_Interessenvereinigung",
                            ),
                            (
                                "BE070",
                                "Association_des_coproprietaires_Vereniging_van_mede_eigenaars_Miteigentumervereinigung",
                            ),
                            (
                                "BE107",
                                "Cooperative_a_responsabilite_illimitee_cooperative_de_participation_de_droit_public_Cooperatieve_vennootschap_met_onbeperkte_aansprakelijkheid_bij_wijze_van_deelneming_van_publiek_recht_Offentlich_rechtliche_Genossenschaft_mit_unbeschrankter_Haftung_Genossenschaft_auf_Beteiligung",
                            ),
                            (
                                "BE108",
                                "Societe_cooperative_a_responsabilite_limitee_de_droit_public_Cooperatieve_vennootschap_met_beperkte_aansprakelijkheid_van_publiek_recht_Offentlich_rechtliche_Genossenschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE114",
                                "Societe_anonyme_de_droit_public_Naamloze_vennootschap_van_publiek_recht_Offentlich_rechtliche_Aktiengesellschaft",
                            ),
                            (
                                "BE117",
                                "Association_sans_but_lucratif_de_droit_public_Vereniging_zonder_winstoogmerk_van_publiek_recht_Offentlich_rechtliche_Vereinigung_ohne_Gewinnerzielungsabsicht",
                            ),
                            (
                                "BE121",
                                "Association_d_assurances_mutuelles_de_droit_public_Onderlinge_verzekeringsvereniging_van_publiek_recht_Offentlich_rechtliche_Versicherungsvereinigung_auf_Gegenseitigkeit",
                            ),
                            (
                                "BE124",
                                "Etablissement_public_Openbare_instelling_Offentliche_Einrichtung",
                            ),
                            (
                                "BE125",
                                "Association_internationale_sans_but_lucratif_Internationale_vereniging_zonder_winstoogmerk_Internationale_Vereinigung_ohne_Gewinnerzielungsabsicht",
                            ),
                            (
                                "BE127",
                                "Monts_de_Piete_Berg_van_Barmhartigheid_Pfandleihhaus",
                            ),
                            (
                                "BE129",
                                "Polder_wateringue_Polder_Watering_Entwasserungsgenossenschaft_Bewasserungsgenossenschaft",
                            ),
                            (
                                "BE151",
                                "Autre_forme_juridique_Andere_rechtsvorm_Andere_Rechtsform",
                            ),
                            (
                                "BE160",
                                "OPEI_BIPO_AIOE_Foreign_or_international_public_institution",
                            ),
                            (
                                "BE200",
                                "Societe_en_formation_Vennootschap_in_oprichting_In_Grundung_befindliche_Gesellschaft",
                            ),
                            (
                                "BE206",
                                "Societe_civile_sous_forme_de_societe_cooperative_a_responsabilite_illimitee_Burgerlijke_vennootschap_onder_vorm_van_cooperatieve_vennootschap_met_onbeperkte_aansprakelijkheid_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_Genossenschaft_mit_unbeschrankter_Haftung",
                            ),
                            (
                                "BE208",
                                "Societe_civile_sous_forme_de_societe_cooperative_a_responsabilite_limitee_Burgerlijke_vennootschap_onder_vorm_van_cooperatieve_vennootschap_met_beperkte_aansprakelijkheid_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_Genossenschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE211",
                                "Societe_civile_sous_forme_de_societe_en_nom_collectif_Burgerlijke_vennootschap_onder_vorm_van_vennootschap_onder_firma_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_offenen_Handelsgesellschaft",
                            ),
                            (
                                "BE212",
                                "Societe_civile_sous_forme_de_societe_en_commandite_simple_Burgerlijke_vennootschap_onder_vorm_van_gewone_commanditaire_vennootschap_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_einfachen_Kommanditgesellschaft",
                            ),
                            (
                                "BE213",
                                "Societe_civile_sous_forme_de_societe_en_commandite_par_actions_Burgerlijke_vennootschap_onder_vorm_van_commanditaire_vennootschap_op_aandelen_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_Kommanditgesellschaft_auf_Aktien",
                            ),
                            (
                                "BE214",
                                "Societe_civile_sous_forme_de_societe_anonyme_Burgerlijke_vennootschap_onder_vorm_van_naamloze_vennootschap_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_Aktiengesellschaft",
                            ),
                            (
                                "BE215",
                                "Societe_civile_sous_forme_de_societe_privee_a_responsabilite_limitee_Burgerlijke_vennootschap_onder_vorm_van_besloten_vennootschap_met_beperkte_aansprakelijkheid_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_Privatgesellschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE217",
                                "Parti_politique_europeen_Europese_politieke_partij_Europaische_politische_Partei",
                            ),
                            (
                                "BE218",
                                "Fondation_politique_europeenne_Europese_politieke_stichting_Europaische_politische_Stiftung",
                            ),
                            (
                                "BE225",
                                "Societe_civile_sous_forme_de_societe_agricole_Burgerlijke_Vennootschap_onder_vorm_van_Landbouwvennootschap_BV_LV_Zivilrechtliche_Gesellschaft_in_der_Rechtsform_einer_landwirtschaftlichen_Gesellschaft",
                            ),
                            (
                                "BE301",
                                "Service_public_federal_Federale_overheidsdienst_Foderaler_offentlicher_Dienst",
                            ),
                            (
                                "BE302",
                                "Service_public_federal_de_programmation_Programmatorische_federale_overheidsdienst_Foderaler_offentlicher_Programmierungsdienst",
                            ),
                            (
                                "BE303",
                                "Autre_service_federal_Andere_federale_dienst_Anderer_foderale_Dienst",
                            ),
                            (
                                "BE310",
                                "Autorite_de_la_Region_flamande_et_de_la_Communaute_flamande_Overheid_van_het_Vlaamse_Gewest_en_van_de_Vlaamse_Gemeenschap_Behorde_der_Flamischen_Region_und_der_Flamischen_Gemeinschaft",
                            ),
                            (
                                "BE320",
                                "Autorite_de_la_Region_wallonne_Overheid_van_het_Waalse_Gewest_Behorde_der_Wallonischen_Region",
                            ),
                            (
                                "BE325",
                                "Association_internationale_sans_but_lucratif_de_droit_public_Internationale_vereniging_zonder_winstoogmerk_van_publiek_recht_Offentlich_rechtliche_Internationale_Vereinigung_ohne_Gewinnerzielungsabsicht",
                            ),
                            (
                                "BE330",
                                "Autorite_de_la_Region_de_Bruxelles_Capitale_Overheid_van_het_Brusselse_Hoofdstedelijk_Gewest_Behorde_der_Region_Brussel_Hauptstadt",
                            ),
                            (
                                "BE340",
                                "Autorite_de_la_Communaute_francaise_Overheid_van_de_Franse_Gemeenschap_Behorde_der_Franzosischen_Gemeinschaft",
                            ),
                            (
                                "BE350",
                                "Autorite_de_la_Communaute_germanophone_Overheid_van_de_Duitstalige_Gemeenschap_Behorde_der_Deutschsprachigen_Gemeinschaft",
                            ),
                            (
                                "BE400",
                                "Autorite_provinciale_Provinciale_overheid_Provinzialbehorde",
                            ),
                            ("BE411", "Ville_commune_Stad_gemeente_Stadt_Gemeinde"),
                            (
                                "BE412",
                                "Centre_public_d_action_sociale_Openbaar_centrum_voor_maatschappelijk_welzijn_Offentliches_Sozialhilfezentrum",
                            ),
                            (
                                "BE413",
                                "Police_locale_Lokale_politiezone_Lokale_Polizeizone",
                            ),
                            ("BE414", "Intercommunale_Intercommunale_Interkommunale"),
                            (
                                "BE415",
                                "Association_de_projet_Projectvereniging_Projektvereinigung",
                            ),
                            (
                                "BE416",
                                "Association_prestataire_de_services_Region_flamande_Dienstverlenende_vereniging_Vlaams_Gewest_Dienstleistungsvereinigung_Flamische_Region_",
                            ),
                            (
                                "BE417",
                                "Association_chargee_de_mission_Region_flamande_Opdrachthoudende_vereniging_Vlaams_Gewest_Beauftragte_Vereinigung_Flamische_Region_",
                            ),
                            (
                                "BE418",
                                "Regie_communale_autonome_Autonoom_gemeentebedrijf_Autonome_Gemeinderegie",
                            ),
                            (
                                "BE419",
                                "Regie_provinciale_autonome_Autonoom_provinciebedrijf_Autonome_Provinzialregie",
                            ),
                            (
                                "BE420",
                                "Association_de_CPAS_Vereniging_van_OCMW_s_Vereinigung_von_offentlichen_Sozialhilfezentren",
                            ),
                            (
                                "BE422",
                                "Zone_de_secours_Hulpverleningszone_Hilfeleistungszone",
                            ),
                            (
                                "BE506",
                                "Societe_cooperative_a_responsabilite_illimitee_a_finalite_sociale_Cooperatieve_vennootschap_met_onbeperkte_aansprakelijkheid_met_een_sociaal_oogmerk_Genossenschaft_mit_unbeschrankter_Haftung_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE508",
                                "Societe_cooperative_a_responsabilite_limitee_a_finalite_sociale_Cooperatieve_vennootschap_met_beperkte_aansprakelijkheid_met_een_sociaal_oogmerk_Genossenschaft_mit_beschrankter_Haftung_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE511",
                                "Societe_en_nom_collectif_a_finalite_sociale_Vennootschap_onder_firma_met_een_sociaal_oogmerk_Offene_Handelsgesellschaft_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE512",
                                "Societe_en_commandite_simple_a_finalite_sociale_Gewone_commanditaire_vennootschap_met_een_sociaal_oogmerk_Einfache_Kommanditgesellschaft_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE513",
                                "Societe_en_commandite_par_actions_a_finalite_sociale_Commanditaire_vennootschap_op_aandelen_met_een_sociaal_oogmerk_Kommanditgesellschaft_auf_Aktien_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE514",
                                "Societe_anonyme_a_finalite_sociale_Naamloze_vennootschap_met_een_sociaal_oogmerk_Aktiengesellschaft_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE515",
                                "Societe_privee_a_responsabilite_limitee_a_finalite_sociale_Besloten_vennootschap_met_beperkte_aansprakelijkheid_met_een_sociaal_oogmerk_Privatgesellschaft_mit_beschrankter_Haftung_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE560",
                                "Groupement_d_interet_economique_a_finalite_sociale_Economisch_samenwerkingsverband_met_een_sociaal_oogmerk_Wirtschaftliche_Interessenvereinigung_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE610",
                                "Societe_a_responsabilite_limitee_Besloten_Vennootschap_Gesellschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE612",
                                "Societe_en_commandite_Commanditaire_vennootschap_Kommanditgesellschaft",
                            ),
                            (
                                "BE616",
                                "Societe_a_responsabilite_limitee_de_droit_public_Besloten_Vennootschap_van_publiek_recht_Offentlich_rechtliche_Gesellschaft_mit_beschrankter_Haftung",
                            ),
                            (
                                "BE617",
                                "Societe_en_commandite_de_droit_public_Commanditaire_vennootschap_van_publiek_recht_Offentlich_rechtliche_Kommanditgesellschaft",
                            ),
                            (
                                "BE651",
                                "Autre_forme_a_finalite_sociale_de_droit_public_Andere_vorm_met_een_sociaal_oogmerk_van_publiek_recht_Andere_offentlich_rechtliche_Rechtsform_mit_sozialer_Zielsetzung",
                            ),
                            (
                                "BE702",
                                "Societe_de_droit_commun_Maatschap_Gesellschaft_des_allgemeinen_Rechts",
                            ),
                            (
                                "BE706",
                                "Societe_cooperative_Cooperatieve_vennootschap_Genossenschaft",
                            ),
                            (
                                "BE716",
                                "Societe_cooperative_de_droit_public_Cooperatieve_vennootschap_van_publiek_recht_Offentlich_rechtliche_Genossenschaft",
                            ),
                            (
                                "BE721",
                                "Societe_ou_association_sans_personnalite_juridique_Vennootschap_of_vereniging_zonder_rechtspersoonlijkheid_Gesellschaften_oder_Vereinigungen_ohne_Rechtspersonlichkeit",
                            ),
                            ("BG101", "Aktsionerno_druzhestvo_AD_"),
                            ("BG102", "Druzhestvo_s_ogranichena_otgovornost_OOD_"),
                            ("BG103", "Komandirtno_druzhestvo_s_aktsii_KDA_"),
                            ("BG104", "Ednolichno_aktsionerno_druzhestvo_EAD_"),
                            (
                                "BG105",
                                "Ednolichno_druzhestvo_s_ogranichena_otgovornost_EOOD_",
                            ),
                            ("BG106", "Komandirtno_druzhestvo_KD_"),
                            ("BG107", "S_biratelno_druzhestvo_SD_S_druzhie_S_ie_"),
                            (
                                "BG1539",
                                "Aktsionerno_druzhestvo_s_s_spetsialna_investitsionna_tsel_ADSITs_",
                            ),
                            ("BG462", "Ednolichen_t_rgovets_ET_"),
                            ("BG466", "Kooperatsiia"),
                            (
                                "BG472",
                                "Druzhestvo_uchredeno_po_Zakona_za_zad_lzheniiata_i_dogovorite_DZZD_",
                            ),
                            ("CY102", "Idiotike_Etaireia"),
                            ("CY103", "Demosia_Etaireia"),
                            ("CY109", "Sunetairismos"),
                            ("CY111", "Sunergatika_Pistotika_Idrumata"),
                            ("CY112", "SP_Autotelos_ergazomenos"),
                            ("CY113", "Somateia_kai_Idrumata"),
                            ("CY114", "Ontotetes_pou_diepontai_apo_to_demosio_dikaio"),
                            ("CY115", "B_Emporike_Eponumia"),
                            ("CY116", "Tameia_Pronoias_Suntaxeos"),
                            ("CY117", "Alle_nomike_morphe"),
                            ("CZ100", "Podnikajici_fyzicka_osoba_tuzemska"),
                            ("CZ111", "Verejna_obchodni_spolecnost"),
                            ("CZ112", "Spolecnost_s_rucenim_omezenym"),
                            ("CZ113", "Spolecnost_komanditni"),
                            ("CZ115", "Spolecny_podnik"),
                            ("CZ116", "Zajmove_sdruzeni"),
                            ("CZ117", "Nadace"),
                            ("CZ118", "Nadacni_fond"),
                            ("CZ121", "Akciova_spolecnost"),
                            ("CZ141", "Obecne_prospesna_spolecnost"),
                            ("CZ145", "Spolecenstvi_vlastniku_jednotek"),
                            ("CZ151", "Komoditni_burza"),
                            ("CZ152", "Garancni_fond_obchodniku_s_cennymi_papiry"),
                            ("CZ161", "Ustav"),
                            ("CZ205", "Druzstvo"),
                            ("CZ301", "Statni_podnik"),
                            ("CZ313", "Ceska_narodni_banka"),
                            ("CZ325", "Organizacni_slozka_statu"),
                            ("CZ326", "Staly_rozhodci_soud"),
                            ("CZ331", "Prispevkova_organizace"),
                            (
                                "CZ352",
                                "Sprava_zeleznicni_dopravni_cesty_statni_organizace",
                            ),
                            ("CZ353", "Rada_pro_verejny_dohled_nad_auditem"),
                            ("CZ361", "Verejnopravni_instituce_CT_CRo_CTK_"),
                            ("CZ381", "Fond_ze_zakona_"),
                            ("CZ391", "Zdravotni_pojistovna"),
                            ("CZ421", "Odstepny_zavod_zahranicni_pravnicke_osoby"),
                            (
                                "CZ422",
                                "Organizacni_slozka_zahranicniho_nadacniho_fondu",
                            ),
                            ("CZ424", "Zahranicni_fyzicka_osoba"),
                            ("CZ521", "Samostatna_drobna_provozovna_obecniho_uradu"),
                            ("CZ541", "Podilovy_nebo_penzijni_fond"),
                            ("CZ601", "Vysoka_skola"),
                            ("CZ641", "Skolska_pravnicka_osoba"),
                            ("CZ661", "Verejna_vyzkumna_instituce"),
                            (
                                "CZ703",
                                "Odborova_organizace_a_organizace_zamestnavatelu",
                            ),
                            (
                                "CZ704",
                                "Zvlastni_organizace_pro_zastoupeni_ceskych_zajmu_v_mezinarodnich_nevladnich_organizacich",
                            ),
                            ("CZ705", "Podnik_nebo_hospodarske_zarizeni_sdruzeni"),
                            ("CZ706", "Spolek"),
                            ("CZ707", "Odborova_organizace"),
                            ("CZ708", "Organizace_zamestnavatelu"),
                            ("CZ711", "Politicka_strana_politicke_hnuti"),
                            (
                                "CZ715",
                                "Podnik_nebo_hospodarske_zarizeni_politicke_strany",
                            ),
                            ("CZ721", "Cirkevni_organizace_a_nabozenske_spolecnosti"),
                            ("CZ722", "Evidovane_cirkevni_pravnicke_osoby"),
                            ("CZ723", "Svazy_cirkvi_a_nabozenskych_spolecnosti"),
                            ("CZ731", "Organizacni_jednotka_sdruzeni"),
                            (
                                "CZ732",
                                "Organizacni_jednotka_politicke_strany_nebo_politickeho_hnuti",
                            ),
                            (
                                "CZ733",
                                "Organizacni_jednotka_odborove_organizace_a_organizace_zamestnavatelu",
                            ),
                            (
                                "CZ734",
                                "Organizacni_jednotka_zvlastni_organizace_pro_zastoupeni_ceskych_zajmu_v_mezinarodnich_nevladnich_organizacich",
                            ),
                            ("CZ736", "Pobocny_spolek"),
                            ("CZ741", "Stavovska_organizace_profesni_komora"),
                            ("CZ745", "Komora_s_vyjimkou_profesnich_komor_"),
                            ("CZ751", "Zajmove_sdruzeni_pravnickych_osob"),
                            ("CZ761", "Honebni_spolecenstvo"),
                            ("CZ771", "Svazek_obci"),
                            ("CZ801", "Obec_nebo_mestska_cast_hlavniho_mesta_Prahy"),
                            ("CZ804", "Kraj_a_hlavni_mesto_Praha"),
                            ("CZ805", "Regionalni_rada_regionu_soudrznosti"),
                            ("CZ901", "Zastupitelsky_organ_jinych_statu"),
                            ("CZ906", "Zahranicni_spolek"),
                            ("CZ907", "Mezinarodni_odborova_organizace"),
                            ("CZ908", "Mezinarodni_organizace_zamestnavatelu"),
                            (
                                "CZ911",
                                "Zahranicni_kulturni_informacni_stredisko_rozhlasova_tiskova_a_televizni_agentura",
                            ),
                            ("CZ921", "Mezinarodni_nevladni_organizace"),
                            (
                                "CZ922",
                                "Organizacni_jednotka_mezinarodni_nevladni_organizace",
                            ),
                            ("CZ936", "Zahranicni_pobocny_spolek"),
                            ("CZ937", "Pobocna_mezinarodni_odborova_organizace"),
                            ("CZ938", "Pobocna_mezinarodni_organizace_zamestnavatelu"),
                            ("CZ950", "Subjekt_pravnim_radem_vyslovne_neupraveny"),
                            (
                                "CZ960",
                                "Pravnicka_osoba_zrizena_zvlastnim_zakonem_zapisovana_do_verejneho_rejstriku",
                            ),
                            ("CZ961", "Sverensky_fond"),
                            ("CZ962", "Zahranicni_sverensky_fond"),
                            (
                                "DE101",
                                "Gesellschaft_burgerlichen_Rechts_BGB_Gesellschaft_Aussen_GbR_",
                            ),
                            ("DE102", "Offene_Handelsgesellschaft"),
                            ("DE103", "Kommanditgesellschaft_x2"),
                            (
                                "DE104",
                                "eK_Eingetragener_Kaufmann_Eingetragene_Kauffrau",
                            ),
                            ("DE105", "Partnerschaftsgesellschaft"),
                            (
                                "DE108",
                                "Kommanditgesellschaft_mit_haftungsbeschranktem_Komplementar",
                            ),
                            (
                                "DE109",
                                "Kommanditgesellschaft_auf_Aktien_mit_haftungsbeschranktem_Komplementar",
                            ),
                            (
                                "DE110",
                                "Offene_Handelsgesellschaft_mit_haftungsbeschranktem_Gesellschafter",
                            ),
                            ("DE201", "Aktiengesellschaft_x2"),
                            ("DE202", "Kommanditgesellschaft_auf_Aktien"),
                            ("DE205", "InvAG_Investmentaktiengesellschaft"),
                            ("DE206", "Gesellschaft_mit_beschrankter_Haftung_x2"),
                            ("DE207", "Unternehmergesellschaft_haftungsbeschrankt_"),
                            ("DE209", "wV_Wirtschaftlicher_Verein"),
                            ("DE210", "OPP_Offentlich_private_Partnerschaft"),
                            (
                                "DE211",
                                "JPahR_Juristische_Person_alten_hamburgischen_Rechts",
                            ),
                            ("DE301", "Eingetragene_Genossenschaft"),
                            ("DE401", "Versicherungsverein_auf_Gegenseitigkeit_x2"),
                            ("DE501", "Gebietskorperschaft"),
                            ("DE502", "Anstalt_des_offentlichen_Rechts"),
                            ("DE503", "Korperschaft_des_offentlichen_Rechts"),
                            ("DE504", "Stiftung_des_offentlichen_Rechts"),
                            ("DE505", "Betriebe_der_Gebietskorperschaften"),
                            ("DE603", "WuR_Weltanschauungs_und_Religionsgemeinschaft"),
                            ("DE507", "Zweckverband"),
                            ("DE601", "Stiftung_des_privaten_Rechts"),
                            ("DE602", "Eingetragener_Verein"),
                            ("DE604", "SoOE_Sonstige_Organisation_ohne_Erwerbszweck"),
                            (
                                "DE605",
                                "SnP_Sonstige_nichtrechtsfahige_Personenvereinigung",
                            ),
                            ("DE606", "P_Privatperson"),
                            ("DE701", "Sonstige_Rechtsformen"),
                            ("DK100", "Erhvervsdrivende_fond"),
                            ("DK110", "Forening"),
                            ("DK115", "Frivillig_forening"),
                            ("DK130", "Andelsselskab_forening_"),
                            ("DK140", "Andelsselskab_forening_begr_ansvar"),
                            ("DK150", "Forening_eller_selskab_med_begr_ansvar"),
                            ("DK151", "Selskab_med_begraenset_ansvar"),
                            ("DK152", "Forening_med_begraenset_ansvar"),
                            ("DK20", "Dodsbo"),
                            ("DK230", "Statslig_administrativ_enhed"),
                            ("DK235", "Selvstaendig_offentlig_virksomhed"),
                            ("DK240", "Amtskommune"),
                            ("DK245", "Region"),
                            ("DK250", "Primaerkommune"),
                            ("DK260", "Folkekirkelige_Institutioner"),
                            ("DK280", "Ovrige_virksomhedsformer"),
                            ("DK285", "Saerlig_Finansiel_virksomhed"),
                            ("DK30", "Interessentskab"),
                            ("DK40", "Kommanditselskab"),
                            ("DK45", "Medarbejderinvesteringsselskab"),
                            ("DK50", "Partrederi"),
                            ("DK60", "Aktieselskab"),
                            ("DK70", "Kommanditaktieselskab_Partnerselskab"),
                            ("DK80", "Anpartselskab"),
                            ("DK81", "Ivaerksaetterselskab"),
                            ("DK90", "Fonde_og_andre_selvejende_institutioner"),
                            ("EE101", "Aktsiaselts"),
                            ("EE102", "Osauhing"),
                            ("EE201", "Taisuhing"),
                            ("EE202", "Usaldusuhing"),
                            ("EE203", "Mittetulundusuhing"),
                            ("EE204", "Tulundusuhistu"),
                            ("EE205", "Sihtasutus"),
                            ("EE206", "Riigi_ja_kohaliku_omavalitsuse_asutused"),
                            ("EE207", "Korteriuhistu"),
                            ("ESC04", "Sociedad_Anonima"),
                            ("ESC05", "Sociedad_Anonima_Unipersonal"),
                            ("ESC06", "Sociedad_Anonima_Laboral"),
                            ("ESC07", "Sociedad_de_responsabilidad_limitada"),
                            ("ESC08", "Sociedad_Limitada_Unipersonal"),
                            ("ESC09", "Sociedad_Limitada_Laboral"),
                            ("ESC10", "Sociedad_Limitada_Nueva_Empresa"),
                            ("ESC11", "Sociedad_colectiva"),
                            ("ESC12", "Sociedad_Comanditaria_Simple"),
                            ("ESC13", "Sociedad_Comanditaria_por_acciones"),
                            ("ESC14", "Sociedad_Cooperativa"),
                            ("ESC16", "Sociedad_de_garantia_reciproca"),
                            ("ESC17", "Sociedad_agraria_de_transformacion"),
                            ("ESC19", "Sociedad_Civil_con_personalidad_juridica"),
                            ("ESC20", "Mutua"),
                            ("ESC21", "Agrupacion_de_Interes_economico"),
                            ("ESC25", "Otras_formas_juridicas"),
                            ("ESC30", "Sociedad_profesional"),
                            ("ESC31", "Fundacion"),
                            (
                                "ESC32",
                                "Asociaciones_y_otras_instituciones_sin_fines_de_lucro_a_servicio_de_los_hogares",
                            ),
                            ("ESC33", "Entidad_de_derecho_publico"),
                            (
                                "ESC34",
                                "Patrimonio_de_inversion_sin_personalidad_juridica",
                            ),
                            ("EU100", "Societas_Europea"),
                            ("EU200", "Societas_Cooperativa_Europea"),
                            ("EU300", "European_Economic_Interest_Grouping"),
                            ("EU400", "European_Grouping_of_Territorial_cooperation"),
                            (
                                "FBRANCH",
                                "Conventional_legal_form_for_the_branch_of_a_foreign_entity",
                            ),
                            ("FI10", "Avoin_yhtio"),
                            ("FI11", "Kommandiittiyhtio"),
                            ("FI12", "Osakeyhtio"),
                            ("FI13", "Asunto_osakeyhtio"),
                            ("FI14", "Laivanisannistoyhtio"),
                            ("FI16", "Keskinainen_kiinteisto_Oy"),
                            ("FI17", "Muu_kiinteisto_Oy_ei_keskinainen_"),
                            ("FI19", "Muu_yhtio"),
                            ("FI20", "Aatteellinen_yhdistys"),
                            ("FI21", "Erityislainsaadantoon_perustuva_yhdistys"),
                            ("FI22", "Keskinainen_vahinkovakuutusyhdistys"),
                            ("FI23", "Metsanhoitoyhdistys"),
                            ("FI24", "Osuuspankki"),
                            ("FI25", "Osuuskunta"),
                            ("FI26", "Avustuskassa"),
                            ("FI27", "Tyottomyyskassa"),
                            ("FI28", "Muu_taloudellinen_yhdistys"),
                            ("FI29", "Muu_yhdistys"),
                            ("FI30", "Saatio_saatiolain_mukainen_"),
                            ("FI31", "Saastopankki"),
                            ("FI32", "Elakesaatio_saadekirjalla_perustettu_"),
                            ("FI33", "Tyoelakekassa"),
                            ("FI35", "Hypoteekkiyhdistys"),
                            ("FI39", "Muu_saatio"),
                            ("FI40", "Valtio_ja_sen_laitokset"),
                            ("FI41", "Kunta"),
                            ("FI42", "Kuntayhtyma"),
                            ("FI43", "Ahvenanmaan_maakunta_ja_sen_virastot"),
                            ("FI44", "Evankelis_luterilainen_kirkko"),
                            ("FI45", "Ortodoksinen_kirkko"),
                            ("FI46", "Rekisteroity_uskonnollinen_yhdyskunta"),
                            ("FI47", "Ylioppilaskunta_tai_osakunta"),
                            ("FI48", "Erillishallinnollinen_valtion_laitos"),
                            ("FI49", "Muu_julkisoikeudellinen_oikeushenkilo"),
                            ("FI50", "Yhteisetuudet_esim_kalastuskunta_"),
                            ("FI51", "Verotusyhtyma"),
                            ("FI52", "Yhteisvastuullinen_pidatysvelvollinen"),
                            ("FI54", "Konkurssipesa"),
                            ("FI55", "Yhteismetsa"),
                            ("FI57", "Elinkeinoyhtyma"),
                            ("FI59", "Muu_verotuksen_yksikko"),
                            ("FI60", "Valtion_liikelaitos"),
                            ("FI61", "Kunnallinen_liikelaitos"),
                            ("FI62", "Kuntainliiton_kuntayhtyman_liikelaitos"),
                            ("FI63", "Ahvenanmaan_liikelaitos"),
                            ("FI99", "Muut_esim_tilapainen_oikeudellinen_muoto_"),
                            ("FR001", "SARL_SARL_Societe_a_responsabilite_limitee"),
                            ("FR002", "SA__Societe_anonyme"),
                            ("FR003", "SCA_Societe_en_commandite_par_actions"),
                            (
                                "FR004",
                                "SICAV_Societe_d_investissement_a_capital_variable",
                            ),
                            ("FR005", "Societe_d_investissement_a_capital_fixe"),
                            (
                                "FR006",
                                "EURL_Entreprise_unipersonnelle_a_responsabilite_limitee",
                            ),
                            ("FR007", "SCOP__Societe_cooperative_de_production"),
                            ("FR008", "SEM_Societe_d_economie_mixte"),
                            ("FR009", "SAS__Societe_par_actions_simplifiee"),
                            ("FR010", "Micro_entreprise"),
                            (
                                "FR0110",
                                "FCP_Fonds_commun_de_placement_denues_de_personnalite_morale",
                            ),
                            ("FR011", "Auto_entrepreneur"),
                            (
                                "FR0120",
                                "OT_Organismes_de_titrisation_denues_de_personnalite_morale",
                            ),
                            ("FR012", "Profession_liberale"),
                            ("FR013", "Societes_d_exercice_liberal"),
                            (
                                "FR014",
                                "EI_Entreprise_individuelle_entreprise_en_nom_personnel",
                            ),
                            ("FR015", "EURL_SASU_U_unipersonnelle"),
                            ("FR016", "FCP_Fond_commun_de_placement"),
                            ("FR017", "GIE_Groupement_d_interet_economique"),
                            ("FR018", "Association"),
                            ("FR019", "Association_non_declaree"),
                            ("FR020", "Association_declaree"),
                            ("FR021", "SEP_Societe_en_participation"),
                            ("FR022", "SNC_Societe_en_nom_collectif"),
                            ("FR024", "Association_cooperative_de_droit_local"),
                            (
                                "FR025",
                                "Etablissement_de_credit_sans_but_lucratif_a_conseil_d_administration_outre_mer_",
                            ),
                            (
                                "FR026",
                                "Etablissement_de_credit_sans_but_lucratif_a_conseil_d_orientation_et_de_surveillance_Loi_du_1er_juillet_1983",
                            ),
                            (
                                "FR027",
                                "Etablissement_de_credit_sans_but_lucratif_a_conseil_d_orientation_et_de_surveillance_Outre_mer_",
                            ),
                            (
                                "FR028",
                                "Etablissement_de_credit_sans_but_lucratif_conseil_d_orientation_et_de_surveillance_et_directoire_Loi_du_1er_juillet_1983",
                            ),
                            (
                                "FR029",
                                "Etablissement_public_communal_a_caractere_industriel_ou_commercial",
                            ),
                            ("FR030", "Etablissement_public_communal_administratif"),
                            (
                                "FR031",
                                "Etablissement_public_communal_de_credit_et_d_aide_sociale",
                            ),
                            ("FR032", "Etablissement_public_industriel_et_commercial"),
                            (
                                "FR033",
                                "Etablissement_public_national_a_caractere_industriel_ou_commercial",
                            ),
                            ("FR034", "Etablissement_public_national_administratif"),
                            (
                                "FR035",
                                "Etablissement_public_national_administratif_a_conseil_de_surveillance",
                            ),
                            ("FR036", "Societe_anonyme_a_capital_variable"),
                            ("FR037", "Societe_anonyme_cooperative_a_capital_fixe"),
                            (
                                "FR038",
                                "Societe_anonyme_cooperative_a_capital_variable_a_conseil_d_administration",
                            ),
                            (
                                "FR039",
                                "Societe_anonyme_cooperative_a_capital_variable_a_directoire_et_a_conseil_de_surveillance",
                            ),
                            (
                                "FR040",
                                "Societe_anonyme_cooperative_de_banque_a_conseil_d_administration",
                            ),
                            (
                                "FR041",
                                "Societe_anonyme_cooperative_de_banque_a_directoire_et_a_conseil_de_surveillance",
                            ),
                            ("FR042", "Forme_mutuelle_avec_intermediaires"),
                            ("FR043", "Forme_mutuelle_sans_intermediaires"),
                            ("FR044", "Mutuelle_locale_et_professionnelle"),
                            ("FR045", "Mutuelle_agricole"),
                            ("FR046", "Tontine"),
                            (
                                "FR047",
                                "Societe_anonyme_cooperative_de_banque_populaire_a_capital_fixe_Art_L512_2_3_et_4",
                            ),
                            ("FR048", "Pools_controles"),
                            ("FR049", "Institution_de_prevoyance"),
                            ("FR050", "Origine_CCMIP_mutuelles"),
                            (
                                "FR051",
                                "Societe_anonyme_cooperative_de_banque_populaire_a_capital_variable_Art_L512_2_et_suivants",
                            ),
                            (
                                "FR052",
                                "Societe_anonyme_cooperative_de_caution_mutuelle_a_capital_variable_Art_L515_4_a_L515_12",
                            ),
                            ("FR053", "Societe_anonyme_d_economie_mixte"),
                            ("FR054", "Societe_civile"),
                            (
                                "FR055",
                                "Societe_cooperative_a_capital_variable_Art_L512_20_a_L512_54",
                            ),
                            (
                                "FR056",
                                "Societe_cooperative_a_capital_variable_Art_L512_68_a_L512_84",
                            ),
                            (
                                "FR057",
                                "Societe_cooperative_de_banque_populaire_a_capital_fixe_Art_L512_2_3_et_4",
                            ),
                            (
                                "FR058",
                                "Societe_cooperative_de_banque_populaire_a_capital_variable_Art_L512_2_3_et_4",
                            ),
                            (
                                "FR059",
                                "Societe_cooperative_de_caution_mutuelle_a_capital_variable_Art_L515_4_a_L515_12",
                            ),
                            (
                                "FR060",
                                "Societe_cooperative_conseil_d_orientation_et_de_surveillance_et_directoire_Art_L512_85_a_104_a_capital_fixe_",
                            ),
                            (
                                "FR061",
                                "Societe_professionnelle_Loi_du_17_novembre_1943",
                            ),
                            (
                                "FR062",
                                "Union_de_societes_cooperatives_a_capital_variable",
                            ),
                            (
                                "FR063",
                                "Union_de_societes_cooperatives_a_capital_variable_Art_L512_20_a_L512_54",
                            ),
                            ("FR064", "Societe_en_commandite_simple"),
                            ("FR065", "Societe_cooperative_a_capital_fixe"),
                            ("FR066", "Societe_cooperative_a_capital_variable"),
                            ("FR1100", "Artisan_commercant"),
                            ("FR1200", "Commercant"),
                            ("FR1300", "Artisan"),
                            ("FR1400", "Officier_public_ou_ministeriel"),
                            ("FR1500", "Profession_liberale_x2"),
                            ("FR1600", "Exploitant_agricole"),
                            ("FR1700", "Agent_commercial"),
                            ("FR1800", "Associe_gerant_de_Societe"),
                            ("FR2110", "Indivision_entre_personnes_physiques"),
                            ("FR2120", "Indivision_avec_personne_morale"),
                            (
                                "FR2210",
                                "Societe_creee_de_fait_entre_personnes_physiques",
                            ),
                            ("FR2220", "Societe_creee_de_fait_avec_personne_morale"),
                            (
                                "FR2310",
                                "Societe_en_participation_entre_personnes_physiques",
                            ),
                            ("FR2320", "Societe_en_participation_avec_personne_morale"),
                            (
                                "FR2385",
                                "Societe_en_participation_de_professions_liberales",
                            ),
                            ("FR2400", "Fiducie"),
                            ("FR2700", "Paroisse_hors_zone_concordataire"),
                            (
                                "FR2900",
                                "Autre_groupement_de_droit_prive_non_dote_de_la_personnalite_morale",
                            ),
                            (
                                "FR3110",
                                "Representation_ou_agence_commerciale_d_etat_ou_organisme_public_etranger_immatricule_au_RCS",
                            ),
                            (
                                "FR3120",
                                "Societe_commerciale_etrangere_immatriculee_au_RCS",
                            ),
                            ("FR3205", "Organisation_internationale"),
                            (
                                "FR3210",
                                "Etat_collectivite_ou_etablissement_public_etranger",
                            ),
                            ("FR3220", "Societe_etrangere_non_immatriculee_au_RCS"),
                            ("FR3290", "Autre_personne_morale_de_droit_etranger"),
                            (
                                "FR4110",
                                "Etablissement_public_national_a_caractere_industriel_ou_commercial_dote_d_un_comptable_public",
                            ),
                            (
                                "FR4120",
                                "Etablissement_public_national_a_caractere_industriel_ou_commercial_non_dote_d_un_comptable_public",
                            ),
                            ("FR4130", "Exploitant_public"),
                            (
                                "FR4140",
                                "Etablissement_public_local_a_caractere_industriel_ou_commercial",
                            ),
                            (
                                "FR4150",
                                "Regie_d_une_collectivite_locale_a_caractere_industriel_ou_commercial",
                            ),
                            ("FR4160", "Institution_Banque_de_France"),
                            ("FR5191", "Societe_de_caution_mutuelle"),
                            ("FR5192", "Societe_cooperative_de_banque_populaire"),
                            ("FR5193", "Caisse_de_credit_maritime_mutuel"),
                            ("FR5194", "Caisse_federale_de_credit_mutuel"),
                            (
                                "FR5195",
                                "Association_cooperative_inscrite_droit_local_Alsace_Moselle_",
                            ),
                            (
                                "FR5196",
                                "Caisse_d_epargne_et_de_prevoyance_a_forme_cooperative",
                            ),
                            ("FR5202", "Societe_en_nom_collectif"),
                            ("FR5203", "Societe_en_nom_collectif_cooperative"),
                            ("FR5306", "Societe_en_commandite_simple_x2"),
                            ("FR5307", "Societe_en_commandite_simple_cooperative"),
                            ("FR5308", "Societe_en_commandite_par_actions"),
                            ("FR5309", "Societe_en_commandite_par_actions_cooperative"),
                            (
                                "FR5370",
                                "Societe_de_Participations_Financieres_de_Profession_Liberale_Societe_en_commandite_par_actions",
                            ),
                            (
                                "FR5385",
                                "Societe_d_exercice_liberal_en_commandite_par_actions",
                            ),
                            ("FR5410", "SARL_nationale"),
                            ("FR5415", "SARL_d_economie_mixte"),
                            (
                                "FR5422",
                                "SARL_immobiliere_pour_le_commerce_et_l_industrie_SICOMI_",
                            ),
                            ("FR5426", "SARL_immobiliere_de_gestion"),
                            (
                                "FR5430",
                                "SARL_d_amenagement_foncier_et_d_equipement_rural_SAFER_",
                            ),
                            ("FR5431", "SARL_mixte_d_interet_agricole_SMIA_"),
                            ("FR5432", "SARL_d_interet_collectif_agricole_SICA_"),
                            ("FR5442", "SARL_d_attribution"),
                            ("FR5443", "SARL_cooperative_de_construction"),
                            ("FR5451", "SARL_cooperative_de_consommation"),
                            ("FR5453", "SARL_cooperative_artisanale"),
                            ("FR5454", "SARL_cooperative_d_interet_maritime"),
                            ("FR5455", "SARL_cooperative_de_transport"),
                            ("FR5458", "SARL_cooperative_ouvriere_de_production_SCOP_"),
                            ("FR5459", "SARL_union_de_societes_cooperatives"),
                            ("FR5460", "Autre_SARL_cooperative"),
                            (
                                "FR5470",
                                "Societe_de_Participations_Financieres_de_Profession_Liberale_Societe_a_responsabilite_limitee",
                            ),
                            (
                                "FR5485",
                                "Societe_d_exercice_liberal_a_responsabilite_limitee",
                            ),
                            ("FR5498", "SARL_unipersonnelle"),
                            (
                                "FR5499",
                                "Societe_a_responsabilite_limitee_sans_autre_indication_",
                            ),
                            (
                                "FR5505",
                                "SA_a_participation_ouvriere_a_conseil_d_administration",
                            ),
                            ("FR5510", "SA_nationale_a_conseil_d_administration"),
                            (
                                "FR5515",
                                "SA_d_economie_mixte_a_conseil_d_administration",
                            ),
                            (
                                "FR5520",
                                "Societe_d_investissement_a_capital_variable_SICAV_a_conseil_d_administration",
                            ),
                            (
                                "FR5522",
                                "SA_immobiliere_pour_le_commerce_et_l_industrie_SICOMI_a_conseil_d_administration",
                            ),
                            (
                                "FR5525",
                                "SA_immobiliere_d_investissement_a_conseil_d_administration",
                            ),
                            (
                                "FR5530",
                                "SA_d_amenagement_foncier_et_d_equipement_rural_SAFER_a_conseil_d_administration",
                            ),
                            (
                                "FR5531",
                                "Societe_anonyme_mixte_d_interet_agricole_SMIA_a_conseil_d_administration",
                            ),
                            (
                                "FR5532",
                                "SA_d_interet_collectif_agricole_SICA_a_conseil_d_administration",
                            ),
                            ("FR5542", "SA_d_attribution_a_conseil_d_administration"),
                            (
                                "FR5543",
                                "SA_cooperative_de_construction_a_conseil_d_administration",
                            ),
                            ("FR5546", "SA_de_HLM_a_conseil_d_administration"),
                            (
                                "FR5547",
                                "SA_cooperative_de_production_de_HLM_a_conseil_d_administration",
                            ),
                            (
                                "FR5548",
                                "SA_de_credit_immobilier_a_conseil_d_administration",
                            ),
                            (
                                "FR5551",
                                "SA_cooperative_de_consommation_a_conseil_d_administration",
                            ),
                            (
                                "FR5552",
                                "SA_cooperative_de_commercants_detaillants_a_conseil_d_administration",
                            ),
                            (
                                "FR5553",
                                "SA_cooperative_artisanale_a_conseil_d_administration",
                            ),
                            (
                                "FR5554",
                                "SA_cooperative_d_interet_maritime_a_conseil_d_administration",
                            ),
                            (
                                "FR5555",
                                "SA_cooperative_de_transport_a_conseil_d_administration",
                            ),
                            (
                                "FR5558",
                                "SA_cooperative_ouvriere_de_production_SCOP_a_conseil_d_administration",
                            ),
                            (
                                "FR5559",
                                "SA_union_de_societes_cooperatives_a_conseil_d_administration",
                            ),
                            (
                                "FR5560",
                                "Autre_SA_cooperative_a_conseil_d_administration",
                            ),
                            (
                                "FR5570",
                                "Societe_de_Participations_Financieres_de_Profession_Liberale_Societe_anonyme_a_conseil_d_administration_SPFPL_SA_a_conseil_d_administration_",
                            ),
                            (
                                "FR5585",
                                "Societe_d_exercice_liberal_a_forme_anonyme_a_conseil_d_administration",
                            ),
                            ("FR5599", "SA_a_conseil_d_administration_s_a_i_"),
                            ("FR5605", "SA_a_participation_ouvriere_a_directoire"),
                            ("FR5610", "SA_nationale_a_directoire"),
                            ("FR5615", "SA_d_economie_mixte_a_directoire"),
                            (
                                "FR5620",
                                "Societe_d_investissement_a_capital_variable_SICAV_a_directoire",
                            ),
                            (
                                "FR5622",
                                "SA_immobiliere_pour_le_commerce_et_l_industrie_SICOMI_a_directoire",
                            ),
                            ("FR5625", "SA_immobiliere_d_investissement_a_directoire"),
                            ("FR5630", "Safer_anonyme_a_directoire"),
                            ("FR5631", "SA_mixte_d_interet_agricole_SMIA_"),
                            ("FR5632", "SA_d_interet_collectif_agricole_SICA_"),
                            ("FR5642", "SA_d_attribution_a_directoire"),
                            ("FR5643", "SA_cooperative_de_construction_a_directoire"),
                            ("FR5646", "SA_de_HLM_a_directoire"),
                            (
                                "FR5647",
                                "Societe_cooperative_de_production_de_HLM_anonyme_a_directoire",
                            ),
                            ("FR5648", "SA_de_credit_immobilier_a_directoire"),
                            ("FR5651", "SA_cooperative_de_consommation_a_directoire"),
                            (
                                "FR5652",
                                "SA_cooperative_de_commercants_detaillants_a_directoire",
                            ),
                            ("FR5653", "SA_cooperative_artisanale_a_directoire"),
                            (
                                "FR5654",
                                "SA_cooperative_d_interet_maritime_a_directoire",
                            ),
                            ("FR5655", "SA_cooperative_de_transport_a_directoire"),
                            (
                                "FR5658",
                                "SA_cooperative_ouvriere_de_production_SCOP_a_directoire",
                            ),
                            (
                                "FR5659",
                                "SA_union_de_societes_cooperatives_a_directoire",
                            ),
                            ("FR5660", "Autre_SA_cooperative_a_directoire"),
                            (
                                "FR5670",
                                "Societe_de_Participations_Financieres_de_Profession_Liberale_Societe_anonyme_a_Directoire_SPFPL_SA_a_directoire_",
                            ),
                            (
                                "FR5685",
                                "Societe_d_exercice_liberal_a_forme_anonyme_a_directoire",
                            ),
                            ("FR5699", "SA_a_directoire_s_a_i_"),
                            ("FR5710", "SAS_societe_par_actions_simplifiee"),
                            (
                                "FR5720",
                                "Societe_par_actions_simplifiee_a_associe_unique_ou_societe_par_actions_simplifiee_unipersonnelle",
                            ),
                            (
                                "FR5770",
                                "Societe_de_Participations_Financieres_de_Profession_Liberale_Societe_par_actions_simplifiee",
                            ),
                            (
                                "FR5785",
                                "Societe_d_exercice_liberal_par_action_simplifiee",
                            ),
                            ("FR6100", "Caisse_d_Epargne_et_de_Prevoyance"),
                            ("FR6220", "Groupement_d_interet_economique"),
                            (
                                "FR6316",
                                "Cooperative_d_utilisation_de_materiel_agricole_en_commun",
                            ),
                            ("FR6317", "Societe_cooperative_agricole"),
                            ("FR6318", "Union_de_societes_cooperatives_agricoles"),
                            ("FR6411", "Societe_d_assurance_a_forme_mutuelle"),
                            (
                                "FR6511",
                                "Societes_Interprofessionnelles_de_Soins_Ambulatoires_",
                            ),
                            (
                                "FR6521",
                                "Societe_civile_de_placement_collectif_immobilier",
                            ),
                            (
                                "FR6532",
                                "Societe_civile_d_interet_collectif_agricole_SICA_",
                            ),
                            ("FR6533", "Groupement_agricole_d_exploitation_en_commun"),
                            ("FR6534", "Groupement_foncier_agricole"),
                            ("FR6535", "Groupement_agricole_foncier"),
                            ("FR6536", "Groupement_forestier"),
                            ("FR6537", "Groupement_pastoral"),
                            ("FR6538", "Groupement_foncier_et_rural"),
                            ("FR6539", "Societe_civile_fonciere"),
                            ("FR6540", "Societe_civile_immobiliere"),
                            (
                                "FR6541",
                                "Societe_civile_immobiliere_de_construction_vente",
                            ),
                            ("FR6542", "Societe_civile_d_attribution"),
                            ("FR6543", "Societe_civile_cooperative_de_construction"),
                            (
                                "FR6544",
                                "Societe_civile_immobiliere_d_accession_progressive_a_la_propriete",
                            ),
                            ("FR6551", "Societe_civile_cooperative_de_consommation"),
                            ("FR6554", "Societe_civile_cooperative_d_interet_maritime"),
                            ("FR6558", "Societe_civile_cooperative_entre_medecins"),
                            ("FR6560", "Autre_societe_civile_cooperative"),
                            ("FR6561", "SCP_d_avocats"),
                            ("FR6562", "SCP_d_avocats_aux_conseils"),
                            ("FR6563", "SCP_d_avoues_d_appel"),
                            ("FR6564", "SCP_d_huissiers"),
                            ("FR6565", "SCP_de_notaires"),
                            ("FR6566", "SCP_de_commissaires_priseurs"),
                            ("FR6567", "SCP_de_greffiers_de_tribunal_de_commerce"),
                            ("FR6568", "SCP_de_conseils_juridiques"),
                            ("FR6569", "SCP_de_commissaires_aux_comptes"),
                            ("FR6571", "SCP_de_medecins"),
                            ("FR6572", "SCP_de_dentistes"),
                            ("FR6573", "SCP_d_infirmiers"),
                            ("FR6574", "SCP_de_masseurs_kinesitherapeutes"),
                            (
                                "FR6575",
                                "SCP_de_directeurs_de_laboratoire_d_analyse_medicale",
                            ),
                            ("FR6576", "SCP_de_veterinaires"),
                            ("FR6577", "SCP_de_geometres_experts"),
                            ("FR6578", "SCP_d_architectes"),
                            ("FR6585", "Autre_societe_civile_professionnelle"),
                            ("FR6588", "Societe_civile_laitiere"),
                            ("FR6589", "Societe_civile_de_moyens"),
                            ("FR6595", "Caisse_locale_de_credit_mutuel"),
                            ("FR6596", "Caisse_de_credit_agricole_mutuel"),
                            ("FR6597", "Societe_civile_d_exploitation_agricole"),
                            (
                                "FR6598",
                                "Exploitation_agricole_a_responsabilite_limitee",
                            ),
                            ("FR6599", "Autre_societe_civile"),
                            (
                                "FR6901",
                                "Autre_personne_de_droit_prive_inscrite_au_registre_du_commerce_et_des_societes",
                            ),
                            ("FR7111", "Autorite_constitutionnelle"),
                            ("FR7112", "Autorite_administrative_independante"),
                            ("FR7113", "Ministere"),
                            ("FR7120", "Service_central_d_un_ministere"),
                            ("FR7150", "Service_du_ministere_de_la_Defense"),
                            (
                                "FR7160",
                                "Service_deconcentre_a_competence_nationale_d_un_ministere_hors_Defense_",
                            ),
                            (
                                "FR7171",
                                "Service_deconcentre_de_l_Etat_a_competence_inter_regionale",
                            ),
                            (
                                "FR7172",
                                "Service_deconcentre_de_l_Etat_a_competence_inter_departementale",
                            ),
                            (
                                "FR7179",
                                "_Autre_Service_deconcentre_de_l_Etat_a_competence_territoriale",
                            ),
                            (
                                "FR7190",
                                "Ecole_nationale_non_dotee_de_la_personnalite_morale",
                            ),
                            ("FR7210", "Commune_et_commune_nouvelle"),
                            ("FR7220", "Departement"),
                            ("FR7225", "Collectivite_et_territoire_d_Outre_Mer"),
                            ("FR7229", "_Autre_Collectivite_territoriale"),
                            ("FR7230", "Region_x2"),
                            ("FR7312", "Commune_associee_et_commune_deleguee"),
                            ("FR7313", "Section_de_commune"),
                            ("FR7314", "Ensemble_urbain"),
                            ("FR7321", "Association_syndicale_autorisee"),
                            ("FR7322", "Association_fonciere_urbaine"),
                            ("FR7323", "Association_fonciere_de_remembrement"),
                            ("FR7331", "Etablissement_public_local_d_enseignement"),
                            ("FR7340", "Pole_metropolitain"),
                            ("FR7341", "Secteur_de_commune"),
                            ("FR7342", "District_urbain"),
                            ("FR7343", "Communaute_urbaine"),
                            ("FR7344", "Metropole"),
                            ("FR7345", "Syndicat_intercommunal_a_vocation_multiple"),
                            ("FR7346", "Communaute_de_communes"),
                            ("FR7347", "Communaute_de_villes"),
                            ("FR7348", "Communaute_d_agglomeration"),
                            (
                                "FR7349",
                                "Autre_etablissement_public_local_de_cooperation_non_specialise_ou_entente",
                            ),
                            ("FR7351", "Institution_interdepartementale_ou_entente"),
                            ("FR7352", "Institution_interregionale_ou_entente"),
                            ("FR7353", "Syndicat_intercommunal_a_vocation_unique"),
                            ("FR7354", "Syndicat_mixte_ferme"),
                            ("FR7355", "Syndicat_mixte_ouvert"),
                            (
                                "FR7356",
                                "Commission_syndicale_pour_la_gestion_des_biens_indivis_des_communes",
                            ),
                            ("FR7357", "Pole_d_equilibre_territorial_et_rural"),
                            ("FR7361", "Centre_communal_d_action_sociale"),
                            ("FR7362", "Caisse_des_ecoles"),
                            ("FR7363", "Caisse_de_credit_municipal"),
                            ("FR7364", "Etablissement_d_hospitalisation"),
                            ("FR7365", "Syndicat_inter_hospitalier"),
                            (
                                "FR7366",
                                "Etablissement_public_local_social_et_medico_social",
                            ),
                            ("FR7367", "Centre_Intercommunal_d_action_sociale"),
                            ("FR7371", "Office_public_d_habitation_a_loyer_modere"),
                            (
                                "FR7372",
                                "Service_departemental_d_incendie_et_de_secours",
                            ),
                            ("FR7373", "Etablissement_public_local_culturel"),
                            (
                                "FR7378",
                                "Regie_d_une_collectivite_locale_a_caractere_administratif",
                            ),
                            (
                                "FR7379",
                                "_Autre_Etablissement_public_administratif_local",
                            ),
                            ("FR7381", "Organisme_consulaire"),
                            (
                                "FR7382",
                                "Etablissement_public_national_ayant_fonction_d_administration_centrale",
                            ),
                            (
                                "FR7383",
                                "Etablissement_public_national_a_caractere_scientifique_culturel_et_professionnel",
                            ),
                            (
                                "FR7384",
                                "Autre_etablissement_public_national_d_enseignement",
                            ),
                            (
                                "FR7385",
                                "Autre_etablissement_public_national_administratif_a_competence_territoriale_limitee",
                            ),
                            (
                                "FR7389",
                                "Etablissement_public_national_a_caractere_administratif",
                            ),
                            ("FR7410", "Groupement_d_interet_public"),
                            (
                                "FR7430",
                                "Etablissement_public_des_cultes_d_Alsace_Lorraine",
                            ),
                            (
                                "FR7450",
                                "Etablissement_public_administratif_cercle_et_foyer_dans_les_armees",
                            ),
                            (
                                "FR7470",
                                "Groupement_de_cooperation_sanitaire_a_gestion_publique",
                            ),
                            ("FR7490", "Autre_personne_morale_de_droit_administratif"),
                            ("FR8110", "Regime_general_de_la_Securite_Sociale"),
                            ("FR8120", "Regime_special_de_Securite_Sociale"),
                            ("FR8130", "Institution_de_retraite_complementaire"),
                            ("FR8140", "Mutualite_sociale_agricole"),
                            ("FR8150", "Regime_maladie_des_non_salaries_non_agricoles"),
                            ("FR8210", "Mutuelle"),
                            (
                                "FR8160",
                                "Regime_vieillesse_ne_dependant_pas_du_regime_general_de_la_Securite_Sociale",
                            ),
                            ("FR8170", "Regime_d_assurance_chomage"),
                            ("FR8190", "Autre_regime_de_prevoyance_sociale"),
                            ("FR8250", "Assurance_mutuelle_agricole"),
                            ("FR8290", "Autre_organisme_mutualiste"),
                            (
                                "FR8310",
                                "Comite_social_et_economique_central_d_entreprise",
                            ),
                            ("FR8311", "Comite_social_et_economique_d_etablissement"),
                            ("FR8410", "Syndicat_de_salaries"),
                            ("FR8420", "Syndicat_patronal"),
                            ("FR8450", "Ordre_professionnel_ou_assimile"),
                            (
                                "FR8470",
                                "Centre_technique_industriel_ou_comite_professionnel_du_developpement_economique",
                            ),
                            ("FR8490", "Autre_organisme_professionnel"),
                            ("FR8510", "Institution_de_prevoyance_x2"),
                            ("FR8520", "Institution_de_retraite_supplementaire"),
                            ("FR9110", "Syndicat_de_copropriete"),
                            ("FR9150", "Association_syndicale_libre"),
                            ("FR9210", "Association_non_declaree_x2"),
                            ("FR9220", "Association_declaree_x2"),
                            (
                                "FR9221",
                                "Association_declaree_d_insertion_par_l_economique",
                            ),
                            ("FR9222", "Association_intermediaire"),
                            ("FR9223", "Groupement_d_employeurs"),
                            (
                                "FR9224",
                                "Association_d_avocats_a_responsabilite_professionnelle_individuelle",
                            ),
                            (
                                "FR9230",
                                "Association_declaree_reconnue_d_utilite_publique",
                            ),
                            ("FR9240", "Congregation"),
                            (
                                "FR9260",
                                "Association_de_droit_local_Bas_Rhin_Haut_Rhin_et_Moselle_",
                            ),
                            ("FR9300", "Fondation"),
                            ("FR9900", "Autre_personne_morale_de_droit_prive"),
                            (
                                "FR9970",
                                "Groupement_de_cooperation_sanitaire_a_gestion_privee",
                            ),
                            ("GB100", "Corporations"),
                            ("GB200", "Cooperatives"),
                            ("GB300", "Partnerships"),
                            ("GB400", "Sole_traders"),
                            ("GB500", "Limited_liability_company"),
                            ("GB600", "Other_legal_form"),
                            ("GR901", "Astike_Etaireia_Astiki_Eteria"),
                            ("GR902", "Omorruthme_Etaireia_Omorithmi_Eteria"),
                            ("GR903", "Eterorruthme_Etaireia_Eterorithmi_Eteria"),
                            ("GR904", "Aphanes_Etaireia_Afanis_Eteria"),
                            ("GR905", "Anonume_Etaireia_Anonimi_Eteria"),
                            (
                                "GR906",
                                "Etaireia_Periorismenes_Euthunes_Eteria_Periorismenis_Euthinis",
                            ),
                            (
                                "GR907",
                                "Idiotike_Kephalaioukhike_Etaireia_Idiotiki_kefaleouhiki_Eteria",
                            ),
                            ("GR908", "Sumploioktesia_Simplioktisia"),
                            ("GR909", "Nautike_etairia_Naftiki_eteria"),
                            ("GR910", "Sunetairismos_Sinetairismos"),
                            ("GR911", "Somateia_Idrumata_Somatia_Idrimata"),
                            ("GR912", "Koinopraxia_Kinopraxia"),
                            (
                                "GR913",
                                "Nomika_Prosopa_Demosiou_Dikaiou_Nomika_Prosopa_Dimosiou_Dikeou",
                            ),
                            ("GR999", "Loipa_Lipa_"),
                            ("HR01", "Dionicko_drustvo"),
                            ("HR02", "Drustvo_s_ogranicenom_odgovornoscu"),
                            ("HR03", "Javno_trgovacko_drustvo"),
                            ("HR04", "Komanditno_drustvo"),
                            (
                                "HR05",
                                "Inozemni_osnivac_Podruznice_inozemnih_trgovackih_drustava",
                            ),
                            ("HR06", "Ustanova"),
                            ("HR07", "Nedefinirano_Ostalo"),
                            ("HR08", "Jednostavno_drustvo_s_ogranicenom_odgovornoscu"),
                            ("HR09", "Druga_osoba_za_koje_je_upis_propisan_zakonom"),
                            ("HR10", "Drustvene_organizacije"),
                            ("HR13", "Fondovi"),
                            ("HR14", "Fundacije"),
                            ("HR15", "Gospodarska_udruzenja"),
                            ("HR16", "Gospodarsko_interesno_udruzenje"),
                            ("HR17", "Grad"),
                            ("HR18", "Gradonacelnik"),
                            ("HR19", "Gradsko_poglavarstvo"),
                            ("HR20", "Gradsko_vijece"),
                            ("HR21", "Hrvatska_narodna_banka"),
                            ("HR22", "Hrvatski_sabor"),
                            ("HR23", "Investicijski_i_mirovinski_fondovi"),
                            (
                                "HR25",
                                "Ministarstva_i_ostali_samostalni_organi_drzavne_uprave",
                            ),
                            ("HR26", "Mirovinski_fondovi"),
                            ("HR27", "Mjesni_odbor_gradski_kotar_i_gradska_cetvrt"),
                            ("HR28", "Nenovcani_investicijski_fondovi"),
                            ("HR29", "Opcina"),
                            ("HR30", "Opcinski_nacelnik"),
                            ("HR31", "Opcinsko_poglavarstvo"),
                            ("HR32", "Opcinsko_vijece"),
                            ("HR34", "Ostale_organizacije"),
                            ("HR35", "Ostali_oblici_organiziranja"),
                            ("HR37", "Politicke_stranke"),
                            ("HR38", "Pravosude"),
                            ("HR39", "Predsjednik_Republike_Hrvatske"),
                            ("HR40", "Privatno_poduzece"),
                            ("HR42", "Republika_Hrvatska"),
                            ("HR44", "Strucne_sluzbe_uredi_i_druga_tijela"),
                            ("HR45", "Sportsko_dionicko_drustvo"),
                            ("HR47", "Udruga"),
                            ("HR48", "Udruge_gradana"),
                            ("HR49", "Udruge_vise_razine"),
                            ("HR51", "Ustavni_sud_Republike_Hrvatske"),
                            ("HR52", "Vlada_Republike_Hrvatske"),
                            ("HR53", "Zadruga"),
                            ("HR55", "Zajednica_ustanova"),
                            ("HR57", "Zaklade"),
                            ("HR58", "Zupan"),
                            ("HR59", "Zupanija"),
                            ("HR60", "Zupanijska_skupstina"),
                            ("HR61", "Zupanijsko_poglavarstvo"),
                            ("HR62", "Novcani_investicijski_fondovi"),
                            ("HU113", "Korlatolt_felelossegu_tarsasag"),
                            ("HU114", "Reszvenytarsasag"),
                            ("HU116", "Kozkereseti_tarsasag"),
                            ("HU117", "Beteti_tarsasag"),
                            ("HU122", "Takarek_es_hitelszovetkezet"),
                            ("HU129", "Egyeb_szovetkezet"),
                            ("HU226", "Kulfoldi_szekhelyu_vallalkozas_fioktelepe"),
                            ("HU524", "Kolcsonos_biztosito_egyesulet"),
                            ("HU529", "Egyeb_egyesulet"),
                            ("HU581", "Onkentes_kolcsonos_biztositopenztar"),
                            ("HU582", "Magannyugdijpenztar"),
                            (
                                "HU611",
                                "Kulfoldi_szekhelyu_vallalkozas_kereskedelmi_kepviselete",
                            ),
                            ("HU736", "Kozhasznu_tarsasag"),
                            ("HU915", "Befektetesi_alap"),
                            ("HU916", "Orszagos_betetbiztositasi_alap"),
                            ("HU999", "Egyeb_jogi_forma"),
                            ("IE01", "Private_Company_Limited_by_Shares_LTD_company_"),
                            (
                                "IE02",
                                "Designated_Activity_Company_DAC__limited_by_shares_",
                            ),
                            (
                                "IE03",
                                "Designated_Activity_Company_Limited_by_Guarantee_DAC__limited_by_guarantee_",
                            ),
                            (
                                "IE04",
                                "Company_Limited_by_Guarantee_CLG_limited_by_guarantee_not_having_a_share_capital_",
                            ),
                            ("IE05", "Public_Limited_Company_PLC_"),
                            ("IE06", "Single_Member_Company"),
                            ("IE07", "Unlimited_company_"),
                            (
                                "IE08",
                                "Undertakings_for_Collective_Investment_in_Transferable_Securities_UCITS__",
                            ),
                            ("IE11", "Industrial_and_Provident_Society"),
                            ("IE12", "Friendly_Society"),
                            ("IE13", "Trade_union"),
                            ("IE14", "Local_authority"),
                            ("IE15", "Statutory_corporation"),
                            ("IE16", "Other_legal_form_x2"),
                            ("IT101", "PUBBLICA_AMMINISTRAZIONE"),
                            ("IT201", "SOCIETA_IN_NOME_COLLETTIVO"),
                            ("IT301", "SOCIETA_IN_ACCOMANDITA_SEMPLICE"),
                            ("IT401", "SOCIETA_SEMPLICE"),
                            ("IT402", "SOCIETA_DI_FATTO"),
                            ("IT501", "CONSORZIO"),
                            ("IT601", "SOCIETA_COOPERATIVA"),
                            ("IT701", "SOCIETA_PER_AZIONI"),
                            ("IT702", "SOCIETA_IN_ACCOMANDITA_PER_AZIONI"),
                            ("IT703", "SOCIETA_A_RESPONSABILITA_LIMITATA"),
                            ("IT999", "Altra_specie_giuridica"),
                            ("LT101", "Akcine_bendrove"),
                            ("LT102", "Uzdaroji_akcine_bendrove"),
                            ("LT103", "Kooperatine_bendrove_kooperatyvas_"),
                            ("LT104", "Tikroji_ukine_bendrija"),
                            ("LT105", "Komanditine_ukine_bendrija"),
                            ("LT106", "Asociacija"),
                            ("LT107", "Mazoji_bendrija"),
                            ("LT108", "Zemes_ukio_bendrove"),
                            ("LT109", "Individuali_imone"),
                            ("LT110", "Advokatu_profesine_bendrija"),
                            ("LT111", "Privaciu_detektyvu_bendrija"),
                            ("LT201", "Valstybes_imone"),
                            ("LT202", "Savivaldybes_imone"),
                            ("LT203", "Viesoji_istaiga"),
                            ("LT204", "Biudzetine_istaiga"),
                            ("LT205", "Labdaros_ir_paramos_fondas"),
                            ("LT206", "Bendrija"),
                            ("LT207", "Sodininku_bendrija"),
                            ("LT208", "Politine_partija"),
                            ("LT209", "Tradicine_religine_bendruomene_ar_bendrija"),
                            ("LT210", "Religine_bendruomene_ar_bendrija"),
                            ("LT211", "Profesine_sajunga_ar_susivienijimas"),
                            ("LT212", "Nuolatine_komercinio_arbitrazo_institucija"),
                            ("LT213", "Seimyna"),
                            ("LT214", "Prekybos_pramones_ir_amatu_rumai"),
                            (
                                "LT215",
                                "Lietuvos_prekybos_pramones_ir_amatu_rumu_asociacija",
                            ),
                            ("LT216", "Bendras_valdymo_ir_pranesimu_centras"),
                            ("LT301", "Centrinis_bankas"),
                            ("LU01", "EI_Entreprise_individuelle"),
                            ("LU02", "SENC_Societe_en_nom_collectif"),
                            ("LU03", "Societe_a_responsabilite_limitee"),
                            ("LU04", "Societe_a_responsabilite_limitee_simplifiee"),
                            ("LU05", "Societe_en_commandite_simple_x3"),
                            ("LU06", "Societe_en_commandite_speciale"),
                            ("LU07", "Societe_anonyme"),
                            ("LU08", "Societe_en_commandite_par_actions_x2"),
                            ("LU09", "Societe_d_investissement_a_capital_variable"),
                            ("LU10", "Societe_d_investissement_a_capital_fixe_x2"),
                            ("LU11", "Societe_d_epargne_pension_a_capital_variable"),
                            ("LU12", "Societe_cooperative"),
                            ("LU13", "Societe_civile_x2"),
                            ("LU14", "AM_Association_momentanee"),
                            ("LU15", "Groupement_d_interet_economique_x2"),
                            ("LU16", "Association_sans_but_lucratif"),
                            ("LU17", "Fondation_x2"),
                            ("LU18", "Association_d_epargne_pension"),
                            ("LU19", "Association_d_assurances_mutuelles"),
                            ("LU20", "Association_agricole"),
                            ("LU21", "Etablissement_public"),
                            ("LU22", "Societe_en_nom_collectif_x2"),
                            ("LU23", "SSC_Succursale_de_societe_commerciale"),
                            (
                                "LU24",
                                "SSARLS_Succursale_de_societe_a_responsabilite_limitee_simplifiee",
                            ),
                            ("LU26", "Fonds_commun_de_placement"),
                            ("LU27", "Fonds_d_investissement_alternatif_reserve"),
                            ("LU32", "Autres_Formes_juridiques"),
                            ("LU33", "Secteur_public"),
                            ("LU34", "Societe_d_investissement_a_capital_risque"),
                            ("LV101", "Akciju_sabiedriba"),
                            ("LV103", "Sabiedriba_ar_ierobezotu_atbildibu"),
                            ("LV104", "Valsts_uznemums"),
                            ("LV105", "Pasvaldibas_uznemums"),
                            ("LV106", "Uznemejsabiedribas_uznemums"),
                            ("LV107", "Pilnsabiedriba"),
                            ("LV108", "Komanditsabiedriba"),
                            ("LV109", "Ligumsabiedriba_ar_pilnu_atbildibu"),
                            ("LV110", "Paju_sabiedriba"),
                            ("LV111", "Sabiedriba_ar_papildu_atbildibu"),
                            ("LV301", "Gimenes_uznemums"),
                            ("LV302", "IK_Individualais_komersants"),
                            ("LV303", "Individualais_uznemums"),
                            ("LV401", "Kooperativa_sabiedriba"),
                            ("LV402", "Kooperativo_biedribu_savieniba"),
                            ("LV403", "Kooperativo_biedribu_uznemums"),
                            ("LV404", "Kooperativo_biedribu_savienibas_uznemums"),
                            ("LV405", "Zemnieku_saimnieciba"),
                            ("LV406", "Zvejnieku_saimnieciba"),
                            ("LV701", "Publiskas_personas_un_iestades"),
                            ("LV801", "Religiskas_organizacijas_uznemums"),
                            ("LV802", "Sabiedriskas_organizacijas_uznemums"),
                            ("LV901", "AKF_Arzemju_komersanta_filiale"),
                            ("LV903", "Parstavnieciba"),
                            ("MT010", "Sole_proprietor"),
                            ("MT020", "En_commandite"),
                            ("MT021", "En_nom_collectif"),
                            ("MT030", "Limited"),
                            ("MT031", "OC_Overseas_Company"),
                            (
                                "MT033",
                                "SICAV_Societe_d_Investissement_a_Capital_Variable_",
                            ),
                            ("MT040", "Voluntary_Non_for_profit_Organisations"),
                            ("MT050", "General_Government"),
                            ("MT060", "Public_limited_company"),
                            ("MT070", "Corporations_x2"),
                            ("MT080", "Cooperatives_x2"),
                            ("NL101", "Besloten_vennootschap"),
                            ("NL102", "Naamloze_vennootschap"),
                            (
                                "NL11",
                                "CVA_Commanditaire_Vennootschap_met_rechtspersoonlijkheid",
                            ),
                            ("NL201", "Cooperatie"),
                            ("NL202", "Onderlinge_waarborgmaatschappij"),
                            ("NL203", "Vereniging"),
                            ("NL204", "Vereniging_van_eigenaars"),
                            ("NL205", "Kerkgenootschap"),
                            ("NL206", "Stichting"),
                            ("NL207", "Overige_rechtsvorm"),
                            ("NL301", "Eenmanszaak"),
                            ("NL302", "Maatschap"),
                            ("NL303", "CV_Commanditaire_vennootschap"),
                            ("NL304", "VOF_Vennootschap_onder_firma"),
                            (
                                "NL401",
                                "Publiekrechtelijke_rechtspersonen_op_basis_van_artikel_2_1_lid_1_BW",
                            ),
                            (
                                "NL402",
                                "Publiekrechtelijke_rechtspersonen_op_basis_van_artikel_2_1_lid_2_BW",
                            ),
                            ("NL501", "Rederij"),
                            ("NL7", "BA_Cooperatie_met_Beperkte_Aansprakelijkheid"),
                            ("NL901", "Rechtspersoon_in_oprichting"),
                            ("NL9", "COV_Cooperatieve_Vereniging"),
                            ("NTRL_PRSN", "Natural_person"),
                            ("PLA019", "spolki_cywilne"),
                            ("PLA044", "uczelnie"),
                            ("PLA070", "partie_polityczne"),
                            ("PLA085", "wspolnoty_mieszkaniowe"),
                            (
                                "PLA099",
                                "osoby_fizyczne_prowadzace_dzialalnosc_gospodarcza",
                            ),
                            ("PLA115", "spolki_partnerskie"),
                            ("PLA116", "spolki_akcyjne"),
                            ("PLA117", "spolki_z_ograniczona_odpowiedzialnoscia"),
                            ("PLA118", "spolki_jawne"),
                            ("PLA120", "spolki_komandytowe"),
                            ("PLA121", "spolki_komandytowo_akcyjne"),
                            ("PLA124", "przedsiebiorstwa_panstwowe"),
                            ("PLA126", "towarzystwa_ubezpieczen_wzajemnych"),
                            ("PLA132", "instytucje_gospodarki_budzetowej"),
                            ("PLA134", "towarzystwa_reasekuracji_wzajemnej"),
                            ("PLA140", "spoldzielnie"),
                            (
                                "PLA146",
                                "samodzielne_publiczne_zaklady_opieki_zdrowotnej",
                            ),
                            ("PLA148", "fundacje"),
                            ("PLA177", "kolka_rolnicze"),
                            ("PLA180", "spoldzielcze_kasy_oszczednosciowo_kredytowe"),
                            ("PLA403", "wspolnoty_samorzadowe"),
                            ("PLA409", "Skarb_Panstwa"),
                            ("PLA428", "panstwowe_jednostki_organizacyjne"),
                            ("PLB050", "koscioly_i_zwiazki_wyznaniowe"),
                            ("PLB055", "stowarzyszenia_i_zwiazki_stowarzyszen"),
                            ("PLB060", "organizacje_spoleczne_i_zawodowe"),
                            ("PLB133", "zwiazki_zawodowe"),
                            ("PLB137", "zrzeszenia"),
                            ("PLB138", "zwiazki_inne_niz_zawodowe"),
                            ("PLB141", "instytuty_badawcze"),
                            ("PLB147", "cechy_i_izby_rzemieslnicze_izby_gospodarcze"),
                            ("PLB381", "placowki_systemu_oswiaty"),
                            (
                                "PLB401",
                                "organy_wladzy_administracji_rzadowej_kontroli_panstwowej_i_ochrony_prawa_oraz_sady_i_trybunaly",
                            ),
                            ("PLB429", "samorzadowe_jednostki_organizacyjne"),
                            ("PLC049", "fundusze_inwestycyjne"),
                            ("PLD049", "otwarte_fundusze_emerytalne"),
                            (
                                "PLE049",
                                "fundusze_inne_niz_inwestycyjne_i_inne_niz_otwarte_fundusze_emerytalne",
                            ),
                            ("PT111", "Agrupamento_Complementar_de_Empresas_ACE_"),
                            ("PT121", "Sociedade_por_Quotas"),
                            ("PT122", "Sociedade_Unipessoal_Por_Quotas"),
                            ("PT131", "Sociedade_Anonima"),
                            ("PT141", "Sociedades_em_Comandita"),
                            ("PT151", "Sociedades_em_Nome_Coletivo"),
                            ("PT171", "Sociedade_Civil"),
                            ("PT181", "Sociedade_Irregular"),
                            (
                                "PT182",
                                "Estabelecimento_Individual_de_Responsabilidade_Limitada",
                            ),
                            ("PT211", "Cooperativa"),
                            ("PT221", "Associacao"),
                            ("PT231", "Fundacao"),
                            ("PT311", "Entidade_Publica_Empresarial"),
                            ("PT312", "Pessoa_Coletiva_de_Direito_Publico"),
                            (
                                "PT321",
                                "Entidade_Publica_Municipal_Intermunicipal_e_Regional",
                            ),
                            ("PT331", "Organismo_da_Administracao_Publica"),
                            ("PT411", "Pessoa_Colectiva_Religiosa"),
                            ("PT711", "Fundos"),
                            ("PT901", "Organizacoes_Internacionais"),
                            ("RO101", "Societate_pe_actiuni"),
                            ("RO102", "Societate_cu_raspundere_limitata"),
                            ("RO103", "Societate_in_comandita_simpla"),
                            ("RO104", "Societate_in_comandita_pe_actiuni"),
                            ("RO105", "Alte_forme_de_proprietate"),
                            ("RO107", "Organizatie_non_guvernamentala"),
                            ("RO108", "Societate_in_nume_colectiv"),
                            ("RO110", "Regie_autonoma"),
                            ("RO111", "Grupul_de_interes_economic"),
                            ("RO114", "Cooperativa_de_consum"),
                            ("RO115", "Cooperativa_de_credit"),
                            ("RO116", "Cooperativa_mestesugareasca"),
                            ("RO117", "Reprezentanta"),
                            ("RO120", "Sucursala"),
                            ("RO121", "Reprezentant_fiscal"),
                            ("RO122", "Societate_agricola"),
                            ("RW100", "Corporations_x3"),
                            ("RW200", "Cooperatives_x3"),
                            ("RW300", "Partnerships_x2"),
                            ("RW400", "Sole_traders_x2"),
                            ("RW500", "Limited_liability_company_x2"),
                            ("RW600", "Other_legal_form_x3"),
                            ("SE21", "Enkelt_bolag"),
                            ("SE22", "Partrederier"),
                            ("SE31", "Handelsbolag_kommanditbolag_HB_KB_"),
                            ("SE41", "Bankaktiebolag_AB_"),
                            ("SE42", "Forsakringsaktiebolag_AB_"),
                            ("SE49", "Ovriga_aktiebolag_AB_"),
                            ("SE51", "Ekonomisk_forening_Ek_for_"),
                            ("SE53", "Bostadsrattsforening_BRF_"),
                            ("SE54", "Kooperativ_hyresrattsforening"),
                            ("SE61", "Ideell_forening"),
                            ("SE62", "Samfalligheter"),
                            ("SE63", "Registrerat_trossamfund"),
                            ("SE71", "Familjestiftelser"),
                            (
                                "SE72",
                                "Ovriga_stiftelser_och_fonder_inkl_pensionsstiftelser_och_personalstiftelser",
                            ),
                            ("SE81", "Statliga_enheter"),
                            ("SE82", "Kommuner"),
                            ("SE83", "Kommunalforbund"),
                            ("SE84", "Landsting"),
                            ("SE87", "Offentliga_korporationer_och_anstalter"),
                            ("SE88", "Hypoteksforeningar"),
                            ("SE91", "Oskiftade_dodsbon"),
                            ("SE92", "Omsesidiga_forsakringsbolag"),
                            ("SE93", "Sparbanker_Spb_"),
                            ("SE94", "Understodsforeningar_Forsakringsforeningar"),
                            ("SE95", "Arbetsloshetskassor"),
                            (
                                "SE98",
                                "Ovriga_svenska_juridiska_personer_bildade_enligt_sarskild_lagstiftning",
                            ),
                            ("SI101", "Druzba_z_neomejeno_odgovornostjo_d_n_o_"),
                            ("SI102", "Komanditna_druzba_k_d_"),
                            ("SI103", "Druzba_z_omejeno_odgovornostjo_d_o_o_"),
                            ("SI104", "Delniska_druzba_d_d_"),
                            ("SI105", "Komanditna_delniska_druzba_k_d_d_"),
                            ("SI108", "Gospodarsko_interesno_zdruzenje_GIZ"),
                            ("SI112", "Zadruga_z_o_o_"),
                            ("SI113", "Zadruga_z_b_o_"),
                            ("SI201", "Centralna_banka"),
                            ("SI210", "Sklad"),
                            ("SI211", "Druzba_za_vzajemno_zavarovanje_d_v_z_"),
                            ("SI213", "Javni_sklad"),
                            ("SI300", "Javna_agencija"),
                            ("SI301", "Republika_Slovenija"),
                            ("SI302", "Predsednik_republike"),
                            ("SI303", "Predstavniski_organ_DZ_DS_"),
                            ("SI304", "Varuh_clovekovih_pravic"),
                            ("SI305", "Ustavno_sodisce"),
                            ("SI306", "Racunsko_sodisce"),
                            ("SI307", "Vlada_vladna_sluzba"),
                            ("SI308", "Ministrstvo"),
                            ("SI309", "Sodisce_vrhovno_visja_okrozna_okrajna_"),
                            ("SI310", "Tozilstvo"),
                            ("SI311", "Pravobranilstvo"),
                            ("SI313", "Upravni_organ_v_sestavi"),
                            ("SI315", "Upravna_enota"),
                            ("SI316", "Organ_organizacija_sirse_lokalne_skupnosti"),
                            ("SI318", "Lokalne_skupnosti"),
                            ("SI319", "Krajevna_skupnost_druge_ozje_lokalne_skupnosti"),
                            (
                                "SI321",
                                "Pooblascenec_za_dostop_do_informacij_javnega_znacaja",
                            ),
                            ("SI322", "Samostojni_in_neodvisni_drzavni_organ"),
                            ("SI352", "Javni_gospodarski_zavod"),
                            ("SI354", "Zavod"),
                            ("SI355", "Javni_zavod"),
                            ("SI357", "Skupnost_zavodov"),
                            ("SI358", "Zbornica"),
                            ("SI359", "Clanica_univerze"),
                            ("SI360", "Gospodarska_zbornica"),
                            ("SI361", "Javni_raziskovalni_zavod"),
                            ("SI362", "Skupnost_lastnikov_stanovanj"),
                            ("SI401", "Ustanova_x2"),
                            ("SI402", "Agrarne_pasne_in_vaske_skupnosti"),
                            ("SI403", "Druge_skupnosti"),
                            ("SI404", "Mladinski_svet"),
                            ("SI405", "Narodnostna_skupnost"),
                            ("SI406", "Studentska_organizacija"),
                            ("SI407", "Nevladna_organizacija"),
                            ("SI451", "Politicna_stranka"),
                            ("SI452", "Sindikat"),
                            ("SI453", "Drustvo_zveza_drustev"),
                            ("SI458", "Verska_skupnost_in_podobne_verske_organizacije"),
                            ("SI703", "Obrtna_zadruga"),
                            ("SI708", "Kmetijska_zadruga"),
                            ("SI713", "zavod_v_zaseb_last_"),
                            ("SI715", "Druzbeno_podj_p_o_"),
                            ("SI719", "zadruga_x2"),
                            ("SI799", "Druge_oblike_poslovnih_subjektov"),
                            ("SI804", "Poslovna_enota"),
                            ("SI899", "Druge_oblike_delov_poslovnih_subjektov"),
                            ("SK111", "Verejna_obchodna_spolocnost"),
                            ("SK112", "Spolocnost_s_rucenim_obmedzenym"),
                            ("SK119", "Neziskova_organizacia"),
                            ("SK113", "Komanditna_spolocnost"),
                            ("SK117", "Nadacia"),
                            ("SK118", "Neinvesticny_fond"),
                            (
                                "SK120",
                                "Neziskova_organizacia_poskytujuca_vseobecne_prospesne_sluzby",
                            ),
                            ("SK121", "Akciova_spolocnost"),
                            ("SK125", "Jednoducha_spolocnost_na_akcie"),
                            ("SK205", "Druzstvo_x2"),
                            (
                                "SK271",
                                "Spolocenstvo_vlastnikov_bytov_a_nebytovych_priestorov",
                            ),
                            ("SK301", "Statny_podnik"),
                            ("SK311", "Narodna_banka_Slovenska"),
                            ("SK312", "Banka_statny_penazny_ustav"),
                            ("SK321", "Rozpoctova_organizacia"),
                            ("SK331", "Prispevkova_organizacia"),
                            ("SK333", "Verejna_vyskumna_institucia"),
                            ("SK381", "Fondy"),
                            ("SK382", "Verejnopravna_institucia"),
                            ("SK383", "Ina_organizacia_verejnej_spravy"),
                            (
                                "SK421",
                                "Zahranicna_osoba_pravnicka_osoba_so_sidlom_mimo_uzemia_SR",
                            ),
                            ("SK434", "Doplnkova_dochodkova_poistovna"),
                            ("SK445", "Komoditna_burza"),
                            ("SK701", "Zdruzenie_zvaz_spolok_spolocnost_klub_ai_"),
                            ("SK711", "Politicka_strana_politicke_hnutie"),
                            ("SK721", "Cirkevna_organizacia"),
                            ("SK741", "Stavovska_organizacia_profesna_komora"),
                            ("SK745", "Komora_s_vynimkou_profesnych_komor_"),
                            ("SK751", "Zaujmove_zdruzenie_pravnickych_osob"),
                            ("SK801", "Obec_obecny_urad_mesto_mestsky_urad_"),
                            ("SK803", "Samospravny_kraj_urad_samospravneho_kraja_"),
                            ("SK901", "Zastupitelske_organy_inych_statov"),
                            (
                                "SK911",
                                "Zahranicne_kulturne_informacne_stredisko_rozhlasova_tlacova_a_televizna_agentura",
                            ),
                            ("SK921", "Medzinarodne_organizacie_a_zdruzenia"),
                            ("SK931", "Zastupenie_zahranicnej_pravnickej_osoby"),
                            ("SPFUND", "Conventional_legal_form_for_Special_funds"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Legal_form",
                    ),
                ),
                (
                    "LGL_PRCDNG_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "No_legal_actions_taken"),
                            (
                                "2",
                                "Under_judicial_administration_receivership_or_similar_measures",
                            ),
                            ("3", "Bankruptcy_insolvency"),
                            ("4", "Other_legal_measures"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Legal_proceeding_status",
                    ),
                ),
                (
                    "LSTD_CNTRL_BNK_PRVT_SCTR_CMPNY_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("F", "FALSE"),
                            ("T", "TRUE"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Listed_central_bank_and_private_sector_company_indicator",
                    ),
                ),
                (
                    "MLTLTRL_DVLPMNT_BNK_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Multilateral_development_bank"),
                            ("2", "Not_a_Multilateral_development_bank"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Multilateral_development_bank_indicator",
                    ),
                ),
                (
                    "MRKT_CPTLSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_Applicable"),
                            ("1", "Large_Market_Capitalisation"),
                            ("2", "Small_Market_Capitalisation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Market_capitalisation_indicator",
                    ),
                ),
                (
                    "ORGNSTN_TYP_BY_PRCDNG_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("46", "Leading_branch"),
                            ("47", "Non_leading_branch"),
                            ("14", "Organisation_without_legal_proceeding"),
                            ("15", "Organisation_with_legal_proceeding"),
                            ("18", "Non_self_employed_natural_person"),
                            ("19", "Self_employed_natural_person"),
                            ("32", "Branch"),
                            ("33", "Investment_vehicle_fund"),
                            ("34", "Other_organisational_unit"),
                            ("5", "Other_financial_corporation"),
                            ("6", "Central_government"),
                            (
                                "7",
                                "State_and_local_government_and_Social_security_funds",
                            ),
                            ("9", "International_organisation"),
                            ("S11", "Non_financial_corporation"),
                            ("S122_A", "Credit_institution"),
                            ("37", "European_Central_Bank"),
                            (
                                "38",
                                "Central_Bank_that_is_not_the_European_Central_Bank",
                            ),
                            (
                                "36",
                                "Central_bank_and_private_sector_company_other_than_corporation",
                            ),
                            ("25", "Domestic_Branch"),
                            ("26", "Foreign_Branch"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Organisation_type_by_legal_proceeding_status",
                    ),
                ),
                (
                    "PLLNG_EFFCT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Pulling_effect"),
                            ("2", "Not_pulling_effect"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Pulling_effect_indicator",
                    ),
                ),
                (
                    "PRFRMNG_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Performing_status",
                    ),
                ),
                (
                    "PRFRMNG_STTS_RSN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Failed_reclassification_to_performing_at_end_of_probation_period",
                            ),
                            ("2", "Exited_from_NPE_in_the_last_12_months"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="The_reason_for_the_choice_of_Performing_status",
                    ),
                ),
                (
                    "PRTY_TYP_ADDRS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("100", "European_Union_member_party"),
                            ("101", "Non_European_Union_member_party"),
                            ("6", "No_registered_Postal_Code_system_party"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_type_by_address",
                    ),
                ),
                (
                    "TRRTRL_UNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Territorial_unit",
                    ),
                ),
                (
                    "TYP_ECNMY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_Applicable"),
                            ("1", "Emerging_market_economy"),
                            ("2", "Advanced_economy"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_economy",
                    ),
                ),
                (
                    "TYP_PRTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("46", "Leading_branch"),
                            ("47", "Non_leading_branch"),
                            ("14", "Organisation_without_legal_proceeding"),
                            ("15", "Organisation_with_legal_proceeding"),
                            ("18", "Non_self_employed_natural_person"),
                            ("19", "Self_employed_natural_person"),
                            ("32", "Branch"),
                            ("33", "Investment_vehicle_fund"),
                            ("34", "Other_organisational_unit"),
                            ("5", "Other_financial_corporation"),
                            ("6", "Central_government"),
                            (
                                "7",
                                "State_and_local_government_and_Social_security_funds",
                            ),
                            ("9", "International_organisation"),
                            ("S11", "Non_financial_corporation"),
                            ("S122_A", "Credit_institution"),
                            ("37", "European_Central_Bank"),
                            (
                                "38",
                                "Central_Bank_that_is_not_the_European_Central_Bank",
                            ),
                            (
                                "36",
                                "Central_bank_and_private_sector_company_other_than_corporation",
                            ),
                            ("25", "Domestic_Branch"),
                            ("26", "Foreign_Branch"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_Party",
                    ),
                ),
                (
                    "ANNL_TRNVR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Annual_turnover",
                    ),
                ),
                (
                    "BLNC_SHT_TTL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Balance_sheet_total",
                    ),
                ),
                (
                    "CTY",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="City",
                    ),
                ),
                (
                    "DT_INTTN_LGL_PRCDNGS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_initiation_of_legal_proceedings",
                    ),
                ),
                (
                    "FRST_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="First_name",
                    ),
                ),
                (
                    "LEI",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="LEI_code",
                    ),
                ),
                (
                    "LST_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Last_name",
                    ),
                ),
                (
                    "NM_ENTTY",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "NMBR_EMPLYS",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_employees",
                    ),
                ),
                (
                    "PD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Probability_of_default",
                    ),
                ),
                (
                    "PSTL_CD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Postal_code",
                    ),
                ),
                (
                    "STRT",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Street",
                    ),
                ),
                (
                    "the_BIRD_GRP_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_grp_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Party",
                "verbose_name_plural": "Partys",
            },
        ),
        migrations.AddField(
            model_name="bird_prty_cd_eil",
            name="the_BIRD_PRTY_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_prty_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_PRTNR_ENTRPRS_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_PRTNR_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTNR_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CNTR_BNK_PRVT_SCTR_CMPNY_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Central_bank_and_private_sector_company_Party_identifier",
                    ),
                ),
                (
                    "PRTNR_ENTRPRS_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Partner_enterprise_role_type",
                    ),
                ),
                (
                    "PRTNR_ENTRPRS_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Partner_enterprise_Party_identifier",
                    ),
                ),
                (
                    "VTNG_RGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Voting_rights_",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partner_enterprise_assignment",
                "verbose_name_plural": "Partner_enterprise_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_NTRL_PRSN_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_NTRL_PRSN_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_NTRL_PRSN_KY_MNGMNT_PRSNLL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "NTRL_PRSN_GRP_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Natural_person_group_role_type",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Natural_person_Key_management_personnel_assignment",
                "verbose_name_plural": "Natural_person_Key_management_personnel_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LNKD_ENTRPRS_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LNKD_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNKD_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CNTR_BNK_PRVT_SCTR_CMPNY_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Central_bank_and_private_sector_company_Party_identifier",
                    ),
                ),
                (
                    "LNKD_ENTRPRS_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Linked_enterprise_Party_role_type",
                    ),
                ),
                (
                    "LNKD_ENTRPRS_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Linked_enterprise_Party_identifier",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Linked_enterprise_assignment",
                "verbose_name_plural": "Linked_enterprise_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_IMMDT_PRNT_ENTRPRS_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_IMMDT_PRNT_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_IMMDT_PRNT_ENTRPRS_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "IMMDT_PRNT_CNTRL_BNK_PRVT_SCTR_CMPNY_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Immediate_parent_Central_bank_and_private_sector_company_Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "IMMDT_PRNT_ENTRPRS_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Immediate_parent_enterprise_Party_role_type",
                    ),
                ),
                (
                    "IMMDT_PRNT_ENTRPRS_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Immediate_parent_enterprise_Party_identifier",
                    ),
                ),
                (
                    "IMMDT_PRNT_RGLTN_867_2016_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Immediate_parent_according_to_AnaCredit"),
                            ("2", "Not_immediate_parent_according_to_AnaCredit"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Immediate_parent_according_to_AnaCredit_indicator",
                    ),
                ),
                (
                    "ACCMLTD_EQT_INTRST",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_equity_interest",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Immediate_parent_enterprise_assignment",
                "verbose_name_plural": "Immediate_parent_enterprise_assignments",
            },
        ),
        migrations.AddField(
            model_name="bird_entty_rl_eil",
            name="the_BIRD_PRTY_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_prty_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_PRTY_PRVS_PRD_DT_EIL",
            fields=[
                (
                    "BIRD_PRTY_PRVS_PRD_DT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_PRTY_PRVS_PRD_DT_EIL_uniqueID",
                    ),
                ),
                (
                    "YR",
                    models.DateTimeField(
                        blank=True, default=None, null=True, verbose_name="Year"
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Party_Reference_date",
                    ),
                ),
                (
                    "PRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_Reporting_agent_identifier",
                    ),
                ),
                (
                    "ENTRPRS_SZ_CLCLTD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Medium_enterprise"),
                            ("3", "Small_enterprise"),
                            ("4", "Micro_enterprise"),
                            ("6", "Large_enterprise_from_input_data_"),
                            ("7", "Large_enterprise_because_of_absence_of_input_data"),
                            ("1", "Large_enterprise"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Enterprise_size_calculated_",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Party_previous_period_data",
                "verbose_name_plural": "Party_previous_period_datas",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RPRCHS_AGRMNT_CMPNNT_EIL",
            fields=[
                (
                    "BIRD_RPRCHS_AGRMNT_CMPNNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RPRCHS_AGRMNT_CMPNNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_Reference_date",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_Reporting_agent_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_CMPNNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cash_leg"),
                            ("3", "Security_leg"),
                            ("4", "Loans_and_advances_leg"),
                            ("5", "Equity_instrument_leg"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_component_type",
                    ),
                ),
                (
                    "CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency",
                    ),
                ),
                (
                    "TRTMNT_TRNSFRRD_ASSTS_BLNC_SHT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Entirely_recognised"),
                            (
                                "2",
                                "Recognised_to_the_extent_of_the_institution_s_continuing_involvement",
                            ),
                            ("3", "Entirely_derecognised"),
                            ("0", "Not_applicable"),
                            ("4", "Partially_derecognised"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="TRTMNT_TRNSFRRD_ASSTS_BLNC_SHT",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Repurchase_agreement_component",
                "verbose_name_plural": "Repurchase_agreement_components",
            },
        ),
        migrations.CreateModel(
            name="BIRD_LN_AND_ADVNC_LG_LN_AND_ADVNC_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LN_AND_ADVNC_LG_LN_AND_ADVNC_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LN_AND_ADVNC_LG_LN_AND_ADVNC_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_CMPNNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cash_leg"),
                            ("3", "Security_leg"),
                            ("4", "Loans_and_advances_leg"),
                            ("5", "Equity_instrument_leg"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_component_type",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_identifier",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_RPRCHS_AGRMNT_CMPNNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rprchs_agrmnt_cmpnnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Loan_and_advance_leg_Loan_and_advance_assignment",
                "verbose_name_plural": "Loan_and_advance_leg_Loan_and_advance_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_EQT_INSTRMNT_LG_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_EQT_INSTRMNT_LG_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_EQT_INSTRMNT_LG_EQT_INSTRMNT_NT_SCRT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_CMPNNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cash_leg"),
                            ("3", "Security_leg"),
                            ("4", "Loans_and_advances_leg"),
                            ("5", "Equity_instrument_leg"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_component_type",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_RPRCHS_AGRMNT_CMPNNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rprchs_agrmnt_cmpnnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equity_instrument_leg_Equity_instrument_that_is_not_a_security_assignment",
                "verbose_name_plural": "Equity_instrument_leg_Equity_instrument_that_is_not_a_security_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RSK_FAC_SA_EIL",
            fields=[
                (
                    "BIRD_RSK_FAC_SA_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RSK_FAC_SA_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "RSK_FCTR_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_identifier",
                    ),
                ),
                (
                    "ASST_BCKD_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_backed_Security_identifier",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "ISSR_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Issuer_role_type",
                    ),
                ),
                (
                    "CMMDTY_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("10", "Gaseous_combustables"),
                            ("11", "Precious_metals"),
                            ("1", "Energy_solid_combustables"),
                            ("2", "Grains_and_oilseed"),
                            ("3", "Livestock_and_dairy"),
                            ("4", "Soft_and_other_agriculturals"),
                            ("5", "Other_commodity"),
                            ("6", "Energy_liquid_combustables"),
                            ("7", "Energy_electricity_and_carbon_trading"),
                            ("8", "Freight"),
                            ("9", "Non_precious_metals"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Commodity_type",
                    ),
                ),
                (
                    "BS_CRRNCY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Base_currency",
                    ),
                ),
                (
                    "CRDT_SPRD_RSK_CRDT_QLTY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Senior_investment_grade"),
                            ("2", "Non_senior_investment_grade"),
                            ("3", "High_yield"),
                            ("4", "Non_rated"),
                            ("5", "Investment_grade"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_spread_risk_CSR_credit_quality",
                    ),
                ),
                (
                    "CRDT_SPRD_RSK_CRV_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Bond"),
                            ("2", "Credit_spread_risk_CSR_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_spread_risk_CSR_curve_type",
                    ),
                ),
                (
                    "EQUTY_FCTR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Not_applicable"), ("1", "Spot"), ("2", "Repo")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Equity_factor_type",
                    ),
                ),
                (
                    "GIRR_FCTR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Inflation"),
                            ("2", "Basis"),
                            ("3", "Yield"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="General_interest_rate_risk_GIRR_factor_type",
                    ),
                ),
                (
                    "RSK_CLSS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "General_interest_rate_risk_GIRR_"),
                            ("2", "Credit_spread_risk_CSR_non_securitisations"),
                            (
                                "3",
                                "CSR_securitisations_non_correlation_trading_portfolio_or_non_CTP_",
                            ),
                            (
                                "4",
                                "CSR_securitisations_correlation_trading_portfolio_or_CTP_",
                            ),
                            ("5", "Equity_risk"),
                            ("6", "Commodity_risk"),
                            ("7", "Foreign_exchange_FX_risk"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_class",
                    ),
                ),
                (
                    "DLVRY_LCTN",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Delivery_location",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Risk_factor_for_standardised_approach",
                "verbose_name_plural": "Risk_factor_for_standardised_approachs",
            },
        ),
        migrations.CreateModel(
            name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_OTC_PSTNS_EIL",
            fields=[
                (
                    "BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_OTC_PSTNS_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_OTC_PSTNS_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "RSK_FCTR_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_identifier",
                    ),
                ),
                (
                    "CRRNCY_RCRD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency_of_record",
                    ),
                ),
                (
                    "SHCK_DRCTN",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Not_applicable"), ("1", "Up"), ("2", "Down")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Shock_direction",
                    ),
                ),
                (
                    "CRVTR_RSK_WGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_risk_weight",
                    ),
                ),
                (
                    "CRVTR_VLTN_DFFRNC",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_valuation_difference",
                    ),
                ),
                (
                    "DLT_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Delta_sensitivity",
                    ),
                ),
                (
                    "OPTN_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Option_maturity",
                    ),
                ),
                (
                    "TNR",
                    models.FloatField(
                        blank=True, default=None, null=True, verbose_name="Tenor"
                    ),
                ),
                (
                    "UNDRLYNG_RSDL_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Underlying_residual_maturity",
                    ),
                ),
                (
                    "VG_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Vega_sensitivity",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reference_date",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_RSK_FAC_SA_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rsk_fac_sa_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positions",
                "verbose_name_plural": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positionss",
            },
        ),
        migrations.CreateModel(
            name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_ETD_PSTNS_EIL",
            fields=[
                (
                    "BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_ETD_PSTNS_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_ETD_PSTNS_EIL_uniqueID",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVTV_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_Security_identifier",
                    ),
                ),
                (
                    "RSK_FCTR_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_identifier",
                    ),
                ),
                (
                    "RSK_MSR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Delta_sensitivity"),
                            ("5", "Vega_sensitivity"),
                            ("6", "Curvature"),
                            (
                                "1",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positions",
                            ),
                            (
                                "2",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positions",
                            ),
                            (
                                "3",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_Security_positions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_measure_type",
                    ),
                ),
                (
                    "RSK_MSR_TYP_PSTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Delta_sensitivity"),
                            ("5", "Vega_sensitivity"),
                            ("6", "Curvature"),
                            (
                                "1",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positions",
                            ),
                            (
                                "2",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positions",
                            ),
                            (
                                "3",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_Security_positions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_measure_type_by_position",
                    ),
                ),
                (
                    "CRRNCY_RCRD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency_of_record",
                    ),
                ),
                (
                    "SHCK_DRCTN",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Not_applicable"), ("1", "Up"), ("2", "Down")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Shock_direction",
                    ),
                ),
                (
                    "CRVTR_RSK_WGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_risk_weight",
                    ),
                ),
                (
                    "CRVTR_VLTN_DFFRNC",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_valuation_difference",
                    ),
                ),
                (
                    "DLT_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Delta_sensitivity",
                    ),
                ),
                (
                    "OPTN_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Option_maturity",
                    ),
                ),
                (
                    "TNR",
                    models.FloatField(
                        blank=True, default=None, null=True, verbose_name="Tenor"
                    ),
                ),
                (
                    "UNDRLYNG_RSDL_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Underlying_residual_maturity",
                    ),
                ),
                (
                    "VG_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Vega_sensitivity",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reference_date",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_EXCHNG_TRDBL_DRVTV_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_exchng_trdbl_drvtv_pstn_eil",
                    ),
                ),
                (
                    "the_BIRD_RSK_FAC_SA_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rsk_fac_sa_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positions",
                "verbose_name_plural": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positionss",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_GRD_CNTRY_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_RTNG_GRD_CNTRY_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_GRD_CNTRY_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "RTNG_GRD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_grade",
                    ),
                ),
                (
                    "CNTRY_CD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BJ", "Benin"),
                            ("MY", "Malaysia"),
                            ("CU", "Cuba"),
                            ("QA", "Qatar"),
                            ("MN", "Mongolia"),
                            ("NA", "Namibia"),
                            ("AE", "United_Arab_Emirates_the_"),
                            ("AR", "Argentina"),
                            ("GL", "Greenland"),
                            ("TG", "Togo"),
                            ("KP", "Korea_the_Democratic_People_s_Republic_of_"),
                            ("KG", "Kyrgyzstan"),
                            ("JO", "Jordan"),
                            ("GU", "Guam"),
                            ("IN", "India"),
                            ("UA", "Ukraine"),
                            (
                                "GB",
                                "United_Kingdom_of_Great_Britain_and_Northern_Ireland_the_",
                            ),
                            ("FJ", "Fiji"),
                            ("EE", "Estonia"),
                            ("KI", "Kiribati"),
                            ("WF", "Wallis_and_Futuna"),
                            ("ER", "Eritrea"),
                            ("DM", "Dominica"),
                            ("VN", "Viet_Nam"),
                            ("DZ", "Algeria"),
                            ("PG", "Papua_New_Guinea"),
                            ("BD", "Bangladesh"),
                            ("BS", "Bahamas_the_"),
                            ("CL", "Chile"),
                            ("MW", "Malawi"),
                            ("RW", "Rwanda"),
                            ("NO", "Norway"),
                            ("SH", "Saint_Helena_Ascension_and_Tristan_da_Cunha"),
                            ("HM", "Heard_Island_and_McDonald_Islands"),
                            ("IR", "Iran_Islamic_Republic_of_"),
                            ("IE", "Ireland"),
                            ("GI", "Gibraltar"),
                            ("VE", "Venezuela_Bolivarian_Republic_of_"),
                            ("MK", "Macedonia_the_former_Yugoslav_Republic_of_"),
                            ("CG", "Congo_the_"),
                            ("PL", "Poland"),
                            ("LC", "Saint_Lucia"),
                            ("BO", "Bolivia_Plurinational_State_of_"),
                            ("LT", "Lithuania"),
                            ("ST", "Sao_Tome_and_Principe"),
                            ("AW", "Aruba"),
                            ("SC", "Seychelles"),
                            ("MR", "Mauritania"),
                            ("CI", "Cote_d_Ivoire"),
                            ("ME", "Montenegro"),
                            ("BV", "Bouvet_Island"),
                            ("BA", "Bosnia_and_Herzegovina"),
                            ("SM", "San_Marino"),
                            ("SZ", "Swaziland"),
                            ("RE", "Reunion"),
                            ("FO", "Faroe_Islands_the_"),
                            ("TL", "Timor_Leste"),
                            ("HT", "Haiti"),
                            ("ZW", "Zimbabwe"),
                            ("GG", "Guernsey"),
                            ("US", "United_States_of_America_the_"),
                            ("GP", "Guadeloupe"),
                            ("TC", "Turks_and_Caicos_Islands_the_"),
                            ("TT", "Trinidad_and_Tobago"),
                            ("ID", "Indonesia"),
                            ("GH", "Ghana"),
                            ("IS", "Iceland"),
                            ("OM", "Oman"),
                            ("SB", "Solomon_Islands"),
                            ("NE", "Niger_the_"),
                            ("NR", "Nauru"),
                            ("CF", "Central_African_Republic_the_"),
                            ("BY", "Belarus"),
                            ("LU", "Luxembourg"),
                            ("LB", "Lebanon"),
                            ("PM", "Saint_Pierre_and_Miquelon"),
                            ("BN", "Brunei_Darussalam"),
                            ("AX", "Aland_Islands"),
                            ("SL", "Sierra_Leone"),
                            ("AO", "Angola"),
                            ("RS", "Serbia"),
                            ("CH", "Switzerland"),
                            ("MD", "Moldova_the_Republic_of_"),
                            ("MS", "Montserrat"),
                            ("PT", "Portugal"),
                            ("BW", "Botswana"),
                            ("JE", "Jersey"),
                            ("KM", "Comoros_the_"),
                            ("KZ", "Kazakhstan"),
                            ("TZ", "Tanzania_United_Republic_of"),
                            ("HU", "Hungary"),
                            ("ZA", "South_Africa"),
                            ("TM", "Turkmenistan"),
                            ("GQ", "Equatorial_Guinea"),
                            ("GF", "French_Guiana"),
                            ("RO", "Romania"),
                            ("AS", "American_Samoa"),
                            ("SG", "Singapore"),
                            ("AD", "Andorra"),
                            ("PH", "Philippines_the_"),
                            ("CC", "Cocos_Keeling_Islands_the_"),
                            ("MO", "Macao"),
                            ("MX", "Mexico"),
                            ("YE", "Yemen"),
                            ("VA", "Holy_See_the_"),
                            ("UY", "Uruguay"),
                            ("GM", "Gambia_the_"),
                            ("FR", "France"),
                            ("PM_x2", "Saint_Pierre_and_Miquelon_x2"),
                            ("FX", "France_metropolitan"),
                            ("MC", "Monaco"),
                            ("GF_x2", "French_Guiana_x2"),
                            ("MF", "Saint_Martin_French_part_"),
                            ("BL", "Saint_Barthelemy"),
                            ("GP_x2", "Guadeloupe_x2"),
                            ("RE_x2", "Reunion_x2"),
                            ("MQ", "Martinique"),
                            ("YT", "Mayotte"),
                            ("PM_x3", "Saint_Pierre_and_Miquelon_x3"),
                            ("FX_x2", "France_metropolitan_x2"),
                            ("MC_x2", "Monaco_x2"),
                            ("GF_x3", "French_Guiana_x3"),
                            ("MF_x2", "Saint_Martin_French_part__x2"),
                            ("BL_x2", "Saint_Barthelemy_x2"),
                            ("GP_x3", "Guadeloupe_x3"),
                            ("RE_x3", "Reunion_x3"),
                            ("MQ_x2", "Martinique_x2"),
                            ("YT_x2", "Mayotte_x2"),
                            ("PM_x4", "Saint_Pierre_and_Miquelon_x4"),
                            ("FX_x3", "France_metropolitan_x3"),
                            ("MC_x3", "Monaco_x3"),
                            ("GF_x4", "French_Guiana_x4"),
                            ("MF_x3", "Saint_Martin_French_part__x3"),
                            ("BL_x3", "Saint_Barthelemy_x3"),
                            ("GP_x4", "Guadeloupe_x4"),
                            ("RE_x4", "Reunion_x4"),
                            ("MQ_x3", "Martinique_x3"),
                            ("YT_x3", "Mayotte_x3"),
                            ("TF", "French_Southern_Territories_the_"),
                            ("ES", "Spain"),
                            ("KH", "Cambodia"),
                            ("IO", "British_Indian_Ocean_Territory_the_"),
                            ("GT", "Guatemala"),
                            ("TH", "Thailand"),
                            ("FK", "Falkland_Islands_the_Malvinas_"),
                            ("SI", "Slovenia"),
                            ("BR", "Brazil"),
                            ("PF", "French_Polynesia"),
                            ("LI", "Liechtenstein"),
                            ("BE", "Belgium"),
                            ("CZ", "Czechia"),
                            ("MV", "Maldives"),
                            ("MA", "Morocco"),
                            ("CM", "Cameroon"),
                            ("NG", "Nigeria"),
                            ("NP", "Nepal"),
                            ("AT", "Austria"),
                            ("BL_x4", "Saint_Barthelemy_x4"),
                            ("CD", "Congo_the_Democratic_Republic_of_the_"),
                            ("MH", "Marshall_Islands_the_"),
                            ("DE", "Germany"),
                            ("IQ", "Iraq"),
                            ("ZM", "Zambia"),
                            ("HN", "Honduras"),
                            ("TV", "Tuvalu"),
                            ("EC", "Ecuador"),
                            ("ET", "Ethiopia"),
                            ("DK", "Denmark"),
                            ("JP", "Japan"),
                            ("GS", "South_Georgia_and_the_South_Sandwich_Islands"),
                            ("UG", "Uganda"),
                            ("GD", "Grenada"),
                            ("TO", "Tonga"),
                            ("NI", "Nicaragua"),
                            ("SY", "Syrian_Arab_Republic"),
                            ("AZ", "Azerbaijan"),
                            ("AM", "Armenia"),
                            ("SN", "Senegal"),
                            ("PA", "Panama"),
                            ("BB", "Barbados"),
                            ("LY", "Libya"),
                            ("MF_x4", "Saint_Martin_French_part__x4"),
                            ("MQ_x4", "Martinique_x4"),
                            ("VC", "Saint_Vincent_and_the_Grenadines"),
                            ("EH", "Western_Sahara"),
                            ("TD", "Chad"),
                            ("HK", "Hong_Kong"),
                            ("IT", "Italy"),
                            ("SR", "Suriname"),
                            ("AQ", "Antarctica"),
                            ("AF", "Afghanistan"),
                            ("SE", "Sweden"),
                            ("NU", "Niue"),
                            ("MM", "Myanmar"),
                            ("CA", "Canada"),
                            ("CV", "Cabo_Verde"),
                            ("MZ", "Mozambique"),
                            ("BI", "Burundi"),
                            ("LR", "Liberia"),
                            ("SK", "Slovakia"),
                            ("NL", "Netherlands_the_"),
                            ("MT", "Malta"),
                            ("CX", "Christmas_Island"),
                            ("CO", "Colombia"),
                            ("MC_x4", "Monaco_x4"),
                            ("PS", "Palestine_State_of"),
                            ("BG", "Bulgaria"),
                            ("LK", "Sri_Lanka"),
                            ("FI", "Finland"),
                            ("TJ", "Tajikistan"),
                            ("HR", "Croatia"),
                            ("GA", "Gabon"),
                            ("IM", "Isle_of_Man"),
                            ("TR", "Turkey"),
                            ("UM", "United_States_Minor_Outlying_Islands_the_"),
                            ("GN", "Guinea"),
                            ("GY", "Guyana"),
                            ("UZ", "Uzbekistan"),
                            ("VU", "Vanuatu"),
                            ("JM", "Jamaica"),
                            ("KR", "Korea_the_Republic_of_"),
                            ("KE", "Kenya"),
                            ("CW", "Curacao"),
                            ("ML", "Mali"),
                            ("LS", "Lesotho"),
                            ("PK", "Pakistan"),
                            ("BH", "Bahrain"),
                            ("AG", "Antigua_and_Barbuda"),
                            ("SD", "Sudan_the_"),
                            ("SS", "South_Sudan"),
                            ("NC", "New_Caledonia"),
                            ("CN", "China"),
                            ("MU", "Mauritius"),
                            ("CY", "Cyprus"),
                            ("BF", "Burkina_Faso"),
                            ("PE", "Peru"),
                            ("PR", "Puerto_Rico"),
                            ("BQ", "Bonaire_Saint_Eustatius_and_Saba"),
                            ("SJ", "Svalbard_and_Jan_Mayen"),
                            ("AI", "Anguilla"),
                            ("RU", "Russian_Federation_the_"),
                            ("NZ", "New_Zealand"),
                            ("TK", "Tokelau"),
                            ("GW", "Guinea_Bissau"),
                            ("IL", "Israel"),
                            ("DO", "Dominican_Republic_the_"),
                            ("EG", "Egypt"),
                            ("WS", "Samoa"),
                            ("BM", "Bermuda"),
                            ("LA", "Lao_People_s_Democratic_Republic_the_"),
                            ("PN", "Pitcairn"),
                            ("LV", "Latvia"),
                            ("PY", "Paraguay"),
                            ("BZ", "Belize"),
                            ("CR", "Costa_Rica"),
                            ("NF", "Norfolk_Island"),
                            ("AU", "Australia"),
                            ("SV", "El_Salvador"),
                            ("SA", "Saudi_Arabia"),
                            ("TW", "Taiwan_Province_of_China_"),
                            ("YT_x4", "Mayotte_x4"),
                            ("KW", "Kuwait"),
                            ("VG", "Virgin_Islands_British_"),
                            ("GE", "Georgia"),
                            ("GR", "Greece"),
                            ("TN", "Tunisia"),
                            ("FM", "Micronesia_Federated_States_of_"),
                            ("KY", "Cayman_Islands_the_"),
                            ("KN", "Saint_Kitts_and_Nevis"),
                            ("DJ", "Djibouti"),
                            ("VI", "Virgin_Islands_U_S_"),
                            ("BT", "Bhutan"),
                            ("PW", "Palau"),
                            ("MP", "Northern_Mariana_Islands_the_"),
                            ("MG", "Madagascar"),
                            ("CK", "Cook_Islands_the_"),
                            ("AL", "Albania"),
                            ("SO", "Somalia"),
                            ("SX", "Sint_Maarten_Dutch_part_"),
                            ("0", "Not_applicable"),
                            ("AT111", "Mittelburgenland"),
                            ("AT112", "Nordburgenland"),
                            ("AT113", "Sudburgenland"),
                            ("AT121", "Mostviertel_Eisenwurzen"),
                            ("AT122", "Niederosterreich_Sud"),
                            ("AT123", "Sankt_Polten"),
                            ("AT124", "Waldviertel"),
                            ("AT125", "Weinviertel"),
                            ("AT126", "Wiener_Umland_Nordteil"),
                            ("AT127", "Wiener_Umland_Sudteil"),
                            ("AT130", "Wien"),
                            ("AT211", "Klagenfurt_Villach"),
                            ("AT212", "Oberkarnten"),
                            ("AT213", "Unterkarnten"),
                            ("AT221", "Graz"),
                            ("AT222", "Liezen"),
                            ("AT223", "Ostliche_Obersteiermark"),
                            ("AT224", "Oststeiermark"),
                            ("AT225", "West_und_Sudsteiermark"),
                            ("AT226", "Westliche_Obersteiermark"),
                            ("AT311", "Innviertel"),
                            ("AT312", "Linz_Wels"),
                            ("AT313", "Muhlviertel"),
                            ("AT314", "Steyr_Kirchdorf"),
                            ("AT315", "Traunviertel"),
                            ("AT321", "Lungau"),
                            ("AT322", "Pinzgau_Pongau"),
                            ("AT323", "Salzburg_und_Umgebung"),
                            ("AT331", "Ausserfern"),
                            ("AT332", "Innsbruck"),
                            ("AT333", "Osttirol"),
                            ("AT334", "Tiroler_Oberland"),
                            ("AT335", "Tiroler_Unterland"),
                            ("AT341", "Bludenz_Bregenzer_Wald"),
                            ("AT342", "Rheintal_Bodenseegebiet"),
                            ("ATZZZ", "Extra_Regio_NUTS_3"),
                            (
                                "BE100",
                                "Arr_de_Bruxelles_Capitale_Arr_van_Brussel_Hoofdstad",
                            ),
                            ("BE211", "Arr_Antwerpen"),
                            ("BE212", "Arr_Mechelen"),
                            ("BE213", "Arr_Turnhout"),
                            ("BE221", "Arr_Hasselt"),
                            ("BE222", "Arr_Maaseik"),
                            ("BE223", "Arr_Tongeren"),
                            ("BE231", "Arr_Aalst"),
                            ("BE232", "Arr_Dendermonde"),
                            ("BE233", "Arr_Eeklo"),
                            ("BE234", "Arr_Gent"),
                            ("BE235", "Arr_Oudenaarde"),
                            ("BE236", "Arr_Sint_Niklaas"),
                            ("BE241", "Arr_Halle_Vilvoorde"),
                            ("BE242", "Arr_Leuven"),
                            ("BE251", "Arr_Brugge"),
                            ("BE252", "Arr_Diksmuide"),
                            ("BE253", "Arr_Ieper"),
                            ("BE254", "Arr_Kortrijk"),
                            ("BE255", "Arr_Oostende"),
                            ("BE256", "Arr_Roeselare"),
                            ("BE257", "Arr_Tielt"),
                            ("BE258", "Arr_Veurne"),
                            ("BE310", "Arr_Nivelles"),
                            ("BE321", "Arr_Ath"),
                            ("BE322", "Arr_Charleroi"),
                            ("BE323", "Arr_Mons"),
                            ("BE324", "Arr_Mouscron"),
                            ("BE325", "Arr_Soignies"),
                            ("BE326", "Arr_Thuin"),
                            ("BE327", "Arr_Tournai"),
                            ("BE331", "Arr_Huy"),
                            ("BE332", "Arr_Liege"),
                            ("BE334", "Arr_Waremme"),
                            ("BE335", "Arr_Verviers_communes_francophones"),
                            ("BE336", "Bezirk_Verviers_Deutschsprachige_Gemeinschaft"),
                            ("BE341", "Arr_Arlon"),
                            ("BE342", "Arr_Bastogne"),
                            ("BE343", "Arr_Marche_en_Famenne"),
                            ("BE344", "Arr_Neufchateau"),
                            ("BE345", "Arr_Virton"),
                            ("BE351", "Arr_Dinant"),
                            ("BE352", "Arr_Namur"),
                            ("BE353", "Arr_Philippeville"),
                            ("BG311", "Vidin"),
                            ("BG312", "Montana"),
                            ("BG313", "Vratsa"),
                            ("BG314", "Pleven"),
                            ("BG315", "Lovech"),
                            ("BG321", "Veliko_Tarnovo"),
                            ("BG322", "Gabrovo"),
                            ("BG323", "Ruse"),
                            ("BG324", "Razgrad"),
                            ("BG325", "Silistra"),
                            ("BG331", "Varna"),
                            ("BG332", "Dobrich"),
                            ("BG333", "Shumen"),
                            ("BG334", "Targovishte"),
                            ("BG341", "Burgas"),
                            ("BG342", "Sliven"),
                            ("BG343", "Yambol"),
                            ("BG344", "Stara_Zagora"),
                            ("BG411", "Sofia_stolitsa_"),
                            ("BG412", "Sofia"),
                            ("BG413", "Blagoevgrad"),
                            ("BG414", "Pernik"),
                            ("BG415", "Kyustendil"),
                            ("BG421", "Plovdiv"),
                            ("BG422", "Haskovo"),
                            ("BG423", "Pazardzhik"),
                            ("BG424", "Smolyan"),
                            ("BG425", "Kardzhali"),
                            ("CY000", "Kypros"),
                            ("CZ010", "Hlavni_Mesto_Praha"),
                            ("CZ020", "Stredocesky_Kraj"),
                            ("CZ031", "Jihocesky_Kraj"),
                            ("CZ032", "Plzensky_Kraj"),
                            ("CZ041", "Karlovarsky_kraj"),
                            ("CZ042", "Ustecky_kraj"),
                            ("CZ051", "Liberecky_kraj"),
                            ("CZ052", "Kralovehradecky_kraj"),
                            ("CZ053", "Pardubicky_kraj"),
                            ("CZ063", "Kraj_Vysocina"),
                            ("CZ064", "Jihomoravsky_kraj"),
                            ("CZ071", "Olomoucky_kraj"),
                            ("CZ072", "Zlinsky_kraj"),
                            ("CZ080", "Moravskoslezsky_kraj"),
                            ("DE111", "Stuttgart_Stadtkreis"),
                            ("DE112", "Boblingen"),
                            ("DE113", "Esslingen"),
                            ("DE114", "Goppingen"),
                            ("DE115", "Ludwigsburg"),
                            ("DE116", "Rems_Murr_Kreis"),
                            ("DE117", "Heilbronn_Stadtkreis"),
                            ("DE118", "Heilbronn_Landkreis"),
                            ("DE119", "Hohenlohekreis"),
                            ("DE11A", "Schwabisch_Hall"),
                            ("DE11B", "Main_Tauber_Kreis"),
                            ("DE11C", "Heidenheim"),
                            ("DE11D", "Ostalbkreis"),
                            ("DE121", "Baden_Baden_Stadtkreis"),
                            ("DE122", "Karlsruhe_Stadtkreis"),
                            ("DE123", "Karlsruhe_Landkreis"),
                            ("DE124", "Rastatt"),
                            ("DE125", "Heidelberg_Stadtkreis"),
                            ("DE126", "Mannheim_Stadtkreis"),
                            ("DE127", "Neckar_Odenwald_Kreis"),
                            ("DE128", "Rhein_Neckar_Kreis"),
                            ("DE129", "Pforzheim_Stadtkreis"),
                            ("DE12A", "Calw"),
                            ("DE12B", "Enzkreis"),
                            ("DE12C", "Freudenstadt"),
                            ("DE131", "Freiburg_im_Breisgau_Stadtkreis"),
                            ("DE132", "Breisgau_Hochschwarzwald"),
                            ("DE133", "Emmendingen"),
                            ("DE134", "Ortenaukreis"),
                            ("DE135", "Rottweil"),
                            ("DE136", "Schwarzwald_Baar_Kreis"),
                            ("DE137", "Tuttlingen"),
                            ("DE138", "Konstanz"),
                            ("DE139", "Lorrach"),
                            ("DE13A", "Waldshut"),
                            ("DE141", "Reutlingen"),
                            ("DE142", "Tubingen_Landkreis"),
                            ("DE143", "Zollernalbkreis"),
                            ("DE144", "Ulm_Stadtkreis"),
                            ("DE145", "Alb_Donau_Kreis"),
                            ("DE149", "Sigmaringen"),
                            ("DE146", "Biberach"),
                            ("DE147", "Bodenseekreis"),
                            ("DE148", "Ravensburg"),
                            ("DE211", "Ingolstadt_Kreisfreie_Stadt"),
                            ("DE212", "Munchen_Kreisfreie_Stadt"),
                            ("DE213", "Rosenheim_Kreisfreie_Stadt"),
                            ("DE214", "Altotting"),
                            ("DE215", "Berchtesgadener_Land"),
                            ("DE216", "Bad_Tolz_Wolfratshausen"),
                            ("DE217", "Dachau"),
                            ("DE218", "Ebersberg"),
                            ("DE219", "Eichstatt"),
                            ("DE21A", "Erding"),
                            ("DE21B", "Freising"),
                            ("DE21C", "Furstenfeldbruck"),
                            ("DE21D", "Garmisch_Partenkirchen"),
                            ("DE21E", "Landsberg_am_Lech"),
                            ("DE21F", "Miesbach"),
                            ("DE21G", "Muhldorf_a_Inn"),
                            ("DE21H", "Munchen_Landkreis"),
                            ("DE21I", "Neuburg_Schrobenhausen"),
                            ("DE21J", "Pfaffenhofen_a_d_Ilm"),
                            ("DE21K", "Rosenheim_Landkreis"),
                            ("DE21L", "Starnberg"),
                            ("DE21M", "Traunstein"),
                            ("DE21N", "Weilheim_Schongau"),
                            ("DE221", "Landshut_Kreisfreie_Stadt"),
                            ("DE222", "Passau_Kreisfreie_Stadt"),
                            ("DE223", "Straubing_Kreisfreie_Stadt"),
                            ("DE224", "Deggendorf"),
                            ("DE225", "Freyung_Grafenau"),
                            ("DE226", "Kelheim"),
                            ("DE227", "Landshut_Landkreis"),
                            ("DE228", "Passau_Landkreis"),
                            ("DE229", "Regen"),
                            ("DE22A", "Rottal_Inn"),
                            ("DE22B", "Straubing_Bogen"),
                            ("DE22C", "Dingolfing_Landau"),
                            ("DE231", "Amberg_Kreisfreie_Stadt"),
                            ("DE232", "Regensburg_Kreisfreie_Stadt"),
                            ("DE233", "Weiden_i_d_Opf_Kreisfreie_Stadt"),
                            ("DE234", "Amberg_Sulzbach"),
                            ("DE235", "Cham"),
                            ("DE236", "Neumarkt_i_d_OPf_"),
                            ("DE237", "Neustadt_a_d_Waldnaab"),
                            ("DE238", "Regensburg_Landkreis"),
                            ("DE239", "Schwandorf"),
                            ("DE23A", "Tirschenreuth"),
                            ("DE241", "Bamberg_Kreisfreie_Stadt"),
                            ("DE242", "Bayreuth_Kreisfreie_Stadt"),
                            ("DE243", "Coburg_Kreisfreie_Stadt"),
                            ("DE244", "Hof_Kreisfreie_Stadt"),
                            ("DE245", "Bamberg_Landkreis"),
                            ("DE246", "Bayreuth_Landkreis"),
                            ("DE247", "Coburg_Landkreis"),
                            ("DE248", "Forchheim"),
                            ("DE249", "Hof_Landkreis"),
                            ("DE24A", "Kronach"),
                            ("DE24B", "Kulmbach"),
                            ("DE24C", "Lichtenfels"),
                            ("DE24D", "Wunsiedel_i_Fichtelgebirge"),
                            ("DE251", "Ansbach_Kreisfreie_Stadt"),
                            ("DE252", "Erlangen_Kreisfreie_Stadt"),
                            ("DE253", "Furth_Kreisfreie_Stadt"),
                            ("DE254", "Nurnberg_Kreisfreie_Stadt"),
                            ("DE255", "Schwabach_Kreisfreie_Stadt"),
                            ("DE256", "Ansbach_Landkreis"),
                            ("DE257", "Erlangen_Hochstadt"),
                            ("DE258", "Furth_Landkreis"),
                            ("DE259", "Nurnberger_Land"),
                            ("DE25A", "Neustadt_a_d_Aisch_Bad_Windsheim"),
                            ("DE25B", "Roth"),
                            ("DE25C", "Weissenburg_Gunzenhausen"),
                            ("DE261", "Aschaffenburg_Kreisfreie_Stadt"),
                            ("DE262", "Schweinfurt_Kreisfreie_Stadt"),
                            ("DE263", "Wurzburg_Kreisfreie_Stadt"),
                            ("DE264", "Aschaffenburg_Landkreis"),
                            ("DE265", "Bad_Kissingen"),
                            ("DE266", "Rhon_Grabfeld"),
                            ("DE267", "Hassberge"),
                            ("DE268", "Kitzingen"),
                            ("DE269", "Miltenberg"),
                            ("DE26A", "Main_Spessart"),
                            ("DE26B", "Schweinfurt_Landkreis"),
                            ("DE26C", "Wurzburg_Landkreis"),
                            ("DE271", "Augsburg_Kreisfreie_Stadt"),
                            ("DE272", "Kaufbeuren_Kreisfreie_Stadt"),
                            ("DE273", "Kempten_Allgau_Kreisfreie_Stadt"),
                            ("DE274", "Memmingen_Kreisfreie_Stadt"),
                            ("DE275", "Aichach_Friedberg"),
                            ("DE276", "Augsburg_Landkreis"),
                            ("DE277", "Dillingen_a_d_Donau"),
                            ("DE278", "Gunzburg"),
                            ("DE279", "Neu_Ulm"),
                            ("DE27A", "Lindau_Bodensee_"),
                            ("DE27B", "Ostallgau"),
                            ("DE27C", "Unterallgau"),
                            ("DE27D", "Donau_Ries"),
                            ("DE27E", "Oberallgau"),
                            ("DE300", "Berlin"),
                            ("DE401", "Brandenburg_an_der_Havel_Kreisfreie_Stadt"),
                            ("DE402", "Cottbus_Kreisfreie_Stadt"),
                            ("DE403", "Frankfurt_Oder_Kreisfreie_Stadt"),
                            ("DE404", "Potsdam_Kreisfreie_Stadt"),
                            ("DE405", "Barnim"),
                            ("DE406", "Dahme_Spreewald"),
                            ("DE407", "Elbe_Elster"),
                            ("DE408", "Havelland"),
                            ("DE409", "Markisch_Oderland"),
                            ("DE40A", "Oberhavel"),
                            ("DE40B", "Oberspreewald_Lausitz"),
                            ("DE40C", "Oder_Spree"),
                            ("DE40D", "Ostprignitz_Ruppin"),
                            ("DE40E", "Potsdam_Mittelmark"),
                            ("DE40F", "Prignitz"),
                            ("DE40G", "Spree_Neisse"),
                            ("DE40H", "Teltow_Flaming"),
                            ("DE40I", "Uckermark"),
                            ("DE501", "Bremen_Kreisfreie_Stadt"),
                            ("DE502", "Bremerhaven_Kreisfreie_Stadt"),
                            ("DE600", "Hamburg"),
                            ("DE711", "Darmstadt_Kreisfreie_Stadt"),
                            ("DE712", "Frankfurt_am_Main_Kreisfreie_Stadt"),
                            ("DE713", "Offenbach_am_Main_Kreisfreie_Stadt"),
                            ("DE714", "Wiesbaden_Kreisfreie_Stadt"),
                            ("DE715", "Bergstrasse"),
                            ("DE716", "Darmstadt_Dieburg"),
                            ("DE717", "Gross_Gerau"),
                            ("DE718", "Hochtaunuskreis"),
                            ("DE719", "Main_Kinzig_Kreis"),
                            ("DE71A", "Main_Taunus_Kreis"),
                            ("DE71B", "Odenwaldkreis"),
                            ("DE71C", "Offenbach_Landkreis"),
                            ("DE71D", "Rheingau_Taunus_Kreis"),
                            ("DE71E", "Wetteraukreis"),
                            ("DE721", "Giessen_Landkreis"),
                            ("DE722", "Lahn_Dill_Kreis"),
                            ("DE723", "Limburg_Weilburg"),
                            ("DE724", "Marburg_Biedenkopf"),
                            ("DE725", "Vogelsbergkreis"),
                            ("DE731", "Kassel_Kreisfreie_Stadt"),
                            ("DE732", "Fulda"),
                            ("DE733", "Hersfeld_Rotenburg"),
                            ("DE734", "Kassel_Landkreis"),
                            ("DE735", "Schwalm_Eder_Kreis"),
                            ("DE736", "Waldeck_Frankenberg"),
                            ("DE737", "Werra_Meissner_Kreis"),
                            ("DE803", "Rostock_Kreisfreie_Stadt"),
                            ("DE804", "Schwerin_Kreisfreie_Stadt"),
                            ("DE80J", "Mecklenburgische_Seenplatte"),
                            ("DE80K", "Landkreis_Rostock"),
                            ("DE80L", "Vorpommern_Rugen"),
                            ("DE80M", "Nordwestmecklenburg"),
                            ("DE80N", "Vorpommern_Greifswald"),
                            ("DE80O", "Ludwigslust_Parchim"),
                            ("DE911", "Braunschweig_Kreisfreie_Stadt"),
                            ("DE912", "Salzgitter_Kreisfreie_Stadt"),
                            ("DE913", "Wolfsburg_Kreisfreie_Stadt"),
                            ("DE914", "Gifhorn"),
                            ("DE916", "Goslar"),
                            ("DE917", "Helmstedt"),
                            ("DE918", "Northeim"),
                            ("DE91A", "Peine"),
                            ("DE91B", "Wolfenbuttel"),
                            ("DE91C", "Gottingen"),
                            ("DE922", "Diepholz"),
                            ("DE923", "Hameln_Pyrmont"),
                            ("DE925", "Hildesheim"),
                            ("DE926", "Holzminden"),
                            ("DE927", "Nienburg_Weser_"),
                            ("DE928", "Schaumburg"),
                            ("DE929", "Region_Hannover"),
                            ("DE931", "Celle"),
                            ("DE932", "Cuxhaven"),
                            ("DE933", "Harburg"),
                            ("DE934", "Luchow_Dannenberg"),
                            ("DE935", "Luneburg_Landkreis"),
                            ("DE936", "Osterholz"),
                            ("DE937", "Rotenburg_Wumme_"),
                            ("DE938", "Soltau_Fallingbostel"),
                            ("DE939", "Stade"),
                            ("DE93A", "Uelzen"),
                            ("DE93B", "Verden"),
                            ("DE941", "Delmenhorst_Kreisfreie_Stadt"),
                            ("DE942", "Emden_Kreisfreie_Stadt"),
                            ("DE943", "Oldenburg_Oldenburg_Kreisfreie_Stadt"),
                            ("DE944", "Osnabruck_Kreisfreie_Stadt"),
                            ("DE945", "Wilhelmshaven_Kreisfreie_Stadt"),
                            ("DE946", "Ammerland"),
                            ("DE947", "Aurich"),
                            ("DE948", "Cloppenburg"),
                            ("DE949", "Emsland"),
                            ("DE94A", "Friesland_DE_"),
                            ("DE94B", "Grafschaft_Bentheim"),
                            ("DE94C", "Leer"),
                            ("DE94D", "Oldenburg_Landkreis"),
                            ("DE94E", "Osnabruck_Landkreis"),
                            ("DE94F", "Vechta"),
                            ("DE94G", "Wesermarsch"),
                            ("DE94H", "Wittmund"),
                            ("DEA11", "Dusseldorf_Kreisfreie_Stadt"),
                            ("DEA12", "Duisburg_Kreisfreie_Stadt"),
                            ("DEA13", "Essen_Kreisfreie_Stadt"),
                            ("DEA14", "Krefeld_Kreisfreie_Stadt"),
                            ("DEA15", "Monchengladbach_Kreisfreie_Stadt"),
                            ("DEA16", "Mulheim_an_der_Ruhr_Kreisfreie_Stadt"),
                            ("DEA17", "Oberhausen_Kreisfreie_Stadt"),
                            ("DEA18", "Remscheid_Kreisfreie_Stadt"),
                            ("DEA19", "Solingen_Kreisfreie_Stadt"),
                            ("DEA1A", "Wuppertal_Kreisfreie_Stadt"),
                            ("DEA1B", "Kleve"),
                            ("DEA1C", "Mettmann"),
                            ("DEA1D", "Rhein_Kreis_Neuss"),
                            ("DEA1E", "Viersen"),
                            ("DEA1F", "Wesel"),
                            ("DEA22", "Bonn_Kreisfreie_Stadt"),
                            ("DEA23", "Koln_Kreisfreie_Stadt"),
                            ("DEA24", "Leverkusen_Kreisfreie_Stadt"),
                            ("DEA26", "Duren"),
                            ("DEA27", "Rhein_Erft_Kreis"),
                            ("DEA28", "Euskirchen"),
                            ("DEA29", "Heinsberg"),
                            ("DEA2A", "Oberbergischer_Kreis"),
                            ("DEA2B", "Rheinisch_Bergischer_Kreis"),
                            ("DEA2C", "Rhein_Sieg_Kreis"),
                            ("DEA2D", "Stadteregion_Aachen"),
                            ("DEA31", "Bottrop_Kreisfreie_Stadt"),
                            ("DEA32", "Gelsenkirchen_Kreisfreie_Stadt"),
                            ("DEA33", "Munster_Kreisfreie_Stadt"),
                            ("DEA34", "Borken"),
                            ("DEA35", "Coesfeld"),
                            ("DEA36", "Recklinghausen"),
                            ("DEA37", "Steinfurt"),
                            ("DEA38", "Warendorf"),
                            ("DEA41", "Bielefeld_Kreisfreie_Stadt"),
                            ("DEA42", "Gutersloh"),
                            ("DEA43", "Herford"),
                            ("DEA44", "Hoxter"),
                            ("DEA45", "Lippe"),
                            ("DEA46", "Minden_Lubbecke"),
                            ("DEA47", "Paderborn"),
                            ("DEA51", "Bochum_Kreisfreie_Stadt"),
                            ("DEA52", "Dortmund_Kreisfreie_Stadt"),
                            ("DEA53", "Hagen_Kreisfreie_Stadt"),
                            ("DEA54", "Hamm_Kreisfreie_Stadt"),
                            ("DEA55", "Herne_Kreisfreie_Stadt"),
                            ("DEA56", "Ennepe_Ruhr_Kreis"),
                            ("DEA57", "Hochsauerlandkreis"),
                            ("DEA58", "Markischer_Kreis"),
                            ("DEA59", "Olpe"),
                            ("DEA5A", "Siegen_Wittgenstein"),
                            ("DEA5B", "Soest"),
                            ("DEA5C", "Unna"),
                            ("DEB11", "Koblenz_Kreisfreie_Stadt"),
                            ("DEB12", "Ahrweiler"),
                            ("DEB13", "Altenkirchen_Westerwald_"),
                            ("DEB14", "Bad_Kreuznach"),
                            ("DEB15", "Birkenfeld"),
                            ("DEB17", "Mayen_Koblenz"),
                            ("DEB18", "Neuwied"),
                            ("DEB1A", "Rhein_Lahn_Kreis"),
                            ("DEB1B", "Westerwaldkreis"),
                            ("DEB1C", "Cochem_Zell"),
                            ("DEB1D", "Rhein_Hunsruck_Kreis"),
                            ("DEB21", "Trier_Kreisfreie_Stadt"),
                            ("DEB22", "Bernkastel_Wittlich"),
                            ("DEB23", "Eifelkreis_Bitburg_Prum"),
                            ("DEB24", "Vulkaneifel"),
                            ("DEB25", "Trier_Saarburg"),
                            ("DEB31", "Frankenthal_Pfalz_Kreisfreie_Stadt"),
                            ("DEB32", "Kaiserslautern_Kreisfreie_Stadt"),
                            ("DEB33", "Landau_in_der_Pfalz_Kreisfreie_Stadt"),
                            ("DEB34", "Ludwigshafen_am_Rhein_Kreisfreie_Stadt"),
                            ("DEB35", "Mainz_Kreisfreie_Stadt"),
                            ("DEB36", "Neustadt_an_der_Weinstrasse_Kreisfreie_Stadt"),
                            ("DEB37", "Pirmasens_Kreisfreie_Stadt"),
                            ("DEB38", "Speyer_Kreisfreie_Stadt"),
                            ("DEB39", "Worms_Kreisfreie_Stadt"),
                            ("DEB3A", "Zweibrucken_Kreisfreie_Stadt"),
                            ("DEB3B", "Alzey_Worms"),
                            ("DEB3C", "Bad_Durkheim"),
                            ("DEB3D", "Donnersbergkreis"),
                            ("DEB3E", "Germersheim"),
                            ("DEB3F", "Kaiserslautern_Landkreis"),
                            ("DEB3G", "Kusel"),
                            ("DEB3H", "Sudliche_Weinstrasse"),
                            ("DEB3I", "Rhein_Pfalz_Kreis"),
                            ("DEB3J", "Mainz_Bingen"),
                            ("DEB3K", "Sudwestpfalz"),
                            ("DEC01", "Regionalverband_Saarbrucken"),
                            ("DEC02", "Merzig_Wadern"),
                            ("DEC03", "Neunkirchen"),
                            ("DEC04", "Saarlouis"),
                            ("DEC05", "Saarpfalz_Kreis"),
                            ("DEC06", "St_Wendel"),
                            ("DED21", "Dresden_Kreisfreie_Stadt"),
                            ("DED2C", "Bautzen"),
                            ("DED2D", "Gorlitz"),
                            ("DED2E", "Meissen"),
                            ("DED2F", "Sachsische_Schweiz_Osterzgebirge"),
                            ("DED41", "Chemnitz_Kreisfreie_Stadt"),
                            ("DED42", "Erzgebirgskreis"),
                            ("DED43", "Mittelsachsen"),
                            ("DED44", "Vogtlandkreis"),
                            ("DED45", "Zwichau"),
                            ("DED51", "Leipzig_Kreisfreie_Stadt"),
                            ("DED52", "Leipzig"),
                            ("DED53", "Nordsachsen"),
                            ("DEE01", "Dessau_Rosslau_Kreisfreie_Stadt"),
                            ("DEE02", "Halle_Saale_Kreisfreie_Stadt"),
                            ("DEE03", "Magdeburg_Kreisfreie_Stadt"),
                            ("DEE04", "Altmarkkreis_Salzwedel"),
                            ("DEE05", "Anhalt_Bitterfeld"),
                            ("DEE06", "Jerichower_Land"),
                            ("DEE07", "Borde"),
                            ("DEE08", "Burgenland_DE_"),
                            ("DEE09", "Harz"),
                            ("DEE0A", "Mansfeld_Sudharz"),
                            ("DEE0B", "Saalekreis"),
                            ("DEE0C", "Salzlandkreis"),
                            ("DEE0D", "Stendal"),
                            ("DEE0E", "Wittenberg"),
                            ("DEF01", "Flensburg_Kreisfreie_Stadt"),
                            ("DEF02", "Kiel_Kreisfreie_Stadt"),
                            ("DEF03", "Lubeck_Kreisfreie_Stadt"),
                            ("DEF04", "Neumunster_Kreisfreie_Stadt"),
                            ("DEF05", "Dithmarschen"),
                            ("DEF06", "Herzogtum_Lauenburg"),
                            ("DEF07", "Nordfriesland"),
                            ("DEF08", "Ostholstein"),
                            ("DEF09", "Pinneberg"),
                            ("DEF0A", "Plon"),
                            ("DEF0B", "Rendsburg_Eckernforde"),
                            ("DEF0C", "Schleswig_Flensburg"),
                            ("DEF0D", "Segeberg"),
                            ("DEF0E", "Steinburg"),
                            ("DEF0F", "Stormarn"),
                            ("DEG01", "Erfurt_Kreisfreie_Stadt"),
                            ("DEG02", "Gera_Kreisfreie_Stadt"),
                            ("DEG03", "Jena_Kreisfreie_Stadt"),
                            ("DEG04", "Suhl_Kreisfreie_Stadt"),
                            ("DEG05", "Weimar_Kreisfreie_Stadt"),
                            ("DEG06", "Eichsfeld"),
                            ("DEG07", "Nordhausen"),
                            ("DEG09", "Unstrut_Hainich_Kreis"),
                            ("DEG0A", "Kyffhauserkreis"),
                            ("DEG0B", "Schmalkalden_Meiningen"),
                            ("DEG0C", "Gotha"),
                            ("DEG0D", "Sommerda"),
                            ("DEG0E", "Hildburghausen"),
                            ("DEG0F", "Ilm_Kreis"),
                            ("DEG0G", "Weimarer_Land"),
                            ("DEG0H", "Sonneberg"),
                            ("DEG0I", "Saalfeld_Rudolstadt"),
                            ("DEG0J", "Saale_Holzland_Kreis"),
                            ("DEG0K", "Saale_Orla_Kreis"),
                            ("DEG0L", "Greiz"),
                            ("DEG0M", "Altenburger_Land"),
                            ("DEG0N", "Eisenach_Kreisfreie_Stadt"),
                            ("DEG0P", "Wartburgkreis"),
                            ("DK011", "Byen_Kobenhavn"),
                            ("DK012", "Kobenhavns_omegn"),
                            ("DK013", "Nordsjaelland"),
                            ("DK014", "Bornholm"),
                            ("DK021", "Ostsjaelland"),
                            ("DK022", "Vest_og_Sydsjaelland"),
                            ("DK031", "Fyn"),
                            ("DK032", "Sydjylland"),
                            ("DK041", "Vestjylland"),
                            ("DK042", "Ostjylland"),
                            ("DK050", "Nordjylland"),
                            ("EE001", "Pohja_Eesti"),
                            ("EE004", "Laane_Eesti"),
                            ("EE006", "Kesk_Eesti"),
                            ("EE007", "Kirde_Eesti"),
                            ("EE008", "Louna_Eesti"),
                            ("EL301", "Voreios_Tomeas_Athinon"),
                            ("EL302", "Dytikos_Tomeas_Athinon"),
                            ("EL303", "Kentrikos_Tomeas_Athinon"),
                            ("EL304", "Notios_Tomeas_Athinon"),
                            ("EL305", "Anatoliki_Attiki"),
                            ("EL306", "Dytiki_Attiki"),
                            ("EL307", "Peiraias_Nisoi"),
                            ("EL411", "Lesvos"),
                            ("EL412", "Samos"),
                            ("EL413", "Chios"),
                            ("EL421", "Dodekanisos"),
                            ("EL422", "Kyklades"),
                            ("EL431", "Irakleio"),
                            ("EL432", "Lasithi"),
                            ("EL433", "Rethymni"),
                            ("EL434", "Chania"),
                            ("EL511", "Evros"),
                            ("EL512", "Xanthi"),
                            ("EL513", "Rodopi"),
                            ("EL514", "Drama"),
                            ("EL515", "Thasos_Kavala"),
                            ("EL521", "Imathia"),
                            ("EL522", "Thessaloniki"),
                            ("EL523", "Kilkis"),
                            ("EL524", "Pella"),
                            ("EL525", "Pieria"),
                            ("EL526", "Serres"),
                            ("EL527", "Chalkidiki"),
                            ("EL531", "Grevena_Kozani"),
                            ("EL542", "Thesprotia"),
                            ("EL532", "Kastoria"),
                            ("EL533", "Florina"),
                            ("EL541", "Arta_Preveza"),
                            ("EL543", "Ioannina"),
                            ("EL611", "Karditsa_Trikala"),
                            ("EL612", "Larisa"),
                            ("EL613", "Magnisia_Sporades"),
                            ("EL621", "Zakynthos"),
                            ("EL622", "Kerkyra"),
                            ("EL623", "Ithaki_Kefallinia"),
                            ("EL624", "Lefkada"),
                            ("EL631", "Aitoloakarnania"),
                            ("EL632", "Achaia"),
                            ("EL633", "Ileia"),
                            ("EL641", "Voiotia"),
                            ("EL642", "Evvoia"),
                            ("EL643", "Evrytania"),
                            ("EL644", "Fthiotida"),
                            ("EL645", "Fokida"),
                            ("EL651", "Argolida_Arkadia"),
                            ("EL652", "Korinthia"),
                            ("EL653", "lakonia_Messinia"),
                            ("ES111", "A_Coruna"),
                            ("ES112", "Lugo"),
                            ("ES113", "Ourense"),
                            ("ES114", "Pontevedra"),
                            ("ES120", "Asturias"),
                            ("ES130", "Cantabria"),
                            ("ES211", "Alava"),
                            ("ES212", "Guipuzcoa"),
                            ("ES213", "Vizcaya"),
                            ("ES220", "Navarra"),
                            ("ES230", "La_Rioja"),
                            ("ES241", "Huesca"),
                            ("ES242", "Teruel"),
                            ("ES243", "Zaragoza"),
                            ("ES300", "Madrid"),
                            ("ES411", "Avila"),
                            ("ES412", "Burgos"),
                            ("ES413", "Leon"),
                            ("ES414", "Palencia"),
                            ("ES415", "Salamanca"),
                            ("ES416", "Segovia"),
                            ("ES417", "Soria"),
                            ("ES418", "Valladolid"),
                            ("ES419", "Zamora"),
                            ("ES421", "Albacete"),
                            ("ES422", "Ciudad_Real"),
                            ("ES423", "Cuenca"),
                            ("ES424", "Guadalajara"),
                            ("ES425", "Toledo"),
                            ("ES431", "Badajoz"),
                            ("ES432", "Caceres"),
                            ("ES511", "Barcelona"),
                            ("ES512", "Girona"),
                            ("ES513", "Lleida"),
                            ("ES514", "Tarragona"),
                            ("ES521", "Alicante_Alacant"),
                            ("ES522", "Castellon_Castello"),
                            ("ES523", "Valencia_Valencia"),
                            ("ES531", "Eivissa_y_Formentera"),
                            ("ES532", "Mallorca"),
                            ("ES533", "Menorca"),
                            ("ES611", "Almeria"),
                            ("ES612", "Cadiz"),
                            ("ES613", "Cordoba"),
                            ("ES614", "Granada"),
                            ("ES615", "Huelva"),
                            ("ES616", "Jaen"),
                            ("ES617", "Malaga"),
                            ("ES618", "Sevilla"),
                            ("ES620", "Murcia"),
                            ("ES630", "Ceuta"),
                            ("ES640", "Melilla"),
                            ("ES703", "El_Hierro"),
                            ("ES704", "Fuerteventura"),
                            ("ES705", "Gran_Canaria"),
                            ("ES706", "La_Gomera"),
                            ("ES707", "La_Palma"),
                            ("ES708", "Lanzarote"),
                            ("ES709", "Tenerife"),
                            ("FI193", "Keski_Suomi"),
                            ("FI194", "Etela_Pohjanmaa"),
                            ("FI195", "Pohjanmaa"),
                            ("FI196", "Satakunta"),
                            ("FI197", "Pirkanmaa"),
                            ("FI1B1", "Helsinki_Uusimaa"),
                            ("FI1C1", "Varsinais_Suomi"),
                            ("FI1C2", "Kanta_Hame"),
                            ("FI1C3", "Paijat_Hame"),
                            ("FI1C4", "Kymenlaakso"),
                            ("FI1C5", "Etela_Karjala"),
                            ("FI1D1", "Etela_Savo"),
                            ("FI1D2", "Pohjois_Savo"),
                            ("FI1D3", "Pohjois_Karjala"),
                            ("FI1D5", "Keski_Pohjanmaa"),
                            ("FI1D7", "Lappi"),
                            ("FI1D8", "Kainuu"),
                            ("FI1D9", "Pohjois_Pohjanmaa"),
                            ("FI200", "Aland"),
                            ("FR101", "Paris"),
                            ("FR102", "Seine_et_Marne"),
                            ("FR103", "Yvelines"),
                            ("FR104", "Essonne"),
                            ("FR105", "Hauts_de_Seine"),
                            ("FR106", "Seine_Saint_Denis"),
                            ("FR107", "Val_de_Marne"),
                            ("FR108", "Val_d_Oise"),
                            ("FRB01", "Cher"),
                            ("FRB02", "Eure_et_Loir"),
                            ("FRB03", "Indre"),
                            ("FRB04", "Indre_et_Loire"),
                            ("FRB05", "Loir_et_Cher"),
                            ("FRB06", "Loiret"),
                            ("FRC11", "Cote_d_Or"),
                            ("FRC12", "Nievre"),
                            ("FRC13", "Saone_et_Loire"),
                            ("FRC14", "Yonne"),
                            ("FRC21", "Doubs"),
                            ("FRC22", "Jura"),
                            ("FRC23", "Haute_Saone"),
                            ("FRC24", "Territoire_de_Belfort"),
                            ("FRD11", "Calvados"),
                            ("FRD12", "Manche"),
                            ("FRD13", "Orne"),
                            ("FRD21", "Eure"),
                            ("FRD22", "Seine_Maritime"),
                            ("FRE11", "Nord"),
                            ("FRE12", "Pas_de_Calais"),
                            ("FRE21", "Aisne"),
                            ("FRE22", "Oise"),
                            ("FRE23", "Somme"),
                            ("FRF11", "Bas_Rhin"),
                            ("FRF12", "Haut_Rhin"),
                            ("FRF21", "Ardennes"),
                            ("FRF22", "Aube"),
                            ("FRF23", "Marne"),
                            ("FRF24", "Haute_Marne"),
                            ("FRF31", "Meurthe_et_Moselle"),
                            ("FRF32", "Meuse"),
                            ("FRF33", "Moselle"),
                            ("FRF34", "Vosges"),
                            ("FRG01", "Loire_Atlantique"),
                            ("FRG02", "Maine_et_Loire"),
                            ("FRG03", "Mayenne"),
                            ("FRG04", "Sarthe"),
                            ("FRG05", "Vendee"),
                            ("FRH01", "Cotes_d_Armor"),
                            ("FRH02", "Finistere"),
                            ("FRH03", "Ille_et_Vilaine"),
                            ("FRH04", "Morbihan"),
                            ("FRI11", "Dordogne"),
                            ("FRI12", "Gironde"),
                            ("FRI13", "Landes"),
                            ("FRI14", "Lot_et_Garonne"),
                            ("FRI15", "Pyrenees_Atlantiques"),
                            ("FRI21", "Correze"),
                            ("FRI22", "Creuse"),
                            ("FRI23", "Haute_Vienne"),
                            ("FRI31", "Charente"),
                            ("FRI32", "Charente_Maritime"),
                            ("FRI33", "Deux_Sevres"),
                            ("FRI34", "Vienne"),
                            ("FRJ11", "Aude"),
                            ("FRJ12", "Gard"),
                            ("FRJ13", "Herault"),
                            ("FRJ14", "Lozere"),
                            ("FRJ15", "Pyrenees_Orientales"),
                            ("FRJ21", "Ariege"),
                            ("FRJ22", "Aveyron"),
                            ("FRJ23", "Haute_Garonne"),
                            ("FRJ24", "Gers"),
                            ("FRJ25", "Lot"),
                            ("FRJ26", "Hautes_Pyrenees"),
                            ("FRJ27", "Tarn"),
                            ("FRJ28", "Tarn_et_Garonne"),
                            ("FRK11", "Allier"),
                            ("FRK12", "Cantal"),
                            ("FRK13", "Haute_Loire"),
                            ("FRK14", "Puy_de_Dome"),
                            ("FRK21", "Ain"),
                            ("FRK22", "Ardeche"),
                            ("FRK23", "Drome"),
                            ("FRK24", "Isere"),
                            ("FRK25", "Loire"),
                            ("FRK26", "Rhone"),
                            ("FRK27", "Savoie"),
                            ("FRK28", "Haute_Savoie"),
                            ("FRL01", "Alpes_de_Haute_Provence"),
                            ("FRL02", "Hautes_Alpes"),
                            ("FRL03", "Alpes_Maritimes"),
                            ("FRL04", "Bouches_du_Rhone"),
                            ("FRL05", "Var"),
                            ("FRL06", "Vaucluse"),
                            ("FRM01", "Corse_du_Sud"),
                            ("FRM02", "Haute_Corse"),
                            ("FRY30", "Guyane"),
                            ("FRY40", "La_Reunion"),
                            ("HR031", "Primorsko_goranska_zupanija"),
                            ("HR032", "Licko_senjska_Zupanija"),
                            ("HR033", "Zadarska_zupanija"),
                            ("HR034", "Sibensko_kninska_zupanija"),
                            ("HR035", "Splitsko_dalmatinska_zupanija"),
                            ("HR036", "Istarska_zupanija"),
                            ("HR037", "Dubrovacko_neretvanska_Zupanija"),
                            ("HR041", "Grad_Zagreb"),
                            ("HR042", "Zagrebacka_Zupanija"),
                            ("HR043", "Krapinsko_zagorska_zupanija"),
                            ("HR044", "Varazdinska_zupanija"),
                            ("HR045", "Koprivnicko_krizevacka_Zupanija"),
                            ("HR046", "Medimurska_Zupanija"),
                            ("HR047", "Bjelovarsko_bilogorska_zupanija"),
                            ("HR048", "Viroviticko_podravska_Zupanija"),
                            ("HR049", "Pozesko_slavonska_zupanija"),
                            ("HR04A", "Brodsko_posavska_zupanija"),
                            ("HR04B", "Osjecko_baranjska_Zupanija"),
                            ("HR04C", "Vukovarsko_srijemska_zupanija"),
                            ("HR04D", "Karlovacka_Zupanija"),
                            ("HR04E", "Sisacko_moslavacka_Zupanija"),
                            ("HU110", "Budapest"),
                            ("HU120", "Pest"),
                            ("HU211", "Fejer"),
                            ("HU212", "Komarom_Esztergom"),
                            ("HU213", "Veszprem"),
                            ("HU221", "Gyor_moson_sopron"),
                            ("HU222", "Vas"),
                            ("HU223", "Zala"),
                            ("HU231", "Baranya"),
                            ("HU232", "Somogy"),
                            ("HU233", "Tolna"),
                            ("HU311", "Borsod_Abauj_Zemplen"),
                            ("HU312", "Heves"),
                            ("HU313", "Nograd"),
                            ("HU321", "Hajdu_Bihar"),
                            ("HU322", "Jasz_Nagykun_Szolnok"),
                            ("HU323", "Szabolcs_Szatmar_Bereg"),
                            ("HU331", "Bacs_Kiskun"),
                            ("HU332", "Bekes"),
                            ("HU333", "Csongrad"),
                            ("IE041", "Border"),
                            ("IE042", "West"),
                            ("IE051", "Mid_West"),
                            ("IE052", "South_East"),
                            ("IE053", "South_West"),
                            ("IE061", "Dublin"),
                            ("IE062", "Mid_East"),
                            ("IE063", "Midland"),
                            ("ITC11", "Torino"),
                            ("ITC12", "Vercelli"),
                            ("ITC13", "Biella"),
                            ("ITC14", "Verbano_Cusio_Ossola"),
                            ("ITC15", "Novara"),
                            ("ITC16", "Cuneo"),
                            ("ITC17", "Asti"),
                            ("ITC18", "Alessandria"),
                            ("ITC20", "Valle_d_Aosta_Vallee_d_Aoste"),
                            ("ITC31", "Imperia"),
                            ("ITC32", "Savona"),
                            ("ITC33", "Genova"),
                            ("ITC34", "La_Spezia"),
                            ("ITC41", "Varese"),
                            ("ITC42", "Como"),
                            ("ITC43", "Lecco"),
                            ("ITC44", "Sondrio"),
                            ("ITC46", "Bergamo"),
                            ("ITC47", "Brescia"),
                            ("ITC48", "Pavia"),
                            ("ITC49", "Lodi"),
                            ("ITC4A", "Cremona"),
                            ("ITC4B", "Mantova"),
                            ("ITC4C", "Milano"),
                            ("ITC4D", "Monza_e_della_Brianza"),
                            ("ITF11", "L_Aquila"),
                            ("ITF12", "Teramo"),
                            ("ITF13", "Pescara"),
                            ("ITF14", "Chieti"),
                            ("ITF21", "Isernia"),
                            ("ITF22", "Campobasso"),
                            ("ITF31", "Caserta"),
                            ("ITF32", "Benevento"),
                            ("ITF33", "Napoli"),
                            ("ITF34", "Avellino"),
                            ("ITF35", "Salerno"),
                            ("ITF43", "Taranto"),
                            ("ITF44", "Brindisi"),
                            ("ITF45", "Lecce"),
                            ("ITF46", "Foggia"),
                            ("ITF47", "Bari"),
                            ("ITF48", "Barletta_Andria_Trani"),
                            ("ITF51", "Potenza"),
                            ("ITF52", "Matera"),
                            ("ITF61", "Cosenza"),
                            ("ITF62", "Crotone"),
                            ("ITF63", "Catanzaro"),
                            ("ITF64", "Vibo_Valentia"),
                            ("ITF65", "Reggio_di_Calabria"),
                            ("ITG11", "Trapani"),
                            ("ITG12", "Palermo"),
                            ("ITG13", "Messina"),
                            ("ITG14", "Agrigento"),
                            ("ITG15", "Caltanissetta"),
                            ("ITG16", "Enna"),
                            ("ITG17", "Catania"),
                            ("ITG18", "Ragusa"),
                            ("ITG19", "Siracusa"),
                            ("ITG25", "Sassari"),
                            ("ITG26", "Nuoro"),
                            ("ITG27", "Cagliari"),
                            ("ITG28", "Oristano"),
                            ("ITG29", "Olbia_Tempio"),
                            ("ITG2A", "Ogliastra"),
                            ("ITG2B", "Medio_Campidano"),
                            ("ITG2C", "Carbonia_Iglesias"),
                            ("ITH10", "Bolzano_Bozen"),
                            ("ITH20", "Trento"),
                            ("ITH31", "Verona"),
                            ("ITH32", "Vicenza"),
                            ("ITH33", "Belluno"),
                            ("ITH34", "Treviso"),
                            ("ITH35", "Venezia"),
                            ("ITH36", "Padova"),
                            ("ITH37", "Rovigo"),
                            ("ITH41", "Pordenone"),
                            ("ITH42", "Udine"),
                            ("ITH43", "Gorizia"),
                            ("ITH44", "Trieste"),
                            ("ITH51", "Piacenza"),
                            ("ITH52", "Parma"),
                            ("ITH53", "Reggio_nell_Emilia"),
                            ("ITH54", "Modena"),
                            ("ITH55", "Bologna"),
                            ("ITH56", "Ferrara"),
                            ("ITH57", "Ravenna"),
                            ("ITH58", "Forli_Cesena"),
                            ("ITH59", "Rimini"),
                            ("ITI11", "Massa_Carrara"),
                            ("ITI12", "Lucca"),
                            ("ITI13", "Pistoia"),
                            ("ITI14", "Firenze"),
                            ("ITI15", "Prato"),
                            ("ITI16", "Livorno"),
                            ("ITI17", "Pisa"),
                            ("ITI18", "Arezzo"),
                            ("ITI19", "Siena"),
                            ("ITI1A", "Grosseto"),
                            ("ITI21", "Perugia"),
                            ("ITI22", "Terni"),
                            ("ITI31", "Pesaro_e_Urbino"),
                            ("ITI32", "Ancona"),
                            ("ITI33", "Macerata"),
                            ("ITI34", "Ascoli_Piceno"),
                            ("ITI35", "Fermo"),
                            ("ITI41", "Viterbo"),
                            ("ITI42", "Rieti"),
                            ("ITI43", "Roma"),
                            ("ITI44", "Latina"),
                            ("ITI45", "Frosinone"),
                            ("LT011", "Vilniaus_apskritis"),
                            ("LT021", "Alytaus_apskritis"),
                            ("LT022", "Kauno_apskritis"),
                            ("LT023", "Klaipedos_apskritis"),
                            ("LT024", "Marijampoles_apskritis"),
                            ("LT025", "Panevezio_apskritis"),
                            ("LT026", "Siauliu_apskritis"),
                            ("LT027", "Taurages_apskritis"),
                            ("LT028", "Telsiu_apskritis"),
                            ("LT029", "Utenos_apskritis"),
                            ("LV003", "Kurzeme"),
                            ("LV005", "Latgale"),
                            ("LV006", "Riga"),
                            ("LV007", "Pieriga"),
                            ("LV008", "Vidzeme"),
                            ("LV009", "Zemgale"),
                            ("MT002", "Gozo_And_CominoGhawdex_U_Kemmuna"),
                            ("NL111", "Oost_Groningen"),
                            ("NL112", "Delfzijl_en_omgeving"),
                            ("NL113", "Overig_Groningen"),
                            ("NL124", "Noord_Friesland"),
                            ("NL125", "Zuidwest_Friesland"),
                            ("NL126", "Zuidoost_Friesland"),
                            ("NL131", "Noord_Drenthe"),
                            ("NL132", "Zuidoost_Drenthe"),
                            ("NL133", "Zuidwest_Drenthe"),
                            ("NL211", "Noord_Overijssel"),
                            ("NL212", "Zuidwest_Overijssel"),
                            ("NL213", "Twente"),
                            ("NL221", "Veluwe"),
                            ("NL224", "Zuidwest_Gelderland"),
                            ("NL225", "Achterhoek"),
                            ("NL226", "Arnhem_Nijmegen"),
                            ("NL230", "Flevoland"),
                            ("NL310", "Utrecht"),
                            ("NL321", "Kop_van_Noord_Holland"),
                            ("NL323", "IJmond"),
                            ("NL324", "Agglomeratie_Haarlem"),
                            ("NL325", "Zaanstreek"),
                            ("NL327", "Het_Gooi_en_Vechtstreek"),
                            ("NL328", "Alkmaar_en_omgeving"),
                            ("NL329", "Groot_Amsterdam"),
                            ("NL332", "Agglomeratie_s_Gravenhage"),
                            ("NL333", "Delft_en_Westland"),
                            ("NL337", "Agglomeratie_Leiden_en_Bollenstreek"),
                            ("NL33A", "Zuidoost_Zuid_Holland"),
                            ("NL33B", "Oost_Zuid_Holland"),
                            ("NL33C", "Groot_Rijnmond"),
                            ("NL341", "Zeeuwsch_Vlaanderen"),
                            ("NL342", "Overig_Zeeland"),
                            ("NL411", "West_Noord_Brabant"),
                            ("NL412", "Midden_Noord_Brabant"),
                            ("NL413", "Noordoost_Noord_Brabant"),
                            ("NL414", "Zuidoost_Noord_Brabant"),
                            ("NL421", "Noord_Limburg"),
                            ("NL422", "Midden_Limburg"),
                            ("NL423", "Zuid_Limburg"),
                            ("PL213", "Miasto_Krakow"),
                            ("PL214", "Krakowski"),
                            ("PL217", "Tarnowski"),
                            ("PL218", "Nowosadecki"),
                            ("PL219", "Nowotarski"),
                            ("PL21A", "Oswiecimski"),
                            ("PL224", "Czestochowski"),
                            ("PL225", "Bielski"),
                            ("PL227", "Rybnicki"),
                            ("PL228", "Bytomski"),
                            ("PL229", "Gliwicki"),
                            ("PL22A", "Katowicki"),
                            ("PL22B", "Sosnowiecki"),
                            ("PL22C", "Tyski"),
                            ("PL411", "Pilski"),
                            ("PL414", "Koninski"),
                            ("PL415", "Miasto_Poznan"),
                            ("PL416", "Kaliski"),
                            ("PL417", "Leszczynski"),
                            ("PL418", "Poznanski"),
                            ("PL424", "Miasto_Szczecin"),
                            ("PL426", "Koszalinski"),
                            ("PL427", "Szczecinecko_pyrzycki"),
                            ("PL428", "Szczecinski"),
                            ("PL431", "Gorzowski"),
                            ("PL432", "Zielonogorski"),
                            ("PL514", "Miasto_Wroclaw"),
                            ("PL515", "Jeleniogorski"),
                            ("PL516", "Legnicko_glogowski"),
                            ("PL517", "Walbrzyski"),
                            ("PL518", "Wroclawski"),
                            ("PL523", "Nyski"),
                            ("PL524", "Opolski"),
                            ("PL613", "Bydgosko_torunski"),
                            ("PL616", "Grudziadzki"),
                            ("PL617", "Inowroclawski"),
                            ("PL618", "Swiecki"),
                            ("PL619", "Wloclawski"),
                            ("PL621", "Elblaski"),
                            ("PL622", "Olsztynski"),
                            ("PL623", "Elcki"),
                            ("PL633", "Trojmiejski"),
                            ("PL634", "Gdanski"),
                            ("PL636", "Slupski"),
                            ("PL637", "Chojnicki"),
                            ("PL638", "Starogardzki"),
                            ("PL711", "Miasto_Lodz"),
                            ("PL712", "Lodzki"),
                            ("PL713", "Piotrkowski"),
                            ("PL714", "Sieradzki"),
                            ("PL715", "Skierniewicki"),
                            ("PL721", "Kielecki"),
                            ("PL722", "Sandomiersko_jedrzejowski"),
                            ("PL811", "Bialski"),
                            ("PL812", "Chelmsko_zamojski"),
                            ("PL814", "Lubelski"),
                            ("PL815", "Pulawski"),
                            ("PL821", "Krosnienski"),
                            ("PL822", "Przemyski"),
                            ("PL823", "Rzeszowski"),
                            ("PL824", "Tarnobrzeski"),
                            ("PL841", "Bialostocki"),
                            ("PL842", "Lomzynski"),
                            ("PL843", "Suwalski"),
                            ("PL911", "Miasto_Warszawa"),
                            ("PL912", "Warszawski_wschodni"),
                            ("PL913", "Warszawski_zachodni"),
                            ("PL921", "Radomski"),
                            ("PL922", "Ciechanowski"),
                            ("PL923", "Plocki"),
                            ("PL924", "Ostrolecki"),
                            ("PL925", "Siedlecki"),
                            ("PL926", "Zyrardowski"),
                            ("PT111", "Minho_Lima"),
                            ("PT112", "Cavado"),
                            ("PT119", "Ave"),
                            ("PT11A", "Area_Metropolitana_do_Porto"),
                            ("PT11B", "Alto_Tamega"),
                            ("PT11C", "Tamega_e_Sousa"),
                            ("PT11D", "Douro"),
                            ("PT11E", "Terras_de_Tras_os_Montes"),
                            ("PT150", "Algarve"),
                            ("PT16B", "Oeste"),
                            ("PT16D", "Regiao_de_Aveiro"),
                            ("PT16E", "Regiao_de_Coimbra"),
                            ("PT16F", "Regiao_de_Leiria"),
                            ("PT16G", "Viseu_Dao_Lafoes"),
                            ("PT16H", "Beira_Baixa"),
                            ("PT16I", "Medio_Tejo"),
                            ("PT16J", "Beiras_e_Serra_da_Estrela"),
                            ("PT170", "Area_Metropolitana_de_Lisboa"),
                            ("PT181", "Alentejo_Litoral"),
                            ("PT184", "Baixo_Alentejo"),
                            ("PT185", "Leziria_do_Tejo"),
                            ("PT186", "Alto_Alentejo"),
                            ("PT187", "Alentejo_Central"),
                            ("PT200", "Regiao_Autonoma_dos_Acores"),
                            ("PT300", "Regiao_Autonoma_da_Madeira"),
                            ("RO111", "Bihor"),
                            ("RO112", "Bistrita_nasaud"),
                            ("RO113", "Cluj"),
                            ("RO114", "Maramures"),
                            ("RO115", "Satu_Mare"),
                            ("RO116", "Salaj"),
                            ("RO121", "Alba"),
                            ("RO122", "Brasov"),
                            ("RO123", "Covasna"),
                            ("RO124", "Harghita"),
                            ("RO125", "Mures"),
                            ("RO126", "Sibiu"),
                            ("RO211", "Bacau"),
                            ("RO212", "Botosani"),
                            ("RO213", "Iasi"),
                            ("RO214", "Neamt"),
                            ("RO215", "Suceava"),
                            ("RO216", "Vaslui"),
                            ("RO221", "Braila"),
                            ("RO222", "Buzau"),
                            ("RO223", "Constanta"),
                            ("RO224", "Galati"),
                            ("RO225", "Tulcea"),
                            ("RO226", "Vrancea"),
                            ("RO311", "Arges"),
                            ("RO312", "Calarasi"),
                            ("RO313", "Dambovita"),
                            ("RO314", "Giurgiu"),
                            ("RO315", "Ialomita"),
                            ("RO316", "Prahova"),
                            ("RO317", "Teleorman"),
                            ("RO321", "Bucuresti"),
                            ("RO322", "Ilfov"),
                            ("RO411", "Dolj"),
                            ("RO412", "Gorj"),
                            ("RO413", "Mehedinti"),
                            ("RO414", "Olt"),
                            ("RO415", "Valcea"),
                            ("RO421", "Arad"),
                            ("RO422", "Caras_severin"),
                            ("RO423", "Hunedoara"),
                            ("RO424", "Timis"),
                            ("SE110", "Stockholms_lan"),
                            ("SE121", "Uppsala_lan"),
                            ("SE122", "Sodermanlands_lan"),
                            ("SE123", "Ostergotlands_lan"),
                            ("SE124", "Orebro_lan"),
                            ("SE125", "Vastmanlands_lan"),
                            ("SE211", "Jonkopings_lan"),
                            ("SE212", "Kronobergs_lan"),
                            ("SE213", "Kalmar_lan"),
                            ("SE214", "Gotlands_lan"),
                            ("SE221", "Blekinge_lan"),
                            ("SE224", "Skane_lan"),
                            ("SE231", "Hallands_lan"),
                            ("SE232", "Vastra_Gotalands_lan"),
                            ("SE311", "Varmlands_lan"),
                            ("SE312", "Dalarnas_lan"),
                            ("SE313", "Gavleborgs_lan"),
                            ("SE321", "Vasternorrlands_lan"),
                            ("SE322", "Jamtlands_lan"),
                            ("SE331", "Vasterbottens_lan"),
                            ("SE332", "Norrbottens_lan"),
                            ("SI031", "Pomurska"),
                            ("SI032", "Podravska"),
                            ("SI033", "Koroska"),
                            ("SI034", "Savinjska"),
                            ("SI035", "Zasavska"),
                            ("SI036", "Posavska"),
                            ("SI037", "Jugovzhodna_Slovenija"),
                            ("SI038", "Primorsko_notranjska"),
                            ("SI041", "Osrednjeslovenska"),
                            ("SI042", "Gorenjska"),
                            ("SI043", "Goriska"),
                            ("SI044", "Obalno_kraska"),
                            ("SK010", "Bratislavsky_kraj"),
                            ("SK021", "Trnavsky_kraj"),
                            ("SK022", "Trenciansky_Kraj"),
                            ("SK023", "Nitriansky_kraj"),
                            ("SK031", "Zilinsky_kraj"),
                            ("SK032", "Banskobystricky_kraj"),
                            ("SK041", "Presovsky_kraj"),
                            ("SK042", "Kosicky_kraj"),
                            ("UKC11", "Hartlepool_and_Stockton_on_Tees"),
                            ("UKC12", "South_Teesside"),
                            ("UKC13", "Darlington"),
                            ("UKC14", "Durham_CC"),
                            ("UKC21", "Northumberland"),
                            ("UKC22", "Tyneside"),
                            ("UKC23", "Sunderland"),
                            ("UKD11", "West_Cumbria"),
                            ("UKD12", "East_Cumbria"),
                            ("UKD33", "Manchester"),
                            ("UKD34", "Greater_Manchester_South_West"),
                            ("UKD35", "Greater_Manchester_South_East"),
                            ("UKD36", "Greater_Manchester_North_West"),
                            ("UKD37", "Greater_Manchester_North_East"),
                            ("UKD41", "Blackburn_with_Darwen"),
                            ("UKD42", "Blackpool"),
                            ("UKD44", "Lancaster_and_Wyre"),
                            ("UKD45", "Mid_Lancashire"),
                            ("UKD46", "East_Lancashire"),
                            ("UKD47", "Chorley_and_West_Lancashire"),
                            ("UKD61", "Warrington"),
                            ("UKD62", "Cheshire_East"),
                            ("UKD63", "Cheshire_West_and_Chester"),
                            ("UKD71", "East_Merseyside"),
                            ("UKD72", "Liverpool"),
                            ("UKD73", "Sefton"),
                            ("UKD74", "Wirral"),
                            ("UKE11", "Kingston_upon_Hull_City_of"),
                            ("UKE12", "East_Riding_of_Yorkshire"),
                            ("UKE13", "North_and_North_East_Lincolnshire"),
                            ("UKE21", "York"),
                            ("UKE22", "North_Yorkshire_CC"),
                            ("UKE31", "Barnsley_Doncaster_and_Rotherham"),
                            ("UKE32", "Sheffield"),
                            ("UKE41", "Bradford"),
                            ("UKE42", "Leeds"),
                            ("UKE44", "Calderdale_and_Kirklees"),
                            ("UKE45", "Wakefield"),
                            ("UKF11", "Derby"),
                            ("UKF12", "East_Derbyshire"),
                            ("UKF13", "South_and_West_Derbyshire"),
                            ("UKF14", "Nottingham"),
                            ("UKF15", "North_Nottinghamshire"),
                            ("UKF16", "South_Nottinghamshire"),
                            ("UKF21", "Leicester"),
                            ("UKF22", "Leicestershire_CC_and_Rutland"),
                            ("UKF24", "West_Northamptonshire"),
                            ("UKF25", "North_Northamptonshire"),
                            ("UKF30", "Lincolnshire"),
                            ("UKG11", "Herefordshire_County_of"),
                            ("UKG12", "Worcestershire"),
                            ("UKG13", "Warwickshire"),
                            ("UKG21", "Telford_and_Wrekin"),
                            ("UKG31", "Birmingham"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Country_code",
                    ),
                ),
                (
                    "the_BIRD_RTNG_GRD_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rtng_grd_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_grade_Country_assignment",
                "verbose_name_plural": "Rating_grade_Country_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_GRD_OTHR_ORGNSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_RTNG_GRD_OTHR_ORGNSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_GRD_OTHR_ORGNSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "RTNG_GRD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_grade",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
                (
                    "the_BIRD_RTNG_GRD_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rtng_grd_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_grade_Other_organisation_assignment",
                "verbose_name_plural": "Rating_grade_Other_organisation_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_SYSTM_EIL",
            fields=[
                (
                    "BIRD_RTNG_SYSTM_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_SYSTM_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "RTNG_SYSTM_TYP_BY_NTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("5", "Graded_Rating_System"),
                            ("6", "Numeric_rating_system"),
                            ("3", "Central_government_rating_system"),
                            ("1", "Issue_based_rating_system"),
                            ("4", "Non_Central_government_rating_system"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_type_by_nature_Grade_vs_Numeric_",
                    ),
                ),
                (
                    "SHRT_TRM_CRDT_ASSSSMNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Short_term_credit_assessment"),
                            ("2", "Not_short_term_credit_assessment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Short_term_credit_assessment_indicator",
                    ),
                ),
                (
                    "TYP_RTNG_SYSTM",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("5", "Graded_Rating_System"),
                            ("6", "Numeric_rating_system"),
                            ("3", "Central_government_rating_system"),
                            ("1", "Issue_based_rating_system"),
                            ("4", "Non_Central_government_rating_system"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_rating_system",
                    ),
                ),
                (
                    "the_BIRD_RTNG_AGNCY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rtng_agncy_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_system",
                "verbose_name_plural": "Rating_systems",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_SYSTM_APPLD_LGL_PRSN_EIL",
            fields=[
                (
                    "BIRD_RTNG_SYSTM_APPLD_LGL_PRSN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_SYSTM_APPLD_LGL_PRSN_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "PD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Probability_of_default",
                    ),
                ),
                (
                    "the_BIRD_PRTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prty_eil",
                    ),
                ),
                (
                    "the_BIRD_RTNG_SYSTM_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rtng_systm_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_system_applied_to_a_Legal_person",
                "verbose_name_plural": "Rating_system_applied_to_a_Legal_persons",
            },
        ),
        migrations.AddField(
            model_name="bird_rtng_grd_eil",
            name="the_BIRD_RTNG_SYSTM_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_rtng_systm_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_SBSDRY_JNT_VNTR_ASSCT_OTHR_ORGNSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_SBSDRY_JNT_VNTR_ASSCT_OTHR_ORGNSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SBSDRY_JNT_VNTR_ASSCT_OTHR_ORGNSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "OTHR_ORGNSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other_organisation_role_type",
                    ),
                ),
                (
                    "GRP_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Group_ID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "ACCMLTD_EQT_INTRST",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_equity_interest",
                    ),
                ),
                (
                    "ACCNTNG_TRTMNT_CRR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Full_consolidation"),
                            ("2", "Proportional_consolidation"),
                            ("3", "Equity_method"),
                            (
                                "4",
                                "Other_than_Full_consolidation_Proportional_consolidation_Equity_method",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_treatment_CRR_Group_",
                    ),
                ),
                (
                    "ACCNTNG_TRTMNT_IFRS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Full_consolidation"),
                            ("2", "Proportional_consolidation"),
                            ("3", "Equity_method"),
                            (
                                "4",
                                "Other_than_Full_consolidation_Proportional_consolidation_Equity_method",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_treatment_IFRS_Group_",
                    ),
                ),
                (
                    "ACQSTN_CST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Acquisition_cost",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "DT_ENTRY",
                    models.DateTimeField(
                        blank=True, default=None, null=True, verbose_name="Entry_date"
                    ),
                ),
                (
                    "FV_INVSTMNTS_PBLSHD_PRC_QTTNS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_of_investments_for_which_there_are_published_price_quotations",
                    ),
                ),
                (
                    "GDWLL_INVST",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Goodwill_link_to_the_investee",
                    ),
                ),
                (
                    "SBSDRY_JNT_VNTR_ASSCT_OTHR_ORGNSTN_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Subsidiary_joint_venture_and_associate_Subsidiary_assignment",
                            ),
                            (
                                "2",
                                "Subsidiary_joint_venture_and_associate_Joint_venture_assignment",
                            ),
                            (
                                "3",
                                "Subsidiary_joint_venture_and_associate_Associate_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Subsidiary_joint_venture_and_associate_Other_organisation_assignment_type",
                    ),
                ),
                (
                    "VTNG_RGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Voting_rights_",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_GRP_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_grp_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subsidiary_joint_venture_and_associate_Other_organisation_role_assignment",
                "verbose_name_plural": "Subsidiary_joint_venture_and_associate_Other_organisation_role_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_ENTTY_RL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_SCRTY_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_ENTTY_RL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "SCRTY_ENTTY_RL_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Debt_security_Debtor_assignment"),
                            ("2", "Security_Issuer_assignment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_Entity_role_assignment_type",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_Entity_role_assignment",
                "verbose_name_plural": "Security_Entity_role_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_RTNG_GRD_ISS_BSD_RTNG_SSTM_DBT_SCRTY_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_RTNG_GRD_ISS_BSD_RTNG_SSTM_DBT_SCRTY_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_RTNG_GRD_ISS_BSD_RTNG_SSTM_DBT_SCRTY_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "RTNG_SYSTM_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_system_name",
                    ),
                ),
                (
                    "RTNG_AGNCY_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_agency_name",
                    ),
                ),
                (
                    "RTNG_GRD",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Rating_grade",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "SCRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Security_Reference_date",
                    ),
                ),
                (
                    "SCRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_RTNG_GRD_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rtng_grd_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating_grade_for_issue_based_rating_system_Debt_security_assignment",
                "verbose_name_plural": "Rating_grade_for_issue_based_rating_system_Debt_security_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_FNNCL_GRNT_INSTRMNT_DBT_SCRT_DBT_SCRTY_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_FNNCL_GRNT_INSTRMNT_DBT_SCRT_DBT_SCRTY_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_FNNCL_GRNT_INSTRMNT_DBT_SCRT_DBT_SCRTY_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Financial_guarantee_instrument_covering_a_Debt_security_Debt_security_assignment",
                "verbose_name_plural": "Financial_guarantee_instrument_covering_a_Debt_security_Debt_security_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_DBT_SCRTY_ISSD_EIL",
            fields=[
                (
                    "BIRD_DBT_SCRTY_ISSD_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_DBT_SCRTY_ISSD_EIL_uniqueID",
                    ),
                ),
                (
                    "DBT_SCRTY_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Debt_Security_Reference_date",
                    ),
                ),
                (
                    "DBT_SCRTY_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_Security_Reporting_agent_identifier",
                    ),
                ),
                (
                    "DBT_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_Security_identifier",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "ACCNTNG_HDG_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Accounting_hedge"),
                            ("2", "Not_accounting_hedge"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_hedge_indicator",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "DBT_SCRTY_ISSD_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_security_issued_prudential_portfolio_type",
                    ),
                ),
                (
                    "FV_HRRCHY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Level_1"),
                            ("2", "Level_2"),
                            ("3", "Level_3"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_hierarchy",
                    ),
                ),
                (
                    "FVO_DSGNTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("2", "Management_on_a_fair_value_basis"),
                            ("5", "Management_of_credit_risk_Upon_designation"),
                            ("6", "Management_of_credit_risk_After_the_designation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_option_designation",
                    ),
                ),
                (
                    "HLD_SL_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Held_for_sale"),
                            ("2", "Not_held_for_sale"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Held_for_sale_indicator",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "NN_PRFRMNG_PRR_FRBRNC_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Non_performing_prior_to_forbearance"),
                            ("2", "Not_non_performing_prior_to_forbearance"),
                            ("1_x2", "Non_performing_prior_to_forbearance_x2"),
                            ("2_x2", "Not_non_performing_prior_to_forbearance_x2"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Non_performing_prior_to_forbearance_indicator",
                    ),
                ),
                (
                    "DBT_SCRTY_ISSD_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("22", "Issued_debt_security_in_the_banking_book"),
                            (
                                "23",
                                "Issued_debt_security_in_the_trading_book_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "24",
                                "Issued_debt_security_in_the_trading_book_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("21", "Issued_debt_security_in_the_trading_book"),
                            ("0", "Not_applicable"),
                            ("19", "Performing_debt_security"),
                            ("20", "Non_performing_debt_security"),
                            ("15", "Fair_valued_debt_security_issued"),
                            ("16", "Non_fair_valued_debt_security_issued"),
                            ("17", "Perpetual_debt_security"),
                            ("18", "Non_perpetual_debt_security"),
                            (
                                "8",
                                "International_securities_identification_number_ISIN_security",
                            ),
                            (
                                "9",
                                "Non_International_securities_identification_number_ISIN_security",
                            ),
                            ("11", "Debt_security_without_underlying_assets"),
                            ("13", "Asset_backed_security"),
                            ("14", "Covered_bond"),
                            ("3", "Exchange_tradable_option"),
                            ("4", "Exchange_tradable_future"),
                            ("5", "Fund_security"),
                            ("6", "Equity_security"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Debt_security_issued_type",
                    ),
                ),
                (
                    "TYP_PRDCT",
                    models.CharField(
                        blank=True,
                        choices=[("640", "Hybrid_contracts")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_product",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV_CR",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value_due_to_credit_risk",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "FV_CHNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_change",
                    ),
                ),
                (
                    "HRCTS_TRDNG_PSTNS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Haircuts_for_trading_positions_valued_at_fair_value",
                    ),
                ),
                (
                    "STRT_DT_PRD",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Start_date_of_the_period",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Debt_security_issued_by_the_reporting_agent_",
                "verbose_name_plural": "Debt_security_issued_by_the_reporting_agent_s",
            },
        ),
        migrations.CreateModel(
            name="BIRD_CVRD_BND_ISSNC_EIL",
            fields=[
                (
                    "BIRD_CVRD_BND_ISSNC_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_CVRD_BND_ISSNC_EIL_uniqueID",
                    ),
                ),
                (
                    "CVRD_BND_PRGRM_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Covered_bond_program_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "the_BIRD_CVRD_BND_PRGRM_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_cvrd_bnd_prgrm_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Covered_bond_issuance",
                "verbose_name_plural": "Covered_bond_issuances",
            },
        ),
        migrations.AddField(
            model_name="bird_clltrl_eil",
            name="the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_HDGD_EXCHNG_TRDBL_DRVTV_EIL",
            fields=[
                (
                    "BIRD_SCRTY_HDGD_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_HDGD_EXCHNG_TRDBL_DRVTV_EIL_uniqueID",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVTV_PSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Exchange_tradable_derivative_position_as_a_hedge"),
                            (
                                "6",
                                "Non_balance_sheet_recognised_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "7",
                                "Fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "8",
                                "Non_fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "10",
                                "Non_fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                            (
                                "9",
                                "Fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_position_role_type",
                    ),
                ),
                (
                    "the_BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_exchng_trdbl_drvtv_postn_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_position_hedged_by_Exchange_tradable_derivative_position",
                "verbose_name_plural": "Security_position_hedged_by_Exchange_tradable_derivative_positions",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_PSTN_EIL",
            fields=[
                (
                    "BIRD_SCRTY_PSTN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_PSTN_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "APPLCTN_FRBRNC_STTS_DT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Current_reference_period_date"),
                            ("-1", "Any_date_Total_"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Date_period_of_application_of_forbearance_measure",
                    ),
                ),
                (
                    "DFLT_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Default_status",
                    ),
                ),
                (
                    "DFLT_STTS_DRVD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            (
                                "18",
                                "Default_because_both_unlikely_to_pay_and_more_than_90_180_days_past_due",
                            ),
                            ("19", "Default_because_unlikely_to_pay"),
                            ("20", "Default_because_more_than_90_180_days_past_due"),
                            ("14", "Not_in_default"),
                            ("23", "Stage_1_IFRS_"),
                            ("24", "Stage_2_IFRS_"),
                            ("25", "Stage_3_IFRS_"),
                            ("26", "Specific_allowances_GAAP_"),
                            ("27", "POCI_IFRS_"),
                            ("211", "General_allowances_for_credit_risk"),
                            (
                                "214",
                                "General_allowances_for_credit_risk_Part_affecting_carrying_amount",
                            ),
                            ("212", "General_allowances_for_banking_risk"),
                            (
                                "213",
                                "General_allowances_for_banking_risk_Part_affecting_carrying_amount",
                            ),
                            ("6", "Default"),
                            ("11", "Performing"),
                            (
                                "3",
                                "Performing_exposures_Exited_from_NPE_in_the_last_12_months",
                            ),
                            ("1", "Non_performing"),
                            ("12", "Non_performing_exposures_Defaulted"),
                            ("13", "Non_performing_exposures_Impaired"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Derived_default_status",
                    ),
                ),
                (
                    "FRBRNC_MSR_GRNTD_RFRNC_PRD_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Forbearance_measure_granted_during_the_reference_period",
                            ),
                            (
                                "2",
                                "No_Forbearance_measure_granted_during_the_reference_period",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Forbearance_measure_granted_during_reference_period_indicator",
                    ),
                ),
                (
                    "FRBRNC_MSR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "11",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions",
                            ),
                            ("1", "Grace_period_payment_moratorium"),
                            ("3", "Extension_of_maturity_term"),
                            ("4", "Rescheduled_payments"),
                            ("5", "Debt_forgiveness"),
                            ("6", "Debt_asset_swaps"),
                            ("7", "Other_forbearance_measures"),
                            ("0", "Not_applicable"),
                            (
                                "10",
                                "Forborne_instruments_with_modified_interest_rate_below_market_conditions_x2",
                            ),
                            ("8", "Forborne_Refinanced_debt"),
                            (
                                "9",
                                "Forborne_instruments_with_other_modified_terms_and_conditions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Forbearance_measure",
                    ),
                ),
                (
                    "FV",
                    models.BigIntegerField(
                        blank=True, default=None, null=True, verbose_name="Fair_value"
                    ),
                ),
                (
                    "FV_CHNG",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Fair_value_change",
                    ),
                ),
                (
                    "FV_HRRCHY",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Level_1"),
                            ("2", "Level_2"),
                            ("3", "Level_3"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Fair_value_hierarchy",
                    ),
                ),
                (
                    "LTGTN_STTS",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Pre_litigation"),
                            ("2", "In_litigation"),
                            ("3", "Not_in_litigation_pre_litigation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Litigation_status",
                    ),
                ),
                (
                    "NGTBL_SCRTY_PSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("17", "Forborne_long_non_negotiable_security_position"),
                            (
                                "18",
                                "Non_forborne_long_non_negotiable_security_position",
                            ),
                            ("20", "Long_negotiable_security_position"),
                            ("1", "Long_debt_security_position"),
                            ("2", "Long_equity_or_fund_security_position"),
                            ("6", "Short_security_position"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Negotiable_security_position_indicator",
                    ),
                ),
                (
                    "OWN_CMPNY_INVSTMNT_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("1", "Own_company_investment"),
                            ("2", "Non_own_company_investment"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Own_company_investment_indicator",
                    ),
                ),
                (
                    "TYP_SCRTY_PSTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("17", "Forborne_long_non_negotiable_security_position"),
                            (
                                "18",
                                "Non_forborne_long_non_negotiable_security_position",
                            ),
                            ("20", "Long_negotiable_security_position"),
                            ("1", "Long_debt_security_position"),
                            ("2", "Long_equity_or_fund_security_position"),
                            ("6", "Short_security_position"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_security_position",
                    ),
                ),
                (
                    "ACCMLTD_CHNGS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Accumulated_changes_in_fair_value",
                    ),
                ),
                (
                    "CRRNT_LTV_RT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Current_loan_to_value_ratio",
                    ),
                ),
                (
                    "CRRYNG_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Carrying_amount",
                    ),
                ),
                (
                    "DT_FRBRNC_STTS",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date_of_forbearance_and_renegotiation_status",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_ENTTY_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_entty_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_position",
                "verbose_name_plural": "Security_positions",
            },
        ),
        migrations.AddField(
            model_name="bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
            name="the_BIRD_SCRTY_PSTN_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_scrty_pstn_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_LNG_NN_NGTBL_SCRTY_PSTN_CLLTRL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_LNG_NN_NGTBL_SCRTY_PSTN_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_LNG_NN_NGTBL_SCRTY_PSTN_CLLTRL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "CLLTRL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Collateral_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "ALLCTD_UNSD_CLLTRL_VL",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Allocated_unused_collateral_value",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "CLLTRL_VL_UNCPPD",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Allocated_collateral_value_uncapped_pre_haircuts",
                    ),
                ),
                (
                    "the_BIRD_CLLTRL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_clltrl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_non_negotiable_security_position_Collateral_assignment",
                "verbose_name_plural": "Long_non_negotiable_security_position_Collateral_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_FR_SCRTY_PSTNS_EIL",
            fields=[
                (
                    "BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_FR_SCRTY_PSTNS_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_FNDMNTL_RVW_TRDNG_BK_STNDRD_APPRCH_RSK_MSR_FR_SCRTY_PSTNS_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "RSK_FCTR_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_identifier",
                    ),
                ),
                (
                    "RSK_MSR_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Delta_sensitivity"),
                            ("5", "Vega_sensitivity"),
                            ("6", "Curvature"),
                            (
                                "1",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positions",
                            ),
                            (
                                "2",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positions",
                            ),
                            (
                                "3",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_Security_positions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_measure_type",
                    ),
                ),
                (
                    "RSK_MSR_TYP_PSTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Delta_sensitivity"),
                            ("5", "Vega_sensitivity"),
                            ("6", "Curvature"),
                            (
                                "1",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_OTC_positions",
                            ),
                            (
                                "2",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_ETD_positions",
                            ),
                            (
                                "3",
                                "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_Security_positions",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_measure_type_by_position",
                    ),
                ),
                (
                    "CRRNCY_RCRD",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("YER", "Yemeni_Rial"),
                            ("KZT", "Tenge"),
                            ("KGS", "Som"),
                            ("EUR", "Euro"),
                            ("BOB", "Boliviano"),
                            ("HKD", "Hong_Kong_Dollar"),
                            ("NPR", "Nepalese_Rupee"),
                            ("KMF", "Comoro_Franc"),
                            ("ISK", "Iceland_Krona"),
                            ("CVE", "Cape_Verde_Escudo"),
                            ("CDF", "Congolese_Franc"),
                            ("BND", "Brunei_Dollar"),
                            ("XUA", "ADB_Unit_of_Account"),
                            ("NOK", "Norwegian_Krone"),
                            ("SGD", "Singapore_Dollar"),
                            ("GTQ", "Quetzal"),
                            ("PYG", "Guarani"),
                            ("HNL", "Lempira"),
                            (
                                "XBD",
                                "Bond_Markets_Unit_European_Unit_of_Account_17_E_U_A_17_",
                            ),
                            ("NGN", "Naira"),
                            ("COU", "Unidad_de_Valor_Real"),
                            ("CZK", "Czech_koruna"),
                            ("SYP", "Syrian_Pound"),
                            ("SVC", "El_Salvador_Colon"),
                            ("GMD", "Dalasi"),
                            ("BBD", "Barbados_Dollar"),
                            ("AZN", "Azerbaijanian_Manat"),
                            ("MXN", "Mexican_Peso"),
                            ("STD", "Dobra"),
                            ("PLN", "Polish_zloty"),
                            ("CLF", "Unidades_de_fomento"),
                            ("ZAR", "South_African_Rand"),
                            ("RUB", "Russian_Ruble"),
                            ("MNT", "Tugrik"),
                            ("KHR", "Riel"),
                            ("LKR", "Sri_Lanka_Rupee"),
                            ("XBA", "Bond_Markets_Unit_European_Composite_Unit_EURCO_"),
                            ("BDT", "Taka"),
                            ("SOS", "Somali_Shilling"),
                            ("JOD", "Jordanian_Dinar"),
                            ("COP", "Colombian_Peso"),
                            ("IDR", "Rupiah"),
                            ("ZMW", "Zambian_Kwacha"),
                            ("DZD", "Algerian_Dinar"),
                            ("CHF", "Swiss_franc"),
                            ("TWD", "New_Taiwan_Dollar"),
                            ("USD", "US_dollar"),
                            ("AUD", "Australian_Dollar"),
                            ("UAH", "Hryvnia"),
                            ("VES", "Bolivar_Soberano"),
                            ("LBP", "Lebanese_Pound"),
                            ("MKD", "Denar"),
                            ("TTD", "Trinidad_and_Tobago_Dollar"),
                            ("MWK", "Kwacha"),
                            ("CAD", "Canadian_Dollar"),
                            ("BZD", "Belize_Dollar"),
                            ("UYI", "Uruguay_Peso_en_Unidades_Indexadas_URUIURUI_"),
                            ("XSU", "Sucre"),
                            ("UYW", "Unidad_Previsional"),
                            ("KWD", "Kuwaiti_Dinar"),
                            ("BWP", "Pula"),
                            ("CLP", "Chilean_Peso"),
                            ("DOP", "Dominican_Peso"),
                            ("AMD", "Armenian_Dram"),
                            ("PGK", "Kina"),
                            ("CNY", "Yuan_Renminbi"),
                            ("ALL", "Lek"),
                            ("TMT", "Turkmenistan_New_Manat"),
                            ("XPT", "Platinum_one_Troy_ounce_"),
                            ("UGX", "Uganda_Shilling"),
                            ("ARS", "Argentine_Peso"),
                            ("MXV", "Mexican_Unidad_de_Inversion_UDI_"),
                            ("AFN", "Afghani"),
                            ("RSD", "Serbian_Dinar"),
                            ("HUF", "Hungarian_forint"),
                            ("PAB", "Balboa"),
                            ("ERN", "Nakfa"),
                            ("FJD", "Fiji_Dollar"),
                            ("MGA", "Malagasy_Ariary"),
                            ("SCR", "Seychelles_Rupee"),
                            ("EGP", "Egyptian_Pound"),
                            ("JPY", "Japanese_yen"),
                            ("BYN", "Belarussian_Ruble"),
                            ("BMD", "Bermudian_Dollar"),
                            ("SZL", "Lilangeni"),
                            ("KPW", "North_Korean_Won"),
                            ("USN", "US_Dollar_Next_day_"),
                            ("FKP", "Falkland_Islands_Pound"),
                            ("ZWL", "Zimbabwe_Dollar"),
                            ("RON", "Romanian_leu"),
                            ("VEF", "Bolivar"),
                            ("AWG", "Aruban_Florin"),
                            ("AED", "UAE_Dirham"),
                            ("ILS", "New_Israeli_Sheqel"),
                            ("ETB", "Ethiopian_Birr"),
                            ("UYU", "Peso_Uruguayo"),
                            ("XOF", "CFA_Franc_BCEAO"),
                            ("GYD", "Guyana_Dollar"),
                            ("PKR", "Pakistan_Rupee"),
                            ("XPF", "CFP_Franc"),
                            ("MRO", "Ouguiya"),
                            ("RWF", "Rwanda_Franc"),
                            ("MAD", "Moroccan_Dirham"),
                            ("HRK", "Croatian_kuna"),
                            ("XCD", "East_Caribbean_Dollar"),
                            ("SAR", "Saudi_Riyal"),
                            ("ANG", "Netherlands_Antillean_Guilder"),
                            ("UZS", "Uzbekistan_Sum"),
                            ("XDR", "Special_Drawing_Rights_SDR_"),
                            ("STN", "Dobra_x2"),
                            ("MYR", "Malaysian_Ringgit"),
                            ("IRR", "Iranian_Rial"),
                            ("KRW", "Won"),
                            ("SEK", "Swedish_krona"),
                            ("DKK", "Danish_krone"),
                            ("TZS", "Tanzanian_Shilling"),
                            ("GNF", "Guinea_Franc"),
                            ("MDL", "Moldovan_Leu"),
                            ("IQD", "Iraqi_Dinar"),
                            ("CHE", "WIR_Euro"),
                            ("CRC", "Costa_Rican_Colon"),
                            ("SBD", "Solomon_Islands_Dollar"),
                            ("GEL", "Lari"),
                            ("PEN", "Nuevo_Sol"),
                            ("AOA", "Kwanza"),
                            (
                                "XBB",
                                "Bond_Markets_Unit_European_Monetary_Unit_E_M_U_6_",
                            ),
                            ("KYD", "Cayman_Islands_Dollar"),
                            ("GIP", "Gibraltar_Pound"),
                            ("HTG", "Gourde"),
                            (
                                "XXX",
                                "Code_assigned_for_transactions_where_no_currency_is_involved",
                            ),
                            ("LRD", "Liberian_Dollar"),
                            ("LSL", "Loti"),
                            ("XTS", "Codes_specifically_reserved_for_testing_purposes"),
                            ("BOV", "Mvdol"),
                            ("BAM", "Convertible_Mark"),
                            ("XAF", "CFA_Franc_BEAC"),
                            ("QAR", "Qatari_Rial"),
                            ("NIO", "Cordoba_Oro"),
                            ("GHS", "Ghana_Cedi"),
                            ("NZD", "New_Zealand_Dollar"),
                            ("BIF", "Burundi_Franc"),
                            ("XPD", "Palladium_one_Troy_ounce_"),
                            ("DJF", "Djibouti_Franc"),
                            ("THB", "Baht"),
                            ("NAD", "Namibia_Dollar"),
                            ("CHW", "WIR_Franc"),
                            ("MUR", "Mauritius_Rupee"),
                            ("CUP", "Cuban_Peso"),
                            ("GBP", "UK_pound_sterling"),
                            ("MZN", "Mozambique_Metical"),
                            ("SDG", "Sudanese_Pound"),
                            ("MVR", "Rufiyaa"),
                            ("MMK", "Kyat"),
                            ("TND", "Tunisian_Dinar"),
                            ("PHP", "Philippine_Peso"),
                            ("XAG", "Silver_one_Troy_ounce_"),
                            ("BTN", "Ngultrum"),
                            ("MRU", "Ouguiya_x2"),
                            ("SRD", "Surinam_Dollar"),
                            ("JMD", "Jamaican_Dollar"),
                            ("SLL", "Leone"),
                            ("VUV", "Vatu"),
                            ("TJS", "Somoni"),
                            ("SSP", "South_Sudanese_Pound"),
                            ("KES", "Kenyan_Shilling"),
                            ("TRY", "Turkish_Lira"),
                            ("XAU", "Gold_one_Troy_ounce_"),
                            ("BHD", "Bahraini_Dinar"),
                            ("VND", "Dong"),
                            ("LAK", "Kip"),
                            ("BSD", "Bahamian_Dollar"),
                            ("CUC", "Peso_Convertible"),
                            ("BRL", "Brazilian_Real"),
                            ("WST", "Tala"),
                            ("SHP", "Saint_Helena_Pound"),
                            ("INR", "Indian_Rupee"),
                            ("TOP", "Pa_anga"),
                            ("LYD", "Libyan_Dinar"),
                            (
                                "XBC",
                                "Bond_Markets_Unit_European_Unit_of_Account_9_E_U_A_9_",
                            ),
                            ("BGN", "Bulgarian_lev"),
                            ("OMR", "Rial_Omani"),
                            ("MOP", "Pataca"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Currency_of_record",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reference_date",
                    ),
                ),
                (
                    "RSK_FCTR_STNDRDSD_APPRCH_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk_factor_for_standardised_approach_Reporting_agent_identifier",
                    ),
                ),
                (
                    "SHCK_DRCTN",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Not_applicable"), ("1", "Up"), ("2", "Down")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Shock_direction",
                    ),
                ),
                (
                    "CRVTR_RSK_WGHT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_risk_weight",
                    ),
                ),
                (
                    "CRVTR_VLTN_DFFRNC",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Curvature_valuation_difference",
                    ),
                ),
                (
                    "DLT_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Delta_sensitivity",
                    ),
                ),
                (
                    "OPTN_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Option_maturity",
                    ),
                ),
                (
                    "TNR",
                    models.FloatField(
                        blank=True, default=None, null=True, verbose_name="Tenor"
                    ),
                ),
                (
                    "UNDRLYNG_RSDL_MTRTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Underlying_residual_maturity",
                    ),
                ),
                (
                    "VG_SNSTVTY",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Vega_sensitivity",
                    ),
                ),
                (
                    "the_BIRD_RSK_FAC_SA_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rsk_fac_sa_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_security_positions",
                "verbose_name_plural": "Fundamental_review_of_the_trading_book_standard_approach_risk_measure_for_security_positionss",
            },
        ),
        migrations.CreateModel(
            name="BIRD_DBT_SCRTY_PRTCTN_ARRNGMNT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_DBT_SCRTY_PRTCTN_ARRNGMNT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_DBT_SCRTY_PRTCTN_ARRNGMNT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "PRTCTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Protection_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_role_type",
                    ),
                ),
                (
                    "PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Party_identifier",
                    ),
                ),
                (
                    "ALLCTD_UNSD_CLLTRL_VL",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Allocated_unused_collateral_value",
                    ),
                ),
                (
                    "PRTCTN_ALLCTD_VL",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Protection_allocated_value",
                    ),
                ),
                (
                    "the_BIRD_PRTCTN_ARRNGMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_prtctn_arrngmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Long_security_position_Protection_arrangement_assignment",
                "verbose_name_plural": "Long_security_position_Protection_arrangement_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ASST_PL_DBT_SCRTY_PSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_ASST_PL_DBT_SCRTY_PSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ASST_PL_DBT_SCRTY_PSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "TRNSFRRD_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Transferred_amount",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asset_pool_Security_position_assignment",
                "verbose_name_plural": "Asset_pool_Security_position_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_PSTN_HDGD_OTC_DRVTV_EIL",
            fields=[
                (
                    "BIRD_SCRTY_PSTN_HDGD_OTC_DRVTV_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_PSTN_HDGD_OTC_DRVTV_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "OTC_DRVTV_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Over_the_counter_OTC_Derivative_Instrument_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "LNG_SCRTY_PSTN_PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "3",
                                "Long_security_position_trading_book_assignment_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Long_security_position_trading_book_assignment_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("5", "Long_security_position_banking_book_assignment"),
                            (
                                "1",
                                "Long_debt_security_position_Prudential_portfolio_assignment",
                            ),
                            (
                                "2",
                                "Long_equity_or_fund_security_position_Prudential_portfolio_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Long_security_position_Prudential_portfolio_type",
                    ),
                ),
                (
                    "TYP_ABSTRCT_INSTRMNT_RL",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_abstract_intrument_role",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "SCRTY_PSTN_HDGD_OTC_DRVTV_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "10",
                                "Non_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "12",
                                "Non_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "34",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            (
                                "35",
                                "Balance_sheet_recognised_financial_asset_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "37",
                                "Non_fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            ("6", "Off_balance_sheet_item_received_instrument"),
                            ("8", "Collateral_given_instrument"),
                            ("9", "Over_the_counter_OTC_Derivative_as_a_hedge"),
                            (
                                "38",
                                "Over_the_counter_OTC_Credit_default_swap_received_as_collateral_instrument",
                            ),
                            ("39", "Other_collateral_received_instrument"),
                            ("0", "Not_applicable"),
                            (
                                "46",
                                "Fair_valued_Balance_sheet_recognised_financial_liability_instrument_according_to_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "47",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument_according_to_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                            ("501", "Forborne_off_balance_sheet_item_given_instrument"),
                            (
                                "71",
                                "Collateral_received_instrument_obtained_by_taking_possession",
                            ),
                            ("72", "Not_obtained_collateral_received_instrument"),
                            ("1", "Instrument_role"),
                            ("3", "Financial_asset_instrument"),
                            ("4", "Financial_liability_instrument"),
                            ("7", "Collateral_received_instrument"),
                            ("5", "Off_balance_sheet_item_given_instrument"),
                            ("44", "Serviced_asset_instrument"),
                            ("18", "Fixed_interest_financial_asset_instrument"),
                            (
                                "11",
                                "Balance_sheet_recognised_financial_asset_instrument",
                            ),
                            ("16", "Renegotiated_financial_asset_instrument"),
                            ("23", "Non_retail_exposure_financial_asset_instrument"),
                            ("20", "Interest_only_financial_asset_instrument"),
                            ("19", "Non_fixed_interest_financial_asset_instrument"),
                            (
                                "22",
                                "Potential_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("17", "Non_renegotiated_financial_asset_instrument"),
                            ("21", "Non_interest_only_financial_asset_instrument"),
                            (
                                "42",
                                "Fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "43",
                                "Non_fair_valued_balance_sheet_recognised_financial_asset_instrument",
                            ),
                            (
                                "15",
                                "Renegotiated_financial_asset_instrument_with_forbearance_measure",
                            ),
                            (
                                "14",
                                "Renegotiated_financial_asset_instrument_without_forbearance_measure",
                            ),
                            (
                                "25",
                                "Non_performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            (
                                "24",
                                "Performing_non_retail_exposure_class_financial_asset_instrument",
                            ),
                            ("27", "Financial_asset_instrument_debtor_assessed"),
                            ("26", "Financial_asset_instrument_individually_assessed"),
                            (
                                "30",
                                "Performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "31",
                                "Non_performing_financial_asset_instrument_debtor_assessed",
                            ),
                            (
                                "28",
                                "Default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "29",
                                "Non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "33",
                                "Non_performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "32",
                                "Performing_non_default_financial_asset_instrument_individually_assessed",
                            ),
                            (
                                "13",
                                "Balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "36",
                                "Fair_valued_balance_sheet_recognised_financial_liability_instrument",
                            ),
                            (
                                "502",
                                "Non_Forborne_off_balance_sheet_item_given_instrument",
                            ),
                            ("2", "Over_the_counter_OTC_Derivative_role"),
                            (
                                "40",
                                "Debt_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            (
                                "41",
                                "Equity_or_fund_security_position_hedged_by_Over_the_counter_OTC_derivative",
                            ),
                            ("48", "Past_due_financial_asset_instrument"),
                            ("49", "Not_past_due_financial_asset_instrument"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_position_hedged_by_Over_the_counter_OTC_derivative_type",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_ABSTRCT_INSTRMNT_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_abstrct_instrmnt_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_LNG_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_lng_scrty_pstn_prdntl_prtfl_assgnmnt_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_position_hedged_by_Over_the_counter_OTC_derivative",
                "verbose_name_plural": "Security_position_hedged_by_Over_the_counter_OTC_derivatives",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCRTY_SCRTY_RPRCHS_AGRMNT_CMPNNT_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_SCRTY_SCRTY_RPRCHS_AGRMNT_CMPNNT_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCRTY_SCRTY_RPRCHS_AGRMNT_CMPNNT_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_agreement_Instrument_identifier",
                    ),
                ),
                (
                    "RPRCHS_AGRMNT_CMPNNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Cash_leg"),
                            ("3", "Security_leg"),
                            ("4", "Loans_and_advances_leg"),
                            ("5", "Equity_instrument_leg"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Repurchase_component_type",
                    ),
                ),
                (
                    "SCRTY_SCRTY_RPRCHS_AGRMNT_CMPNNT_ASSGNMNT_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "11",
                                "Debt_security_Security_repurchase_agreement_component_assignment",
                            ),
                            (
                                "12",
                                "Equity_or_fund_security_Security_repurchase_agreement_component_assignment",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_Security_repurchase_agreement_component_assignment_type",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_RPRCHS_AGRMNT_CMPNNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_rprchs_agrmnt_cmpnnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_Security_leg_assignment",
                "verbose_name_plural": "Security_Security_leg_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SCTRY_BRRWNG_LNDNG_TRNSCTN_INCLDNG_CSH_CLLTRL_EIL",
            fields=[
                (
                    "BIRD_SCTRY_BRRWNG_LNDNG_TRNSCTN_INCLDNG_CSH_CLLTRL_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SCTRY_BRRWNG_LNDNG_TRNSCTN_INCLDNG_CSH_CLLTRL_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_BRRWNG_LNDNG_TRNSCTN_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_borrowing_and_lending_transaction_Instrument_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "SCRTY_BRRWNG_LNDNG_TRNSCTN_CMPNNT_TYP_BY_DRCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("10", "Security_lending_component"),
                            ("5", "Security_borrowing_component"),
                            (
                                "1",
                                "Security_borrowing_and_lending_transaction_cash_as_collateral_component",
                            ),
                            (
                                "3",
                                "Debt_security_borrowing_and_lending_transaction_component",
                            ),
                            (
                                "4",
                                "Equity_or_fund_security_borrowing_and_lending_transaction_component",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_borrowing_and_lending_transaction_component_type_by_direction",
                    ),
                ),
                (
                    "TYP_SCTRY_BRRWNG_LNDNG_TRNSCTN_INCLDNG_CSH_CLLTRL",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "Not_applicable"),
                            ("10", "Security_lending_component"),
                            ("5", "Security_borrowing_component"),
                            (
                                "1",
                                "Security_borrowing_and_lending_transaction_cash_as_collateral_component",
                            ),
                            (
                                "3",
                                "Debt_security_borrowing_and_lending_transaction_component",
                            ),
                            (
                                "4",
                                "Equity_or_fund_security_borrowing_and_lending_transaction_component",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_security_borrowing_lending_transcription",
                    ),
                ),
                (
                    "NMBR_SHRS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Number_of_shares",
                    ),
                ),
                (
                    "NMNL_AMNT",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Nominal_amount",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Security_borrowing_and_lending_transaction_including_cash_as_collateral_component",
                "verbose_name_plural": "Security_borrowing_and_lending_transaction_including_cash_as_collateral_components",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SHRT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_SHRT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SHRT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INVSTR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_role_type",
                    ),
                ),
                (
                    "PRDNTL_PRTFL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Trading_book"),
                            ("2", "Non_trading_book"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Prudential_portfolio_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "INVSTR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Investor_Party_identifier",
                    ),
                ),
                (
                    "SHRT_PSTN_ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Short_position_accounting_classification",
                    ),
                ),
                (
                    "TYP_SHRT_SCRTY_PSTN_PRDNTL_PRTFL_ASSGNMNT",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "Short_banking_book_security_position"),
                            (
                                "3",
                                "Short_trading_book_security_position_International_Financial_Reporting_Standard_IFRS_",
                            ),
                            (
                                "4",
                                "Short_trading_book_security_position_national_general_accepted_accounting_principles_nGAAP_",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_short_position_prudential_portfolio_assignment",
                    ),
                ),
                (
                    "HRCTS_TRDNG_PSTNS_FV",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Haircuts_for_trading_positions_valued_at_fair_value",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_PSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_pstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Short_security_position_prudential_portfolio_assignment",
                "verbose_name_plural": "Short_security_position_prudential_portfolio_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_SNTHTC_SCRTSTN_EIL",
            fields=[
                (
                    "BIRD_SNTHTC_SCRTSTN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_SNTHTC_SCRTSTN_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "SCRTSTN_RFRNC_DT",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Securitisation_Reference_date",
                    ),
                ),
                (
                    "SCRTSTN_RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "AMNT_DRCGNSD_CPTL_PRPS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="AMNT_DRCGNSD_CPTL_PRPS",
                    ),
                ),
                (
                    "PRCNTG_RTND",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Percentage_retained",
                    ),
                ),
                (
                    "RSCRTSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Re_securitisation"),
                            ("2", "Not_re_securitisation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Re_securitisation_indicator",
                    ),
                ),
                (
                    "STS_SCRTSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Simple_transparent_and_standardised_STS_securitisation",
                            ),
                            (
                                "2",
                                "Not_simple_transparent_and_standardised_STS_securitisation",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Simple_transparent_and_standardised_STS_securitisation_indicator",
                    ),
                ),
                (
                    "TYP_SNTHTC_SCRTSTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("5", "Covered_bond_program"),
                            (
                                "6",
                                "Credit_transfer_other_than_securitisation_and_covered_bond_program",
                            ),
                            ("7", "Securitisation"),
                            (
                                "3",
                                "Synthetic_securitisation_without_involvement_of_an_SSPE",
                            ),
                            ("4", "Synthetic_securitisation_involving_an_SSPE"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Type_of_synthetic_securitisation",
                    ),
                ),
                (
                    "SGNFCNT_RSK_TRNSFR_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Significant_risk_transfer"),
                            ("2", "Not_significant_risk_transfer"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Significant_risk_transfer_indicator",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Synthetic_securitisation",
                "verbose_name_plural": "Synthetic_securitisations",
            },
        ),
        migrations.CreateModel(
            name="BIRD_OTC_DRVTV_INSTRMNT_SNTHTC_SCRTSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_OTC_DRVTV_INSTRMNT_SNTHTC_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_OTC_DRVTV_INSTRMNT_SNTHTC_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "OTC_DRVTV_INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Over_the_counter_OTC_Derivative_Instrument_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SNTHTC_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_snthtc_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Over_the_counter_OTC_Derivative_instrument_Synthetic_securitisation_assignment",
                "verbose_name_plural": "Over_the_counter_OTC_Derivative_instrument_Synthetic_securitisation_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_ETD_LBLTY_PSTN_SNTHTC_SCRTSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_ETD_LBLTY_PSTN_SNTHTC_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_ETD_LBLTY_PSTN_SNTHTC_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "SLLR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_identifier",
                    ),
                ),
                (
                    "SLLR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Seller_Party_role_type",
                    ),
                ),
                (
                    "BYR_PRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_identifier",
                    ),
                ),
                (
                    "BYR_PRTY_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("10", "Securitisation_special_purpose_entity_SSPE_"),
                            ("11", "Master_netting_counterparty"),
                            ("12", "Security_debtor"),
                            ("13", "Investor"),
                            ("15", "Lessor"),
                            ("14", "Buyer"),
                            ("16", "Factor"),
                            ("17", "Creditor"),
                            ("18", "Depositor"),
                            ("19", "Lessee"),
                            ("20", "Seller"),
                            ("21", "Original_lender"),
                            ("22", "Servicer"),
                            ("23", "Swap_provider"),
                            ("24", "Protection_provider"),
                            ("25", "Originator"),
                            ("26", "Central_counterparty_client"),
                            ("27", "Deposit_taking_corporation"),
                            ("28", "Loan_debtor"),
                            ("30", "Subsidiary"),
                            ("31", "Joint_venture"),
                            ("32", "Associate"),
                            ("33", "Lender"),
                            ("35", "Borrower"),
                            ("36", "Beneficiary"),
                            ("4", "Assigned_debtor"),
                            ("5", "Non_qualifying_central_counterparty"),
                            ("6", "Qualifying_central_counterparty_QCCP_"),
                            ("7", "Clearing_member"),
                            ("8", "Issuer"),
                            ("9", "Sponsor"),
                            ("0", "Not_applicable"),
                            ("41", "Partner_enterprise"),
                            ("42", "Linked_enterprise"),
                            ("43", "Immediate_parent_enterprise"),
                            ("44", "Key_management_personnel"),
                            ("29", "Other_organisation_role"),
                            ("40", "Natural_person_group_role"),
                            ("37", "Entity_group_role"),
                            ("38", "Entity_transaction_role"),
                            ("1", "Legal_person_role"),
                            ("2", "Organisation_role"),
                            ("3", "Party_role"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Buyer_Party_role_type",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVT_SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_Security_identifier",
                    ),
                ),
                (
                    "EXCHNG_TRDBL_DRVTV_PSTN_RL_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "Exchange_tradable_derivative_position_as_a_hedge"),
                            (
                                "6",
                                "Non_balance_sheet_recognised_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "7",
                                "Fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "8",
                                "Non_fair_valued_exchange_tradable_derivative_liability_position",
                            ),
                            (
                                "10",
                                "Non_fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                            (
                                "9",
                                "Fair_valued_balance_sheet_recognised_exchange_tradable_derivative_asset_position",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Exchange_tradable_derivative_position_role_type",
                    ),
                ),
                (
                    "the_BIRD_EXCHNG_TRDBL_DRVTV_POSTN_RL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_exchng_trdbl_drvtv_postn_rl_eil",
                    ),
                ),
                (
                    "the_BIRD_SNTHTC_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_snthtc_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exchange_tradable_derivative_liability_position_Synthetic_securitisation_assignment",
                "verbose_name_plural": "Exchange_tradable_derivative_liability_position_Synthetic_securitisation_assignments",
            },
        ),
        migrations.AddField(
            model_name="bird_fnncl_cntrct_eil",
            name="the_BIRD_SYNDCTD_CNTRCT_EIL_1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pybird.bird_syndctd_cntrct_eil",
            ),
        ),
        migrations.CreateModel(
            name="BIRD_TRDTNL_SCRTSTN_EIL",
            fields=[
                (
                    "BIRD_TRDTNL_SCRTSTN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_TRDTNL_SCRTSTN_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ASST_PL_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Asset_pool_identifier",
                    ),
                ),
                (
                    "CRDT_FCLTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Credit_facility_identifier",
                    ),
                ),
                (
                    "PRCNTG_RTND",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Percentage_retained",
                    ),
                ),
                (
                    "RSCRTSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Re_securitisation"),
                            ("2", "Not_re_securitisation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Re_securitisation_indicator",
                    ),
                ),
                (
                    "STS_SCRTSTN_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Simple_transparent_and_standardised_STS_securitisation",
                            ),
                            (
                                "2",
                                "Not_simple_transparent_and_standardised_STS_securitisation",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Simple_transparent_and_standardised_STS_securitisation_indicator",
                    ),
                ),
                (
                    "DSCNT_EXCSS_SPRD_AMNT",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Discount_or_excess_spread_amount",
                    ),
                ),
                (
                    "SGNFCNT_RSK_TRNSFR_INDCTR",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Significant_risk_transfer"),
                            ("2", "Not_significant_risk_transfer"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Significant_risk_transfer_indicator",
                    ),
                ),
                (
                    "AMNT_DRCGNSD_CPTL_PRPS",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="AMNT_DRCGNSD_CPTL_PRPS",
                    ),
                ),
                (
                    "the_BIRD_ASST_PL_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_asst_pl_eil",
                    ),
                ),
                (
                    "the_BIRD_CRDT_FCLTY_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_crdt_fclty_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traditional_securitisation",
                "verbose_name_plural": "Traditional_securitisations",
            },
        ),
        migrations.CreateModel(
            name="BIRD_DBT_SCRTY_ISSD_TRDTNL_SCRTSTN_ASSGNMNT_EIL",
            fields=[
                (
                    "BIRD_DBT_SCRTY_ISSD_TRDTNL_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_DBT_SCRTY_ISSD_TRDTNL_SCRTSTN_ASSGNMNT_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "ACCNTNG_CLSSFCTN",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "21",
                                "IFRS_Financial_liabilities_measured_at_amortised_cost",
                            ),
                            ("23", "IFRS_Financial_liabilities_held_for_trading"),
                            (
                                "25",
                                "IFRS_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "31",
                                "nGAAP_Non_trading_non_derivative_financial_liabilities_measured_at_a_cost_based_method",
                            ),
                            ("33", "nGAAP_Trading_financial_liabilities"),
                            (
                                "35",
                                "nGAAP_Financial_liabilities_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "83",
                                "Investments_in_subsidiaries_joint_ventures_and_associates",
                            ),
                            (
                                "832",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Other_than_equity_method",
                            ),
                            (
                                "831",
                                "Investments_in_subsidiaries_joint_ventures_and_associates_Equity_method",
                            ),
                            (
                                "14",
                                "IFRS_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            ("2", "IFRS_Financial_assets_held_for_trading"),
                            ("3", "nGAAP_Trading_Financial_assets"),
                            (
                                "41",
                                "IFRS_Non_trading_financial_assets_mandatorily_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "45",
                                "nGAAP_Cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "47",
                                "nGAAP_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "4",
                                "IFRS_Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "64",
                                "nGAAP_financial_assets_at_fair_value_or_strict_LOCOM",
                            ),
                            ("6", "IFRS_Financial_assets_at_amortised_cost"),
                            (
                                "711",
                                "Accounting_portfolios_for_financial_assets_other_than_classified_as_held_for_sale_excluding_financial_assets_held_for_trading_trading_financial_assets_and_cash_and_cash_balances_at_central_banks_and_other_demand_deposits",
                            ),
                            (
                                "61",
                                "Financial_assets_at_fair_value_other_than_Held_for_trading_and_Trading_Financial_Assets",
                            ),
                            (
                                "15",
                                "nGAAP_Other_Non_trading_Non_derivative_Financial_assets",
                            ),
                            (
                                "13",
                                "nGAAP_Non_trading_non_derivative_financial_instruments_measured_at_a_cost_based_method",
                            ),
                            (
                                "7",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "8",
                                "IFRS_Financial_assets_at_fair_value_through_other_comprehensive_income",
                            ),
                            (
                                "9",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity",
                            ),
                            (
                                "391",
                                "Financial_assets_designated_at_fair_value_through_profit_or_loss",
                            ),
                            (
                                "82",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Not_subject_to_impairment",
                            ),
                            (
                                "81",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_fair_value_to_equity_Subject_to_impairment",
                            ),
                            (
                                "74",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_Other_than_LOCOM",
                            ),
                            (
                                "73",
                                "nGAAP_Other_non_trading_non_derivative_financial_assets_LOCOM",
                            ),
                            (
                                "77",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_Other_than_LOCOM",
                            ),
                            (
                                "76",
                                "nGAAP_Non_trading_non_derivative_financial_assets_measured_at_a_cost_based_method_LOCOM",
                            ),
                            (
                                "85",
                                "nGAAP_Accounting_portfolios_for_trading_financial_instruments_Cost_based_method_or_LOCOM",
                            ),
                            ("90", "Under_IFRS_9_impairment"),
                            ("911", "Measured_under_IAS_37"),
                            ("912", "Measured_under_IFRS_4"),
                            ("92", "Measured_at_fair_value_through_profit_or_loss"),
                            ("93", "Under_nGAAP"),
                            ("0", "Not_applicable"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Accounting_classification",
                    ),
                ),
                (
                    "the_BIRD_DBT_SCRTY_ISSD_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_dbt_scrty_issd_eil",
                    ),
                ),
                (
                    "the_BIRD_TRDTNL_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_trdtnl_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Debt_security_issued_by_the_reporting_agent_Traditional_securitisation_assignment",
                "verbose_name_plural": "Debt_security_issued_by_the_reporting_agent_Traditional_securitisation_assignments",
            },
        ),
        migrations.CreateModel(
            name="BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_DPST_EIL",
            fields=[
                (
                    "BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_DPST_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_DPST_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Tranche_in_a_synthetic_securitisation_without_SSPE_being_a_deposit",
                            ),
                            (
                                "2",
                                "Tranche_in_a_synthetic_securitisation_without_SSPE_being_a_financial_guarantee",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranch_in_a_synthetic_securitisation_without_SSPE_type",
                    ),
                ),
                (
                    "TRNCH_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_identifier",
                    ),
                ),
                (
                    "TRNCH_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_name",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SNTHTC_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_snthtc_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tranche_in_a_synthetic_securitisation_without_securitisation_special_purpose_entity_SSPE_being_a_deposit",
                "verbose_name_plural": "Tranche_in_a_synthetic_securitisation_without_securitisation_special_purpose_entity_SSPE_being_a_deposits",
            },
        ),
        migrations.CreateModel(
            name="BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_FNNCL_GRNT_EIL",
            fields=[
                (
                    "BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_FNNCL_GRNT_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_FNNCL_GRNT_EIL_uniqueID",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "INSTRMNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Instrument_identifier",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "TRNCH_SYNTHTC_SCRTSTN_WTHT_SSPE_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "1",
                                "Tranche_in_a_synthetic_securitisation_without_SSPE_being_a_deposit",
                            ),
                            (
                                "2",
                                "Tranche_in_a_synthetic_securitisation_without_SSPE_being_a_financial_guarantee",
                            ),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranch_in_a_synthetic_securitisation_without_SSPE_type",
                    ),
                ),
                (
                    "TRNCH_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_identifier",
                    ),
                ),
                (
                    "TRNCH_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_name",
                    ),
                ),
                (
                    "the_BIRD_INSTRMNT_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_instrmnt_eil",
                    ),
                ),
                (
                    "the_BIRD_SNTHTC_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_snthtc_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tranche_in_a_synthetic_securitisation_without_securitisation_special_purpose_entity_SSPE_being_a_financial_guarantee",
                "verbose_name_plural": "Tranche_in_a_synthetic_securitisation_without_securitisation_special_purpose_entity_SSPE_being_a_financial_guarantees",
            },
        ),
        migrations.CreateModel(
            name="BIRD_TRNCH_TRDTNL_SCRTSTN_EIL",
            fields=[
                (
                    "BIRD_TRNCH_TRDTNL_SCRTSTN_EIL_uniqueID",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="BIRD_TRNCH_TRDTNL_SCRTSTN_EIL_uniqueID",
                    ),
                ),
                (
                    "SCRTSTN_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_identifier",
                    ),
                ),
                (
                    "DT_RFRNC",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Reference_date",
                    ),
                ),
                (
                    "RPRTNG_AGNT_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Reporting_agent_identifier",
                    ),
                ),
                (
                    "SCRTY_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Security_identifier",
                    ),
                ),
                (
                    "TRNCH_ID",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_identifier",
                    ),
                ),
                (
                    "SCRTSTN_TRNCH_TYP",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("3", "Tranche_in_a_Traditional_securitisation"),
                            ("4", "Tranche_in_a_synthetic_securitisation"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Securitisation_tranche_type",
                    ),
                ),
                (
                    "TRNCH_NM",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Tranche_name",
                    ),
                ),
                (
                    "the_BIRD_SCRTY_EXCHNG_TRDBL_DRVTV_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_scrty_exchng_trdbl_drvtv_eil",
                    ),
                ),
                (
                    "the_BIRD_TRDTNL_SCRTSTN_EIL_1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pybird.bird_trdtnl_scrtstn_eil",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tranche_in_a_Traditional_securitisation",
                "verbose_name_plural": "Tranche_in_a_Traditional_securitisations",
            },
        ),
        migrations.CreateModel(
            name="Choice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("choice_text", models.CharField(max_length=200)),
                ("votes", models.IntegerField(default=0)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pybird.question",
                    ),
                ),
            ],
        ),
    ]
